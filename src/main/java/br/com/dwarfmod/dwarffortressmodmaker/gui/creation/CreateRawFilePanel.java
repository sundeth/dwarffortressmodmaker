/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.com.dwarfmod.dwarffortressmodmaker.gui.creation;

import br.com.dwarfmod.dwarffortressmodmaker.core.ModManager;
import br.com.dwarfmod.dwarffortressmodmaker.data.RawFileTypeEnum;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Ander
 */
public class CreateRawFilePanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateRawFilePanel
     */
    public CreateRawFilePanel() {
        this.initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rawFileNameTextField = new javax.swing.JTextField();
        rawFileClassComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        rawFileDescriptionTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("File name:");

        rawFileClassComboBox.setModel(new DefaultComboBoxModel<RawFileTypeEnum>());

        rawFileDescriptionTextArea.setColumns(20);
        rawFileDescriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(rawFileDescriptionTextArea);

        jLabel3.setText("Description:");

        jLabel2.setText("Object class:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("(Optional)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rawFileNameTextField)
                    .addComponent(rawFileClassComboBox, 0, 292, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rawFileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rawFileClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<RawFileTypeEnum> rawFileClassComboBox;
    private javax.swing.JTextArea rawFileDescriptionTextArea;
    private javax.swing.JTextField rawFileNameTextField;
    // End of variables declaration//GEN-END:variables

    public void fillClassCombo() {
        final DefaultComboBoxModel<RawFileTypeEnum> model = (DefaultComboBoxModel<RawFileTypeEnum>) this.rawFileClassComboBox.getModel();
        model.removeAllElements();
        
        final List<RawFileTypeEnum> values = new LinkedList<>(Arrays.asList(RawFileTypeEnum.values()));
        values.removeIf(x -> x.name().contains("ITEM") || x.isSubType());
        values.add(RawFileTypeEnum.ITEM);
        Collections.sort(values, (o1, o2) -> o1.name().compareTo(o2.name()));
        for (RawFileTypeEnum value : values) {
            model.addElement(value);
        }
    }
    
    public String getRawName() {
        return this.rawFileNameTextField.getText();
    }
    
    public void setRawName(final String name) {
        this.rawFileNameTextField.setText(name);
    }
    
    public String getRawDescription() {
        return this.rawFileDescriptionTextArea.getText();
    }
    
    public void setRawDescription(final String description) {
        this.rawFileDescriptionTextArea.setText(description);
    }
    
    public RawFileTypeEnum getRawType() {
        return (RawFileTypeEnum) this.rawFileClassComboBox.getSelectedItem();
    }
    
    public void setRawType(final RawFileTypeEnum type) {
        this.rawFileClassComboBox.setSelectedItem(type);
    }
    
    public void setRawTypeEditable(final boolean editable) {
        this.rawFileClassComboBox.setEnabled(editable);
    }
}
