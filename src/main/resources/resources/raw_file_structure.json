{
    "type": [
        {
            "name": "BODY",
            "description": "body parts and structures",
            "token": [
                {
                    "Token": "BP",
                    "Arguments": "ID name pluralized name",
                    "Description": "Begin the definition of a body part with the given ID, name, and plural name.  If the plural form would just add an 's' then it can be replaced with 'STP' (which stands for \"Standard Plural\")."
                },
                {
                    "Token": "APERTURE",
                    "Arguments": "",
                    "Description": "Marks the body part as an opening in the body. If it is [EMBEDDED], it cannot be gouged."
                },
                {
                    "Token": "BREATHE",
                    "Arguments": "",
                    "Description": "Body part is used to breathe. If all body parts with [BREATHE] are damaged or destroyed, the creature will suffocate unless it has the [NOBREATHE] tag. Note that bruising counts as (fast-healing) damage."
                },
                {
                    "Token": "CATEGORY",
                    "Arguments": "ID",
                    "Description": "Assigns the body part to a user-defined category. Used by [CON_CAT] to attach to other body parts."
                },
                {
                    "Token": "CON",
                    "Arguments": "value",
                    "Description": "Connects the body part to a specific other body part."
                },
                {
                    "Token": "CON_CAT",
                    "Arguments": "value",
                    "Description": "Connects the body part to all other body parts having the specified [CATEGORY]."
                },
                {
                    "Token": "CONTYPE",
                    "Arguments": "value",
                    "Description": "Connects the body part to all other body parts having the specified type token. Valid values are UPPERBODY, LOWERBODY, HEAD, GRASP, or STANCE."
                },
                {
                    "Token": "CIRCULATION",
                    "Arguments": "",
                    "Description": "Body part is responsible for blood circulation. Exact effects not known."
                },
                {
                    "Token": "CONNECTOR",
                    "Arguments": "",
                    "Description": "Body part is used to connect other body parts together. Used for the neck and lower spine."
                },
                {
                    "Token": "DEFAULT_RELSIZE",
                    "Arguments": "Size",
                    "Description": "This command establishes the relative size of body parts within a creature. The numbers have no absolute meaning or units."
                },
                {
                    "Token": "DIGIT",
                    "Arguments": "",
                    "Description": "Defines part as a digit. Body parts that are digits, or have them as direct sub-parts, can perform gouging attacks within a wrestling hold."
                },
                {
                    "Token": "EMBEDDED",
                    "Arguments": "",
                    "Description": "Body part with this tag is embedded on the surface of parent body part. i.e.: eyes and mouth on head. It cannot be chopped off, can't be used to wrestle enemies and can't be grabbed by them."
                },
                {
                    "Token": "FLIER",
                    "Arguments": "",
                    "Description": "Flags the body part as being needed for flight.  Damage to a certain number of FLIER body parts will prevent the creature from flying.  Note that a creature can only fly if the creature has the [FLIER] tag in its creature definition, and that a flying creature does not actually need any FLIER body parts.  This tag's only purpose is to identify body parts which will cause a creature to lose the ability to fly when damaged."
                },
                {
                    "Token": "GELDABLE",
                    "Arguments": "",
                    "Description": "Creatures with a body part containing this token may be gelded. Gelding may also occur during combat if this body part is damaged sufficiently."
                },
                {
                    "Token": "GRASP",
                    "Arguments": "",
                    "Description": "Creature can wield a picked-up weapon with the body part, and can use the part to initiate almost all wrestling moves. When creatures are spawned with a weapon and shield, one GRASP part will hold a weapon while all others will hold shields. A grasp-able bodypart is needed for Grasp-attacks, which are in turn needed to start a fist fight. Creatures throwing a tantrum, but missing a bodypart with the grasp-property, will be cancelling their fist fight, due to being 'too injured'."
                },
                {
                    "Token": "GUTS",
                    "Arguments": "",
                    "Description": "Body part is susceptible to low blows. Used for guts. Damage to this body part causes nausea and may make the creature lose turns, vomiting uncontrollably."
                },
                {
                    "Token": "HEAD",
                    "Arguments": "",
                    "Description": "Flags the body part as being able to wear head clothing like hats, helms, etc. If all heads are chopped off, the creature dies. Multiple heads are redundant - for example, hydras can survive with several missing heads."
                },
                {
                    "Token": "HEAR",
                    "Arguments": "",
                    "Description": "Body part is used to hear. May be a requirement for the body part to wear earrings."
                },
                {
                    "Token": "INDIVIDUAL_NAME",
                    "Arguments": "name plural",
                    "Description": "Adding individual names tells the game what to call each individual part in a NUMBERed bodypart.  This command replaces \"first upper front tooth\" for example."
                },
                {
                    "Token": "INTERNAL",
                    "Arguments": "",
                    "Description": "Marks the body part as being inside the body. It is behind all the other tissues of the body part, cannot be severed, nor used for wrestling. It cannot be targeted directly in combat, but can be damaged by attacks to the parent body part."
                },
                {
                    "Token": "JOINT",
                    "Arguments": "",
                    "Description": "Body part is a joint. If the limb it's in is grabbed in a wrestling hold, it can be broken with bending force, disabling the parent limb. If the joint is modded to sit outside the body, grabbing and breaking it snaps the entire limb right off."
                },
                {
                    "Token": "LIMB",
                    "Arguments": "",
                    "Description": "Body part is a limb.  It can be used to initiate most wrestling moves. If it is located between an [UPPERBODY] part and a [GRASP] body part, it is eligible to be covered by certain types of armor (body armors and gauntlets). If it is located between a [LOWERBODY] part and a [STANCE] body part, it is eligible to be covered by other types of armor (Leg armors like pants, etc.; trailing body armors like mail shirts and robes; and high boots)."
                },
                {
                    "Token": "LOWERBODY",
                    "Arguments": "",
                    "Description": "Flags the body part as being able to wear lower body clothing like skirts, pants, etc.  If all parts with this token are chopped off or pulped, the creature dies. If the creature has multiple parts with this token, they will not die until all parts with this token have been pulped or severed. No such creature exists in the base game, however."
                },
                {
                    "Token": "LEFT",
                    "Arguments": "",
                    "Description": "Marks body part as on the left side of the body and vulnerable to attacks from the left. Used in conjunction with tags in the b_detail_plan_default raw."
                },
                {
                    "Token": "MOUTH",
                    "Arguments": "",
                    "Description": "Body part is a mouth. Implication unknown."
                },
                {
                    "Token": "NUMBER",
                    "Arguments": "value",
                    "Description": "The number lets you stack identical body parts.  These can be individually damaged by wounds, but you don't have to define them explicitly one by one.  If you don't give them individual names (see teeth) they'll be preceded by ordinal numbers (first, second, etc.). In practice, though, they cannot be individually damaged - if you knock out one tooth, the entire group will be knocked out at once (and will be scattered across the area). Butchering doesn't respect this and produces only a single body part per group. The value is capped at 32."
                },
                {
                    "Token": "NERVOUS",
                    "Arguments": "",
                    "Description": "Body part is the hub of nervous function. Used for the parts of the spine. Damage disables everything in the parent bodypart and what's below it, causing death by suffocation in most cases."
                },
                {
                    "Token": "PREVENTS_PARENT_COLLAPSE",
                    "Arguments": "",
                    "Description": "Body part must be destroyed in order for the attached parent object to be considered destroyed. Found on skulls and spinal columns."
                },
                {
                    "Token": "RIGHT",
                    "Arguments": "",
                    "Description": "Marks body part as on the right side of the body and vulnerable to attacks from the right. Used in conjunction with tags in the b_detail_plan_default raw."
                },
                {
                    "Token": "SKELETON",
                    "Arguments": "",
                    "Description": "Body part is part of the creature's skeleton."
                },
                {
                    "Token": "STANCE",
                    "Arguments": "",
                    "Description": "Allows the creature to stand. Damage or loss of these body parts will cause creature to fall over. Loss of one STANCE part can be substituted with a crutch. Does not give the body part an ability to initiate wrestling moves, unlike [GRASP] or [LIMB]."
                },
                {
                    "Token": "SIGHT",
                    "Arguments": "",
                    "Description": "Body part is used to see with.  If the creature has no SIGHT body parts, or if all its sight body parts are damaged or destroyed, it can't see unless it has the [EXTRAVISION] tag in its creature definition."
                },
                {
                    "Token": "SMELL",
                    "Arguments": "",
                    "Description": "Body part is used to smell. No known function. (could possibly control reactions to miasma in fortress mode?)"
                },
                {
                    "Token": "SMALL",
                    "Arguments": "",
                    "Description": "\"SMALL means that the part isn't displayed as part of the overall displayed body part lists.  They can't be splinted.  They are more often targeted for torture (although those situations might not occur anymore).  They are removed in skeletons if they aren't specifically skeletons/joints/digits/apertures.  They are more easily lost in world gen duels.  They are the only gougable/pinchable parts (note: at least this is no longer the case.). SMALL is an old tag, so it has accumulated some weird functions which'll get split off over time. \" --Toady"
                },
                {
                    "Token": "SOCKET",
                    "Arguments": "",
                    "Description": "Body part breaks off and goes flying if broken, even with blunt force. Used on teeth to make them easy to knock out. Rendered invalid by [INTERNAL]."
                },
                {
                    "Token": "THROAT",
                    "Arguments": "",
                    "Description": "Body part can be strangled. Latching bites that hit the head have a chance to target this instead. Note: this tag doesn't control any bleeding behavior."
                },
                {
                    "Token": "THOUGHT",
                    "Arguments": "",
                    "Description": "The central core of the body. Used with the brain. Damage causes instant death unless the creature has [NO_THOUGHT_CENTER_FOR_MOVEMENT]/[NOTHOUGHT].[Verify]"
                },
                {
                    "Token": "TOTEMABLE",
                    "Arguments": "",
                    "Description": "This bodypart can be turned into a totem by craftsmen. Always drops from slaughtered creatures, no matter how small."
                },
                {
                    "Token": "UPPERBODY",
                    "Arguments": "",
                    "Description": "Flags the body part as being able to wear upper body clothing like coats, breastplates etc.  If all parts with this token are pulped or chopped off, the creature dies. Multiple UPPERBODY parts are redundant, but no such creatures exist in the base game. All default creatures with bodies have the upper body as the root of the body tree, making it impossible to chop off."
                },
                {
                    "Token": "UNDER_PRESSURE",
                    "Arguments": "",
                    "Description": "Makes the body part pop out of the body when cut through. Used on guts. Body part shows up as \"~\" and drags behind the victim when spilled."
                },
                {
                    "Token": "VERMIN_BUTCHER_ITEM",
                    "Arguments": "",
                    "Description": "Allows the item to be obtained from butchered or rotted vermin. Used with shells."
                }
            ],
            "subToken": [
                {
                    "TYPE": "BODYGLOSS"
                }
            ]
        },
        {
            "name": "BODY_DETAIL_PLAN",
            "description": "similar to CREATURE_VARIATION, but used for defining tokens related to body parts (specifically materials, tissues, the assignment thereof, and body part positions, relative sizes, etc",
            "token": [
                {
                    "Token": "BODY_DETAIL_PLAN",
                    "Arguments": "identifier",
                    "Description": "Create a new body detail plan with the specified identifier.  The rest of the tokens in this table are then used to define this body detail plan's properties."
                },
                {
                    "Token": "ADD_MATERIAL",
                    "Arguments": "identifier material template",
                    "Description": "Adds a new material to the creature based on the specified template and assigned to the specified identifier."
                },
                {
                    "Token": "ADD_TISSUE",
                    "Arguments": "identifier tissue template",
                    "Description": "Adds a new tissue to the creature based on the specified template and assigned to the specified identifier."
                },
                {
                    "Token": "BP_LAYERS",
                    "Arguments": "BY_CATEGORY or BY_TYPE or BY_TOKEN body part tissue name or tissue ARG# for innermost tissue tissue thickness tissue name or tissue ARG# for second innermost tissue tissue thickness tissue name or tissue ARG# for third innermost tissue tissue thickness etc...",
                    "Description": "Defines a series of tissue layers. Alternatively to specifying a tissue, variable arguments can be entered (numbered arbitrarily to a max of 5) to be filled with tissues when the plan is called in the creature entry. The SELECT_TISSUE creature token with TL_RELATIVE_THICKNESS can change tissue thickness, but tissue layering is hard to do without a new detail plan."
                },
                {
                    "Token": "BP_LAYERS_OVER",
                    "Arguments": "",
                    "Description": "Works like BP_LAYERS, but defines layers over existing layers."
                },
                {
                    "Token": "BP_LAYERS_UNDER",
                    "Arguments": "",
                    "Description": "Works like BP_LAYERS, but defines layers under existing layers."
                },
                {
                    "Token": "BP_POSITION",
                    "Arguments": "BY_CATEGORY or BY_TYPE or BY_TOKEN body part position token",
                    "Description": "Defines a position for the specified body part (the nose is assigned the position FRONT, as it's on the front of the face). This has some effects on combat, attacks and the like. Valid position tokens are FRONT, BACK, LEFT, RIGHT, TOP and BOTTOM. The position token SIDES is of unverified validity."
                },
                {
                    "Token": "BP_RELATION",
                    "Arguments": "BY_CATEGORY or BY_TYPE or BY_TOKEN body part to be affected relation token BY_CATEGORY or BY_TYPE or BY_TOKEN parent body part coverage",
                    "Description": "Defines a positional relationship between one body part and another (the right eyelid is AROUND the right eye with coverage 50, as it only partially covers the eye). This has some effects on combat, attacks and the like. Valid relation tokens are AROUND, SURROUNDED_BY, ABOVE, BELOW, IN_FRONT, BEHIND, CLEANS, and CLEANED_BY. The lattermost two tokens are used when specifying parts that clean each other (such as eyelids to eyes)."
                },
                {
                    "Token": "BP_RELSIZE",
                    "Arguments": "BY_CATEGORY (or, presumably, BY_TYPE or BY_TOKEN) body part relsize",
                    "Description": "Defines a relsize for the selected body part for the current body detail plan"
                }
            ]
        },
        {
            "name": "BUILDING",
            "description": "custom workshops and smelters",
            "token": [
                {
                    "Token": "NAME",
                    "Arguments": "name",
                    "Description": "The name of the custom building."
                },
                {
                    "Token": "NAME_COLOR",
                    "Arguments": "fg:bg:bright",
                    "Description": "The color of the building's name when querying it. Seemingly ignored for furnaces, which are hardcoded to 4:0:1."
                },
                {
                    "Token": "DIM",
                    "Arguments": "width:height",
                    "Description": "The size of the custom building, in number of tiles. Defaults to 3:3. Maximum possible size is 31x31."
                },
                {
                    "Token": "WORK_LOCATION",
                    "Arguments": "x:y",
                    "Description": "The tile (1:1 for upper-left) in which dwarves will stand when they are performing tasks. Defaults to 3:3 (bottom-right)."
                },
                {
                    "Token": "BUILD_LABOR",
                    "Arguments": "labor token",
                    "Description": "The labor required to construct the custom building. If multiple BUILD_LABOR tokens are specified, then any of the indicated labors can be used to construct the building; if none are specified, then no labors are required.\nFor furnaces, this labor does not come into play until after the workshop has been designed by an architect."
                },
                {
                    "Token": "BUILD_KEY",
                    "Arguments": "key bind",
                    "Description": "The shortcut key used in the Build menu for selecting the custom building. For example: \"CUSTOM_SHIFT_S\""
                },
                {
                    "Token": "BLOCK",
                    "Arguments": "row tiles...",
                    "Description": "Specifies whether or not each workshop tile blocks movement. The first parameter is the row (1 = top), and each subsequent parameter is a 0 (nonblocking) or 1 (blocking) for each column, left to right."
                },
                {
                    "Token": "TILE",
                    "Arguments": "stage row tiles...",
                    "Description": "Specifies the characters used to represent the custom building. The first parameter is the building stage, varying from 0 (awaiting construction) to N (completed) where N is between 1 and 3, the 2nd parameter is the row number, and each subsequent parameter is a character number (or literal character enclosed in 'quotes')."
                },
                {
                    "Token": "COLOR",
                    "Arguments": "stage row colors...",
                    "Description": "Specifies the colors in which the custom building's tiles will be displayed. The first parameter is the building stage, the 2nd parameter is the row number, and subsequent parameters are either sets of 3 numbers (foreground:background:brightness), or the token \"MAT\" to use the color of the primary building material, for each tile in the row. MAT may not be available on BUILDING_FURNACEs.[Verify] However a color settings of 4:0:1 will translate into MAT for furnaces instead."
                },
                {
                    "Token": "BUILD_ITEM",
                    "Arguments": "quantity item token material token",
                    "Description": "Specifies one of the objects necessary to construct the custom building. Each BUILD_ITEM can be followed by zero or more modifiers."
                },
                {
                    "Token": "NEEDS_MAGMA",
                    "Arguments": "",
                    "Description": "Specifies that one of the building's tiles (other than the WORK_LOCATION) must be hanging over magma in order for the building to function. Buildings with this token also ignore the [FUEL] token in their reactions."
                },
                {
                    "Token": "[ANY_BONE_MATERIAL]",
                    "Description": "Item material must have the [BONE] token."
                },
                {
                    "Token": "[ANY_HORN_MATERIAL]",
                    "Description": "Item material must have the [HORN] token."
                },
                {
                    "Token": "[ANY_LEATHER_MATERIAL]",
                    "Description": "Item material must have the [LEATHER] token."
                },
                {
                    "Token": "[ANY_PEARL_MATERIAL]",
                    "Description": "Item material must have the [PEARL] token."
                },
                {
                    "Token": "[ANY_PLANT_MATERIAL]",
                    "Description": "Item material must be subordinate to a PLANT object."
                },
                {
                    "Token": "[ANY_SHELL_MATERIAL]",
                    "Description": "Item material must have the [SHELL] token."
                },
                {
                    "Token": "[ANY_SILK_MATERIAL]",
                    "Description": "Item material must have the [SILK] token."
                },
                {
                    "Token": "[ANY_SOAP_MATERIAL]",
                    "Description": "Item material must have the [SOAP] token."
                },
                {
                    "Token": "[ANY_STRAND_TISSUE]",
                    "Description": "Item is made of a tissue having [TISSUE_SHAPE:STRANDS], intended for matching hair and wool. Must be used with [USE_BODY_COMPONENT]."
                },
                {
                    "Token": "[ANY_TOOTH_MATERIAL]",
                    "Description": "Item material must have the [TOOTH] token."
                },
                {
                    "Token": "[ANY_YARN_MATERIAL]",
                    "Description": "Item material must have the [YARN] token."
                },
                {
                    "Token": "[BAG]",
                    "Description": "Item must be a bag - that is, a BOX made of plant fiber, silk, yarn, or leather."
                },
                {
                    "Token": "[BUILDMAT]",
                    "Description": "Item must be a general building material - BAR, BLOCKS, BOULDER, or WOOD."
                },
                {
                    "Token": "[CAN_USE_ARTIFACT]",
                    "Description": "Item can be an Artifact."
                },
                {
                    "Token": "[CONTAINS_LYE]",
                    "Description": "Item must be a BARREL or TOOL which contains at least one item of type LIQUID_MISC made of LYE."
                },
                {
                    "Token": "[EMPTY]",
                    "Description": "If the item is a container, it must be empty."
                },
                {
                    "Token": "[FIRE_BUILD_SAFE]",
                    "Description": "Item material must be stable at temperatures below 11000. Only works with items of type BAR, BLOCKS, BOULDER, WOOD, and ANVIL - all others are considered unsafe."
                },
                {
                    "Token": "[GLASS_MATERIAL]",
                    "Description": "Item material must have the [IS_GLASS] token. All 3 types of glass have this token hardcoded."
                },
                {
                    "Token": "[HAS_MATERIAL_REACTION_PRODUCT:X]",
                    "Description": "Item's material has a [MATERIAL_REACTION_PRODUCT] token with the appropriate ID."
                },
                {
                    "Token": "[HAS_TOOL_USE:X]",
                    "Description": "Item must be a tool with the specific TOOL_USE value. The item type must be TOOL:NONE for this to make any sense."
                },
                {
                    "Token": "[MAGMA_BUILD_SAFE]",
                    "Description": "Item material must be stable at temperatures below 12000. Only works with items of type BAR, BLOCKS, BOULDER, WOOD, and ANVIL - all others are considered unsafe."
                },
                {
                    "Token": "[METAL_ORE:X]",
                    "Description": "Item material must be an ore of the specified metal."
                },
                {
                    "Token": "[MIN_DIMENSION:X]",
                    "Description": "Item's dimension must be at least this large. The item type must be BAR, POWDER_MISC, LIQUID_MISC, DRINK, THREAD, or CLOTH for this to work."
                },
                {
                    "Token": "[NO_EDGE_ALLOWED]",
                    "Description": "Item must not have an edge, so must be blunt. Sharp stones (produced using knapping) and most types of weapon/ammo can not be used with this token."
                },
                {
                    "Token": "[NOT_CONTAIN_BARREL_ITEM]",
                    "Description": "If the item is a container, it must not contain lye or milk. Not necessary if specifying [EMPTY]."
                },
                {
                    "Token": "[NOT_ENGRAVED]",
                    "Description": "Item can not be engraved. For example, a memorial slab can not be engraved."
                },
                {
                    "Token": "[NOT_WEB]",
                    "Description": "Item must be collected (to distinguish silk thread from webs). Only makes sense for items of type THREAD."
                },
                {
                    "Token": "[POTASHABLE] (Deprecated)",
                    "Description": "Alias for [CONTAINS_LYE]."
                },
                {
                    "Token": "[REACTION_CLASS:X]",
                    "Description": "Item's material has a [REACTION_CLASS] token with the appropriate ID."
                },
                {
                    "Token": "[UNROTTEN]",
                    "Description": "Item must not be rotten, mainly for organic materials."
                },
                {
                    "Token": "[USE_BODY_COMPONENT]",
                    "Description": "Item must be a body part (CORPSE or CORPSEPIECE)."
                },
                {
                    "Token": "[WEB_ONLY]",
                    "Description": "Item must be undisturbed (to distinguish silk thread from webs). Only makes sense for items of type THREAD."
                },
                {
                    "Token": "[WORTHLESS_STONE_ONLY]",
                    "Description": "Item material must be non-economic."
                }
            ]
        },
        {
            "name": "CREATURE",
            "description": "creatures",
            "token": [
                {
                    "Token": "ADOPTS_OWNER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Prevents tamed creature from being made available for adoption, instead allowing it to automatically adopt whoever it wants. The basic requirements for adoption are intact, and the creature will only adopt individuals who have a preference for their species. Used by cats in the vanilla game. When viewing a tame creature with this token, the message \"This animal isn't interested in your wishes\" will appear instead of \"This [adorable] animal can't work\" or \"This animal is waiting to be trained\"."
                },
                {
                    "Token": "ALCOHOL_DEPENDENT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the creature need alcohol to get through the working day; it will choose to drink booze instead of water if possible. Going sober for too long reduces speed."
                },
                {
                    "Token": "ALL_ACTIVE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Sets the creature to be active during the day, night, and twilight in Adventurer Mode. Seems to be a separate value from [DIURNAL]/[NOCTURNAL]/[CREPUSCULAR], rather than implying them.[Verify]"
                },
                {
                    "Token": "ALTTILE",
                    "Type": "Creature",
                    "Arguments": "'character' or tile number",
                    "Description": "If set, the creature will blink between its [TILE] and its ALTTILE."
                },
                {
                    "Token": "AMBUSHPREDATOR",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on [LARGE_PREDATOR]s who ambush their prey. Instead of charging relentlessly at prey, the predator will wait till the prey is within a few squares before charging. May or may not work on other creatures. [Verify]"
                },
                {
                    "Token": "AMPHIBIOUS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows a creature to breathe both in and out of water (unlike [AQUATIC]) - does not prevent drowning in magma."
                },
                {
                    "Token": "APP_MOD_DESC_RANGE",
                    "Type": "Caste",
                    "Arguments": "Range (6 values, low to high)",
                    "Description": "Forum post describing how description ranges work"
                },
                {
                    "Token": "APP_MOD_GENETIC_MODEL",
                    "Type": "Caste",
                    "Arguments": "Model (Accepts DOMINANT_MORE, DOMINANT_LESS, and MIX)",
                    "Description": "Defines a genetic model for the relevant appearance modifier(s). May or may not do anything significant at present."
                },
                {
                    "Token": "APP_MOD_IMPORTANCE",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "Determines how important the appearance modifier is, for determining whether it shows up in the creature description.[Verify]"
                },
                {
                    "Token": "APP_MOD_NOUN",
                    "Type": "Caste",
                    "Arguments": "noun SINGULAR or PLURAL",
                    "Description": "Creates a noun for the appearance, and whether it is singular or plural."
                },
                {
                    "Token": "APP_MOD_RATE",
                    "Type": "Caste",
                    "Arguments": "Rate (integer) Scale (DAILY, YEARLY) min (growth) max (growth) start year start day end year end day",
                    "Description": "Setting the growth rate of the modifier. The last two tokens can be replaced by NO_END to have growth continue indefinitely."
                },
                {
                    "Token": "APPLY_CREATURE_VARIATION",
                    "Type": "Caste",
                    "Arguments": "creature variation ID (optional) any amount of arbitrary arguments",
                    "Description": "Applies the specified creature variation. See Creature_variation_token#Arguments_and_conditional_tokens for how the subsequent arguments may be used."
                },
                {
                    "Token": "APPLY_CURRENT_CREATURE_VARIATION",
                    "Type": "Special",
                    "Arguments": "",
                    "Description": "Applies the effects of all pending [CV_ADD_TAG] and [CV_REMOVE_TAG] tokens that have been defined in the current creature."
                },
                {
                    "Token": "AQUATIC",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Enables the creature to breathe in water, but causes it to air-drown on dry land."
                },
                {
                    "Token": "ARENA_RESTRICTED",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Causes the creature to be excluded from the object testing arena's creature spawning list.  Typically applied to spoileriffic creatures."
                },
                {
                    "Token": "ARTIFICIAL_HIVEABLE",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Enables the creature to be kept in artificial hives by beekeepers."
                },
                {
                    "Token": "AT_PEACE_WITH_WILDLIFE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Prevents the creature from attacking or frightening creatures with the [NATURAL] tag."
                },
                {
                    "Token": "ATTACK",
                    "Type": "Caste",
                    "Arguments": "token bodypart selection criteria location",
                    "Description": "Defines the attack name, and the body part used. See below for valid subtokens Example:\n [ATTACK:GORE:BODYPART:BY_CATEGORY:HORN]\n GORE = name of the attack\n BODYPART:BY_CATEGORY:HORN = the horn is used to attack (presuming the creature has one)"
                },
                {
                    "Token": "ATTACK_TRIGGER",
                    "Type": "Caste",
                    "Arguments": "population exported wealth created wealth",
                    "Description": "Specifies when a megabeast or semi-megabeast will attack the fortress. The attacks will start occuring when at least one of the requirements is met. Setting a value to 0 disables the trigger."
                },
                {
                    "Token": "BABY",
                    "Type": "Caste",
                    "Arguments": "integer",
                    "Description": "Age at which creature is considered a child, the default is zero. One can think of this as the duration of the baby stage."
                },
                {
                    "Token": "BABYNAME",
                    "Type": "Caste",
                    "Arguments": "singular plural",
                    "Description": "Defines a new name for a creature in baby state at the caste level. For non-caste-specific baby names, see [GENERAL_BABY_NAME]."
                },
                {
                    "Token": "BEACH_FREQUENCY",
                    "Type": "Caste",
                    "Arguments": "integer",
                    "Description": "Creature may be subject to beaching, becoming stranded on shores, where they will eventually air-drown. The number indicates the frequency of the occurrence. Presumably requires the creature to be [AQUATIC]. Used by orcas, sperm whales and sea nettle jellyfish in the vanilla game."
                },
                {
                    "Token": "BENIGN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature is non-aggressive by default, and will never automatically be engaged by companions or soldiers, running away from any creatures that are not friendly to it, and will only defend itself if it becomes enraged. Can be thought of as the counterpoint of the [LARGE_PREDATOR] tag. When tamed, animals with this tag will be useless for fortress defense."
                },
                {
                    "Token": "BIOME",
                    "Type": "Creature",
                    "Arguments": "biome token",
                    "Description": "Select a biome the creature may appear in."
                },
                {
                    "Token": "BLOOD",
                    "Type": "Caste",
                    "Arguments": "<material token> <material state>",
                    "Description": "Specifies what the creature's blood is made of."
                },
                {
                    "Token": "BLOODSUCKER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Causes vampire-like behaviour; the creature will suck the blood of unconscious victims when its thirst for blood grows sufficiently large. When controlling the creature in adventure mode, this can be done at will. Seems to be required to make the creature denouncable (in-world) as a creature of the night."
                },
                {
                    "Token": "BODY",
                    "Type": "Caste",
                    "Arguments": "body parts",
                    "Description": "Draws body parts from OBJECT:BODY files (such as body_default.txt) Example:\n [BODY:BODY_WITH_HEAD_FLAG:HEART:GUTS:BRAIN:MOUTH] \n This is the body from a purring maggot. It creates a body with head, a heart, some guts, a brain, and a mouth. That's all a maggot needs. If the body is left undefined, the creature will cause a crash whenever it spawns. [Verify]"
                },
                {
                    "Token": "BODY_APPEARANCE_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE lowest lower low median high higher highest",
                    "Description": "These body modifiers give individual creatures different characteristics. In the case of HEIGHT, BROADNESS and LENGTH, the modifier is also a percentage change to the BODY_SIZE of the individual creature. The seven numbers afterward give a distribution of ranges. Each interval has an equal chance of occurring. Example:\n [BODY_APPEARANCE_MODIFIER:HEIGHT:90:95:98:100:102:105:110] \n HEIGHT : marks the height to be changed \n 90:95:98:100:102:105:110 : sets the range from the shortest (90% of the average height) to the tallest (110% of the average height) creature variation."
                },
                {
                    "Token": "BODY_DETAIL_PLAN",
                    "Type": "Caste",
                    "Arguments": "PlanName Arguments",
                    "Description": "Loads a plan from listed OBJECT:BODY_DETAIL_PLAN files, such as b_detail_plan_default.txt. Mass applies USE_MATERIAL_TEMPLATE, mass alters RELSIZE, alters body part positions, and will allow tissue layers to be defined. Tissue layers are defined in order of skin to bone here. Example:\n [BODY_DETAIL_PLAN:VERTEBRATE_TISSUE_LAYERS:SKIN:FAT:MUSCLE:BONE:CARTILAGE] \n This creates the detailed body of a fox, the skin, fat, muscle, bones and cartilage out of the vertebrate tissues.\n A maggot would only need:\n [BODY_DETAIL_PLAN:EXOSKELETON_TISSUE_LAYERS:SKIN:FAT:MUSCLE]"
                },
                {
                    "Token": "BODY_SIZE",
                    "Type": "Caste",
                    "Arguments": "years days size",
                    "Description": "Sets size at a given age. Size is in cubic centimeters, and for normal body materials, is roughly equal to the creature's average weight in grams. Example:\n [BODY_SIZE:0:0:10000]\n [BODY_SIZE:1:168:50000]\n [BODY_SIZE:12:0:220000]\n This describes the size of a minotaur. Its birth size would be 10,000 cm3 (~10 kg). At 1 year and 168 days old it would be 50,000 cm3 (~50 kg). And as an adult (at 12 years old) it would be 220,000 cm3 and weigh roughly 220 kg."
                },
                {
                    "Token": "BODYGLOSS",
                    "Type": "Caste",
                    "Arguments": "gloss",
                    "Description": "Substitutes body part text with replacement text. Draws gloss information from OBJECT:BODY files (such as body_default.txt)"
                },
                {
                    "Token": "BONECARN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature eats bones. Implies [CARNIVORE]. Adventurers with this token are currently unable to eat bones.Bug:11069"
                },
                {
                    "Token": "BP_ADD_TYPE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Adds a type to a body part - used with [SET_BP_GROUP]. In vanilla DF, this is used for adding the type 'GELDABLE' to the lower body of certain creatures."
                },
                {
                    "Token": "BP_APPEARANCE_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "QUALITY lowest lower low median high higher highest",
                    "Description": "Sets up the breadth of possibilities for appearance qualities for a selected BP group. EG. Eyes (CLOSE_SET, DEEP_SET, ROUND_VS_NARROW, LARGE_IRIS),Lips (THICKNESS), Nose (BROADNESS, LENGTH, UPTURNED, CONVEX), Ear (SPLAYED_OUT, HANGING_LOBES, BROADNESS, HEIGHT), Tooth (GAPS), Skull (HIGH_CHEEKBONES, BROAD_CHIN, JUTTING CHIN, SQUARE_CHIN), Neck (DEEP_VOICE, RASPY_VOICE), Head (BROADNESS, HEIGHT)"
                },
                {
                    "Token": "BP_REMOVE_TYPE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Removes a type from a body part. Used with [SET_BP_GROUP]."
                },
                {
                    "Token": "BUILDINGDESTROYER",
                    "Type": "Caste",
                    "Arguments": "1 or 2",
                    "Description": "Allows a creature to destroy furniture and buildings. Value [1] targets mostly doors, hatches, furniture and the like. Value [2] targets anything not made with the b + C commands."
                },
                {
                    "Token": "CAN_DO_INTERACTION",
                    "Type": "Caste",
                    "Arguments": "interaction token",
                    "Description": "The creature can perform an interaction. See interaction token."
                },
                {
                    "Token": "CAN_LEARN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature gains skills and can have professions. If a member of a civilization (even a pet) has this token, it'll need to eat, drink and sleep. Note that this token makes the creature unable to be eaten by an adventurer, so it is not recommended for uncivilized monsters. Adventurers lacking this token can allocate but not increase attributes and skills. Skills allocated will disappear on start."
                },
                {
                    "Token": "CAN_SPEAK",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Can talk. Note that this is not necessary for a creature to gain social skills."
                },
                {
                    "Token": "CANNOT_CLIMB",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature cannot climb, even if it has free grasp parts."
                },
                {
                    "Token": "CANNOT_JUMP",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature cannot jump."
                },
                {
                    "Token": "CANNOT_UNDEAD",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Acts like [NOT_LIVING], except that [OPPOSED_TO_LIFE] creatures will attack them."
                },
                {
                    "Token": "CANOPENDOORS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to open doors that are set to be unpassable for pets. In adventure mode, creatures lacking this token will be unable to pass through door tiles except whilst these are occupied by other creatures."
                },
                {
                    "Token": "CARNIVORE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature only eats meat. If the creature goes on rampages in worldgen, it will often devour the people/animals it kills. Does not seem to affect the diet of the adventurer in adventure mode."
                },
                {
                    "Token": "CASTE",
                    "Type": "Creature",
                    "Arguments": "name",
                    "Description": "Defines a caste."
                },
                {
                    "Token": "CASTE_ALTTILE",
                    "Type": "Caste",
                    "Arguments": "tile number or \"letter\"",
                    "Description": "Caste-specific [ALTTILE]. Requires [CASTE_TILE]."
                },
                {
                    "Token": "CASTE_COLOR",
                    "Type": "Caste",
                    "Arguments": "fg bg brightness",
                    "Description": "Caste-specific [COLOR]."
                },
                {
                    "Token": "CASTE_GLOWCOLOR",
                    "Type": "Caste",
                    "Arguments": "fg bg brightness",
                    "Description": "Caste-specific [GLOWCOLOR]."
                },
                {
                    "Token": "CASTE_GLOWTILE",
                    "Type": "Caste",
                    "Arguments": "tile value or \"letter\"",
                    "Description": "Caste-specific [GLOWTILE]."
                },
                {
                    "Token": "CASTE_NAME",
                    "Type": "Caste",
                    "Arguments": "singular plural adjective",
                    "Description": "Caste-specific [NAME]."
                },
                {
                    "Token": "CASTE_PROFESSION_NAME",
                    "Type": "Caste",
                    "Arguments": "Unit type token (Profession) singular plural",
                    "Description": "Caste-specific [PROFESSION_NAME]."
                },
                {
                    "Token": "CASTE_SOLDIER_ALTTILE",
                    "Type": "Caste",
                    "Arguments": "'character' or tile number",
                    "Description": "Caste-specific [SOLDIER_ALTTILE]. Requires [CASTE_SOLDIER_TILE]."
                },
                {
                    "Token": "CASTE_SOLDIER_TILE",
                    "Type": "Caste",
                    "Arguments": "'character' or tile number",
                    "Description": "Caste-specific [CREATURE_SOLDIER_TILE]."
                },
                {
                    "Token": "CASTE_SPEECH",
                    "Type": "Caste",
                    "Arguments": "speech file",
                    "Description": "Caste-specific [SPEECH]."
                },
                {
                    "Token": "CASTE_TILE",
                    "Type": "Caste",
                    "Arguments": "tile number or \"letter\"",
                    "Description": "Caste-specific [CREATURE_TILE]."
                },
                {
                    "Token": "CAVE_ADAPT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the creature a bonus in caves. Also causes cave adaptation."
                },
                {
                    "Token": "CDI",
                    "Type": "Caste",
                    "Arguments": "Varies",
                    "Description": "Specifies details for the preceding [CAN_DO_INTERACTION] token. See interaction token."
                },
                {
                    "Token": "CHANGE_BODY_SIZE_PERC",
                    "Type": "Caste",
                    "Arguments": "integer",
                    "Description": "Multiplies body size by a factor of (integer)%. 50 halves size, 200 doubles."
                },
                {
                    "Token": "CHANGE_FREQUENCY_PERC",
                    "Type": "Creature",
                    "Arguments": "integer",
                    "Description": "Multiplies frequency by a factor of (integer)%."
                },
                {
                    "Token": "CHILD",
                    "Type": "Caste",
                    "Arguments": "integer",
                    "Description": "Age at which creature is considered an adult - one can think of this as the duration of the child stage. Allows the creature's offspring to be rendered fully tame if trained during their childhood."
                },
                {
                    "Token": "CHILDNAME",
                    "Type": "Caste",
                    "Arguments": "singular plural",
                    "Description": "Defines a new name for a creature in the child state at the caste level. For non-caste-specific child names, see [GENERAL_CHILD_NAME]."
                },
                {
                    "Token": "CLUSTER_NUMBER",
                    "Type": "Creature",
                    "Arguments": "min max",
                    "Description": "The minimum/maximum numbers of how many creatures per spawned cluster. Certain vermin fish use this token in combination with temperate ocean and river biome tokens to perform seasonal migrations. Defaults to 1:1 if not specified."
                },
                {
                    "Token": "CLUTCH_SIZE",
                    "Type": "Caste",
                    "Arguments": "min max",
                    "Description": "Number of eggs laid in one sitting."
                },
                {
                    "Token": "COLONY_EXTERNAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Caste hovers around colony."
                },
                {
                    "Token": "COLOR",
                    "Type": "Creature",
                    "Arguments": "foreground background brightness",
                    "Description": "Color of the creature's tile. See Color for usage."
                },
                {
                    "Token": "COMMON_DOMESTIC",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "When combined with any of [PET], [PACK_ANIMAL], [WAGON_PULLER] and/or [MOUNT], the creature is guaranteed to be domesticated by any civilization with [COMMON_DOMESTIC_PET], [COMMON_DOMESTIC_PACK],  [COMMON_DOMESTIC_PULL] and/or [COMMON_DOMESTIC_MOUNT] respectively. Such civilizations will always have access to the creature, even in the absence of wild populations. This token is invalid on [FANCIFUL] creatures."
                },
                {
                    "Token": "CONVERTED_SPOUSE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creatures of this caste's species with the [SPOUSE_CONVERTER] and [NIGHT_CREATURE_HUNTER] tokens will kidnap [SPOUSE_CONVERSION_TARGET]s of an appropriate sex and convert them into castes with CONVERTED_SPOUSE."
                },
                {
                    "Token": "COOKABLE_LIVE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Set this to allow the creature to be cooked in meals without first being butchered/cleaned. Used by some water-dwelling vermin such as mussels, nautiluses and oysters."
                },
                {
                    "Token": "CRAZED",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature is 'berserk' and will attack all other creatures, except members of its own species that also have the CRAZED tag. It will show Berserk in the unit list. Berserk creatures go on rampages during worldgen much more frequently than non-berserk ones."
                },
                {
                    "Token": "COPY_TAGS_FROM",
                    "Type": "Spec",
                    "Arguments": "CREATURE NAME",
                    "Description": "Copies creature tags, but not caste tags, from another specified creature. Used when making creature variations (i.e. giant animals and animal people). Often used in combination with [APPLY_CREATURE_VARIATION] to import standard variations from a file. Variations are documented in c_variation_default.txt, which also contains the code for giant animals and animal people."
                },
                {
                    "Token": "CREATURE_CLASS",
                    "Type": "Caste",
                    "Arguments": "classname",
                    "Description": "An arbitrary creature classification. Can be set to anything, but the only vanilla uses are GENERAL_POISON (used in syndromes), EDIBLE_GROUND_BUG (used as targets for [GOBBLE_VERMIN_CLASS]), MAMMAL, and POISONOUS (both used for kobold pet eligibility). A single creature can have multiple classes. The full list of tokens that use creature classes is:   Creature tokens: [GOBBLE_VERMIN_CLASS], [GOBBLE_VERMIN_CLASS] Interaction tokens: [IT_AFFECTED_CLASS], [IT_IMMUNE_CLASS] Animal definition (Entity) tokens: [ANIMAL_CLASS], [ANIMAL_FORBIDDEN_CLASS] Position (Entity) token: [ALLOWED_CLASS] Syndrome tokens: [SYN_AFFECTED_CLASS], [SYN_IMMUNE_CLASS], [CE_SENSE_CREATURE_CLASS]"
                },
                {
                    "Token": "CREATURE_SOLDIER_TILE",
                    "Type": "Creature",
                    "Arguments": "'character' or tile number",
                    "Description": "Creatures active in their civilization's military will use this tile instead."
                },
                {
                    "Token": "CREATURE_TILE",
                    "Type": "Creature",
                    "Arguments": "'character' or tile number",
                    "Description": "The symbol of the creature in ASCII mode."
                },
                {
                    "Token": "CREPUSCULAR",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Sets the creature to be active at twilight in adventurer mode."
                },
                {
                    "Token": "CURIOUSBEAST_EATER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows a creature to steal and eat edible items from a site. It will attempt to grab a food item and immediately make its way to the map's edge, where it will disappear with it. If the creature goes on rampages during worldgen, it will often steal food instead of attacking. Trained and tame instances of the creature will no longer display this behavior."
                },
                {
                    "Token": "CURIOUSBEAST_GUZZLER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows a creature to (very quickly) drink your alcohol. Or spill the barrel to the ground. Also affects undead versions of the creature. Unlike food or item thieves, drink thieves will consume your alcohol on the spot rather than run away with one piece of it. Trained and tame instances of the creature will no longer display this behavior."
                },
                {
                    "Token": "CURIOUSBEAST_ITEM",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows a creature to steal things (apparently, of the highest value it can find). It will attempt to grab an item of value and immediately make its way to the map's edge, where it will disappear with it. If the creature goes on rampages in worldgen, it will often steal items instead of attacking - kea birds are infamous for this. Trained and tame instances of the creature will no longer display this behavior. Also, makes the creature unable to drop hauled items until it enters combat."
                },
                {
                    "Token": "CV_ADD_TAG",
                    "Type": "Special",
                    "Arguments": "TAG NAME",
                    "Description": "Adds a tag. Used in conjunction with creature variation templates."
                },
                {
                    "Token": "CV_REMOVE_TAG",
                    "Type": "Special",
                    "Arguments": "TAG NAME",
                    "Description": "Removes a tag. Used in conjunction with creature variation templates."
                },
                {
                    "Token": "DEMON",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on generated demons. Marks the caste to be used in the initial wave after breaking into the underworld, and by the demon civilizations created during world-gen breachings[Verify]v0.47.01. Could not be specified in user-defined raws until version 0.47.01."
                },
                {
                    "Token": "DESCRIPTION",
                    "Type": "Caste",
                    "Arguments": "text",
                    "Description": "A brief description of the creature type, as displayed when viewing the creature's description/thoughts & preferences screen."
                },
                {
                    "Token": "DIE_WHEN_VERMIN_BITE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Causes the creature to die upon attacking. Used by honey bees to simulate them dying after using their stingers."
                },
                {
                    "Token": "DIFFICULTY",
                    "Type": "Caste",
                    "Arguments": "integer",
                    "Description": "Increases experience gain during adventure mode. Creatures with a difficulty of 11 or higher are not assigned for quests in adventure mode."
                },
                {
                    "Token": "DIURNAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Sets the creature to be active during the day in Adventurer Mode."
                },
                {
                    "Token": "DIVE_HUNTS_VERMIN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature hunts vermin by diving from the air. On tame creatures, it has the same effect as [HUNTS_VERMIN]. Found on peregrine falcons."
                },
                {
                    "Token": "DOES_NOT_EXIST",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Adding this token to a creature prevents it from appearing in generated worlds (unless it's marked as always present for a particular civilisation). For example, adding it to dogs will lead to worlds being generated without dogs in them. Also removes the creature from the object testing arena's spawn list. If combined with [FANCIFUL], artistic depictions of the creature will occur regardless. Used by centaurs, chimeras and griffons in the vanilla game. Note: a creature tagged as DOES_NOT_EXIST can still be summoned successfully, as long as it has a body defined in its raws. [1]. It's also possible for another creature to transform into it."
                },
                {
                    "Token": "EBO_ITEM",
                    "Type": "Caste",
                    "Arguments": "item token material token (ANY_HARD_STONE can be used for the material)",
                    "Description": "Defines the item that the creature drops upon being butchered. Used with [EXTRA_BUTCHER_OBJECT]."
                },
                {
                    "Token": "EBO_SHAPE",
                    "Type": "Caste",
                    "Arguments": "gem shape",
                    "Description": "The shape of the creature's extra butchering drop. Used with [EXTRA_BUTCHER_OBJECT]."
                },
                {
                    "Token": "EGG_MATERIAL",
                    "Type": "Caste",
                    "Arguments": "<material token> <material state>",
                    "Description": "Defines the material composition of eggs laid by the creature. Egg-laying creatures in the default game define this 3 times, using LOCAL_CREATURE_MAT:EGGSHELL, LOCAL_CREATURE_MAT:EGG_WHITE, and then LOCAL_CREATURE_MAT:EGG_YOLK. Eggs will be made out of eggshell. Edibility is determined by tags on whites or yolk, but they otherwise do not exist."
                },
                {
                    "Token": "EGG_SIZE",
                    "Type": "Caste",
                    "Arguments": "size",
                    "Description": "Determines the size of laid eggs. Doesn't affect hatching or cooking, but bigger eggs will be heavier, and may take longer to be hauled depending on the hauler's strength."
                },
                {
                    "Token": "EQUIPMENT_WAGON",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Makes the creature appear as a large 3x3 wagon responsible for carrying trade goods, pulled by two [WAGON_PULLER] creatures and driven by a merchant."
                },
                {
                    "Token": "EQUIPS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to wear or wield items."
                },
                {
                    "Token": "EVIL",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The creature is considered evil and will only show up in evil biomes. Civilizations with [USE_EVIL_ANIMALS] can domesticate them regardless of exotic status. Has no effect on cavern creatures except to restrict taming. A civilization with evil creatures can colonise evil areas."
                },
                {
                    "Token": "EXTRA_BUTCHER_OBJECT",
                    "Type": "Caste",
                    "Arguments": "BY_CATEGORY, BY_TYPE, BY_TOKEN TYPE, CATEGORY, or TOKEN",
                    "Description": "The creature drops an additional object when butchered, as defined by [EBO_ITEM] and [EBO_SHAPE]. Used for gizzard stones in default creatures. For some materials, needs to be defined after caste definitions with SELECT_CASTE:ALLBug:6355"
                },
                {
                    "Token": "EXTRACT",
                    "Type": "Caste",
                    "Arguments": "material token",
                    "Description": "Defines a creature extract which can be obtained via small animal dissection."
                },
                {
                    "Token": "EXTRAVISION",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature can see regardless of whether it has working eyes and has full 360 degree vision, making it impossible to strike the creature from a blind spot in combat."
                },
                {
                    "Token": "FANCIFUL",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The creature is a thing of legend and known to all civilizations. Its materials cannot be requested or preferred. The tag also adds some art value modifiers. Used by a number of creatures. Conflicts with [COMMON_DOMESTIC]."
                },
                {
                    "Token": "FEATURE_ATTACK_GROUP",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on subterranean animal-man tribals. Currently defunct. In previous versions, it caused these creatures to crawl out of chasms and underground rivers."
                },
                {
                    "Token": "FEATURE_BEAST",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on forgotten beasts. Presumably makes it act as such, initiating underground attacks on fortresses, or leads to the pop-up message upon encountering one[Verify]. Hides the creature from displaying in a world_sites_and_pops file. Does not create historical figures like generated forgotten beasts do. Could not be specified in user-defined raws until version 0.47.01. Requires specifying a [BIOME] in which the creature will live, and both surface and subterranean biomes are allowed. Does not stack with [LARGE_ROAMING] and if both are used the creature will not spawn. Appears to be incompatible with [DEMON] even if used in separate castes."
                },
                {
                    "Token": "FEMALE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the creature biologically female, enabling her to bear young. Usually specified inside a caste."
                },
                {
                    "Token": "FIREIMMUNE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the creature immune to FIREBALL and FIREJET attacks, and allows it to path through high temperature zones, like lava or fires. Does not, by itself, make the creature immune to the damaging effects of burning in fire, and does not prevent general heat damage or melting on its own (this would require adjustments to be made to the creature's body materials - see the dragon raws for an example)."
                },
                {
                    "Token": "FIREIMMUNE_SUPER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Like [FIREIMMUNE], but also renders the creature immune to DRAGONFIRE attacks."
                },
                {
                    "Token": "FISHITEM",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature's corpse is a single FISH_RAW food item that needs to be cleaned (into a FISH item) at a fishery to become edible. Before being cleaned the item is referred to as \"raw\". The food item is categorized under \"fish\" on the food and stocks screens, and when uncleaned it is sorted under \"raw fish\" in the stocks (but does not show up on the food screen). Without this or [COOKABLE_LIVE], fished vermin will turn into food the same way as non-vermin creatures, resulting in multiple units of food (meat, brain, lungs, eyes, spleen etc.) from a single fished vermin. These units of food are categorized as meat by the game."
                },
                {
                    "Token": "FIXED_TEMP",
                    "Type": "Caste",
                    "Arguments": "temperature",
                    "Description": "The creature's body is constantly at this temperature, heating up or cooling the surrounding area. Alters the temperature of the creature's inventory and all adjacent tiles, with all the effects that this implies - may trigger wildfires at high enough values. Also makes the creature immune to extreme heat or cold, as long as the temperature set is not harmful to the materials that the creature is made from. Note that temperatures of 12000 and higher may cause pathfinding issues in fortress mode."
                },
                {
                    "Token": "FLEEQUICK",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "If engaged in combat, the creature will flee at the first sign of resistance. Used by kobolds in the vanilla game."
                },
                {
                    "Token": "FLIER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows a creature to fly, independent of it having wings or not. Fortress Mode pathfinding only partially incorporates flying - flying creatures need a land path to exist between them and an area in order to access it, but as long as one such path exists, they do not need to use it, instead being able to fly over intervening obstacles. Winged creatures with this token can lose their ability to fly if their wings are crippled or severed. Winged creatures without this token will be unable to fly. (A 'wing' in this context refers to any body part with its own FLIER token)."
                },
                {
                    "Token": "FREQUENCY",
                    "Type": "Creature",
                    "Arguments": "number, max 100",
                    "Description": "Determines the chances of a creature appearing within its environment, with higher values resulting in more frequent appearance. Also affects the chance of a creature being brought in a caravan for trading. The game effectively considers all creatures that can possibly appear and uses the FREQUENCY value as a weight - for example, if there are three creatures with frequencies 10/25/50, the creature with [FREQUENCY:50] will appear approximately 58.8% of the time. Defaults to 50 if not specified. Not to be confused with [POP_RATIO]."
                },
                {
                    "Token": "GAIT",
                    "Type": "Caste",
                    "Arguments": "<gait type> <gait name> <max speed> <build up time> <max turning speed> <start speed> <energy expenditure> <gait flag(s)>",
                    "Description": "Defines a gait by which the creature can move. See Gait for more information. <max speed> indicates the maximum speed achievable by a creature using this gait <start speed> indicates the creature's speed when it starts moving using this gait <build up time> indicates how long it will take for a creature using this gait to go from <start speed> to <max speed>. For example, a value of 10 means that it should be able to reach the maximum speed by moving 10 tiles in a straight line over even terrain. <max turning speed> indicates the maximum speed permissible when the creature suddenly changes its direction of motion. The creature's speed will be reduced to <max turning speed> if travelling at a higher speed than this before turning. <energy expenditure> indicates how energy-consuming the gait is. Higher values cause the creature to tire out faster. Persistent usage of a high-intensity gait will eventually lead to exhaustion and collapse. NO_BUILD_UP can be specified instead of a <start speed> value to make the <max speed> instantly achievable upon initiating movement (this is equivalent to a <build up time> of 0). Note that <build up time> and <max turning speed> are both ignored if specified alongside this (as NO_BUILD_UP trumps <build up time> and preserves <max speed> whilst turning, and <max turning speed> cannot exceed <max speed>) so it is permissible to omit them so long as they are both omitted together. It's possible to specify a <start speed> greater than the <max speed>; the moving creature will decelerate towards its <max speed> in this case. \n valid gait types:  WALK\n Used for moving normally over ground tiles.  CRAWL\n Used for moving over ground tiles whilst prone.  SWIM\n Used for moving through tiles containing water or magma at a depth of at least 4/7.   FLY\n Used for moving through open space.  CLIMB\n Used for moving whilst climbing. \n valid gait flags:  AGILITY\n Speeds/slows movement depending on the creature's Agility stat.  STRENGTH\n Speeds/slows movement depending on the creature's Strength stat.  LAYERS_SLOW\n Makes THICKENS_ON_ENERGY_STORAGE and THICKENS_ON_STRENGTH tissue layers slow movement depending on how thick they are. Adding the STRENGTH gait flag counteracts the impact of the latter layer.  STEALTH_SLOWS:<percentage>\n Slows movement by the specified percentage when the creature is sneaking."
                },
                {
                    "Token": "GENERAL_BABY_NAME",
                    "Type": "Creature",
                    "Arguments": "singular plural",
                    "Description": "Like [BABYNAME], but applied regardless of caste."
                },
                {
                    "Token": "GENERAL_CHILD_NAME",
                    "Type": "Creature",
                    "Arguments": "singular plural",
                    "Description": "Like [CHILDNAME], but applied regardless of caste."
                },
                {
                    "Token": "GENERAL_MATERIAL_FORCE_MULTIPLIER",
                    "Type": "Caste",
                    "Arguments": "value A value B",
                    "Description": "Has the same function as [MATERIAL_FORCE_MULTIPLIER], but applies to all attacks instead of just those involving a specific material. Appears to be overridden by MATERIAL_FORCE_MULTIPLIER (werebeasts, for example, use both tokens to provide resistance to all materials, with one exception to which they are especially vulnerable)."
                },
                {
                    "Token": "GENERATED",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Found on procedurally generated creatures like forgotten beasts, titans, demons, angels, and night creatures. Cannot be specified in user-defined raws."
                },
                {
                    "Token": "GETS_INFECTIONS_FROM_ROT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the creature get infections from necrotic tissue."
                },
                {
                    "Token": "GETS_WOUND_INFECTIONS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the creature's wounds become infected if left untreated for too long."
                },
                {
                    "Token": "GLOWCOLOR",
                    "Type": "Creature",
                    "Arguments": "foreground background brightness",
                    "Description": "The colour of the creature's [GLOWTILE]."
                },
                {
                    "Token": "GLOWTILE",
                    "Type": "Creature",
                    "Arguments": "ascii character",
                    "Description": "If present, the being glows in the dark (generally used for Adventurer Mode). The tile is what replaces the being's current tile when it is obscured from your sight by darkness. The default setting for kobolds (a yellow quotation mark) provides a nice \"glowing eyes\" effect. The game is also hardcoded to automatically convert quotation mark GLOWTILES into apostrophes if the creature has lost one eye. This works at the generic creature level - for caste-specific glow tiles, use [CASTE_GLOWTILE] instead."
                },
                {
                    "Token": "GNAWER",
                    "Type": "Caste",
                    "Arguments": "verb",
                    "Description": "The creature can and will gnaw its way out of animal traps and cages using the specified verb, depending on the material from which it is made (normally wood)."
                },
                {
                    "Token": "GOBBLE_VERMIN_CLASS",
                    "Type": "Caste",
                    "Arguments": "class",
                    "Description": "The creature eats vermin of the specified class."
                },
                {
                    "Token": "GOBBLE_VERMIN_CREATURE",
                    "Type": "Caste",
                    "Arguments": "creature caste",
                    "Description": "The creature eats a specified vermin."
                },
                {
                    "Token": "GO_TO_END",
                    "Type": "Special",
                    "Arguments": "",
                    "Description": "When using tags from an existing creature, inserts new tags at the end of the creature."
                },
                {
                    "Token": "GO_TO_START",
                    "Type": "Special",
                    "Arguments": "",
                    "Description": "When using tags from an existing creature, inserts new tags at the beginning of the creature."
                },
                {
                    "Token": "GO_TO_TAG",
                    "Type": "Special",
                    "Arguments": "",
                    "Description": "When using tags from an existing creature, inserts new tags after the specified tag."
                },
                {
                    "Token": "GOOD",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Creature is considered good and will only show up in good biomes - unicorns, for example. Civilizations with [USE_GOOD_ANIMALS] can domesticate them regardless of exotic status. Has no effect on cavern creatures except to restrict taming. A civilization that has good creatures can colonise good areas in world-gen."
                },
                {
                    "Token": "GRASSTRAMPLE",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "The value determines how rapidly grass is trampled when a creature steps on it - a value of 0 causes the creature to never damage grass, while a value of 100 causes grass to be trampled as rapidly as possible. Defaults to 5."
                },
                {
                    "Token": "GRAVITATE_BODY_SIZE",
                    "Type": "Caste",
                    "Arguments": "target value",
                    "Description": "Used in Creature Variants. This token changes the adult body size to the average of the old adult body size and the target value and scales all intermediate growth stages by the same factor."
                },
                {
                    "Token": "GRAZER",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "The creature is a grazer - if tamed in fortress mode, it needs a pasture to survive. The higher the number, the less frequently it needs to eat in order to live. Not used since 0.40.12, replaced by [STANDARD_GRAZER] to fix Bug 4113."
                },
                {
                    "Token": "HABIT",
                    "Type": "Caste",
                    "Arguments": "type probability",
                    "Description": "Defines certain behaviors for the creature. The habit types are: COLLECT_TROPHIES COOK_PEOPLE COOK_VERMIN GRIND_VERMIN COOK_BLOOD GRIND_BONE_MEAL EAT_BONE_PORRIDGE USE_ANY_MELEE_WEAPON GIANT_NEST COLLECT_WEALTH. These require the creature to have a [LAIR] to work properly, and also don't seem to work on creatures who are not a [SEMIMEGABEAST], [MEGABEAST] or [NIGHT_CREATURE_HUNTER]."
                },
                {
                    "Token": "HABIT_NUM",
                    "Type": "Caste",
                    "Arguments": "number or TEST_ALL",
                    "Description": "\"If you set HABIT_NUM to a number, it should give you that exact number of habits according to the weights.\".[1] All lists of HABITs are preceded by [HABIT_NUM:TEST_ALL]"
                },
                {
                    "Token": "HAS_NERVES",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature has nerves in its muscles. Cutting the muscle tissue can sever motor and sensory nerves."
                },
                {
                    "Token": "HASSHELL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature has a shell. Seemingly no longer used - holdover from previous versions."
                },
                {
                    "Token": "HIVE_PRODUCT",
                    "Type": "Creature",
                    "Arguments": "number time item tokens",
                    "Description": "What product is harvested from beekeeping."
                },
                {
                    "Token": "HOMEOTHERM",
                    "Type": "Caste",
                    "Arguments": "number or NONE",
                    "Description": "Default 'NONE'. The creature's normal body temperature. Creature ceases maintaining temperature on death unlike fixed material temperatures. Provides minor protection from environmental temperature to the creature."
                },
                {
                    "Token": "HUNTS_VERMIN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature hunts and kills nearby vermin."
                },
                {
                    "Token": "IMMOBILE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature cannot move. Found on sponges. Will also stop a creature from breeding in fortress mode (MALE and FEMALE are affected, if one is IMMOBILE no breeding will happen)."
                },
                {
                    "Token": "IMMOBILE_LAND",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature is immobile while on land. Only works on [AQUATIC] creatures which can't breathe on land."
                },
                {
                    "Token": "IMMOLATE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature radiates fire. It will ignite, and potentially completely destroy, items the creature is standing on. Also gives the vermin a high chance of escaping from animal traps and cages made of any flammable materials (specifically ones that could be ignited by magma)."
                },
                {
                    "Token": "INTELLIGENT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Alias for [CAN_SPEAK] + [CAN_LEARN] but additionally keeps creatures from being butchered by the AI during worldgen and post-gen. In fortress mode, [CAN_LEARN] is enough."
                },
                {
                    "Token": "ITEMCORPSE",
                    "Type": "Caste",
                    "Arguments": "item token material token",
                    "Description": "Determines if the creature leaves behind a non-standard corpse (i.e. wood, statue, bars, stone, pool of liquid, etc.). Ethics may prevent actually using the item in jobs or reactions."
                },
                {
                    "Token": "ITEMCORPSE_QUALITY",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "The quality of an item-type corpse left behind. Valid values are: 0 for ordinary, 1 for well-crafted, 2 for finely-crafted, 3 for superior, 4 for exceptional, 5 for masterpiece."
                },
                {
                    "Token": "LAIR",
                    "Type": "Caste",
                    "Arguments": "type probability",
                    "Description": "Found on megabeasts, semimegabeasts, and night creatures. The creature will seek out sites of this type and take them as lairs. The lair types are: SIMPLE_BURROW SIMPLE_MOUND WILDERNESS_LOCATION SHRINE LABYRINTH"
                },
                {
                    "Token": "LAIR_CHARACTERISTIC",
                    "Type": "Caste",
                    "Arguments": "characteristic probability",
                    "Description": "Defines certain features of the creature's lair. The only valid characteristic is HAS_DOORS."
                },
                {
                    "Token": "LAIR_HUNTER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "This creature will actively hunt adventurers in its lair."
                },
                {
                    "Token": "LAIR_HUNTER_SPEECH",
                    "Type": "Caste",
                    "Arguments": "speech file",
                    "Description": "What this creature says while hunting adventurers in its lair."
                },
                {
                    "Token": "LARGE_PREDATOR",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Will attack things that are smaller than it (like dwarves). Only one group of \"large predators\" (possibly two groups on \"savage\" maps) will appear on any given map. In adventure mode, large predators will try to ambush and attack you (and your party will attack them back). When tamed, large predators tend to be much more aggressive to enemies than non-large predators, making them a good choice for an animal army. They may go on rampages in worldgen, and adventurers may receive quests to kill them. Also, they can be mentioned in the intro paragraph when starting a fortress e.g. \"ere the wolves get hungry.\""
                },
                {
                    "Token": "LARGE_ROAMING",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "This is the core requisite tag allowing the creature to spawn as a wild animal in the appropriate biomes. Requires specifying a [BIOME] in which the creature will spawn. Does not require specifying a frequency, population number, or cluster number. This tag stacks with [MEGABEAST], [SEMIMEGABEAST], or [NIGHT_CREATURE_HUNTER]; if used with one of these tags, the creature will spawn as both a boss and as a wild animal. This tag does not stack with [FEATURE_BEAST] and if both are used the creature will not spawn. This tag is uneffected by [DEMON]."
                },
                {
                    "Token": "LAYS_EGGS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature lays eggs instead of giving birth to live young."
                },
                {
                    "Token": "LAYS_UNUSUAL_EGGS",
                    "Type": "Caste",
                    "Arguments": "item token material token",
                    "Description": "Creature lays the specified item instead of regular eggs."
                },
                {
                    "Token": "LIGAMENTS",
                    "Type": "Caste",
                    "Arguments": "material token healing rate",
                    "Description": "The creature has ligaments in its [CONNECTIVE_TISSUE_ANCHOR] tissues (bone or chitin by default). Cutting the bone/chitin tissue severs the ligaments, disabling motor function if the target is a limb."
                },
                {
                    "Token": "LIGHT_GEN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature will generate light, such as in adventurer mode at night."
                },
                {
                    "Token": "LIKES_FIGHTING",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature will attack enemies rather than flee from them. This tag has the same effect on player-controlled creatures - including modded dwarves. Retired as of v0.40.14 in favor of [LARGE_PREDATOR]."
                },
                {
                    "Token": "LISP",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature uses \"sssssnake talk\" (multiplies 'S' when talking - \"My name isss Recisssiz.\"). Used by serpent men and reptile men in the vanilla game. C's with the same pronunciation (depending on the word) are not affected by this token."
                },
                {
                    "Token": "LITTERSIZE",
                    "Type": "Caste",
                    "Arguments": "minimum maximum",
                    "Description": "Determines the number of offspring per one birth."
                },
                {
                    "Token": "LOCAL_POPS_CONTROLLABLEv0.42.01",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Allows you to play as a wild animal of this species in adventurer mode. Prevents trading of (tame) instances of this creature in caravans."
                },
                {
                    "Token": "LOCAL_POPS_PRODUCE_HEROESv0.42.01",
                    "Type": "",
                    "Arguments": "",
                    "Description": "Wild animals of this species may occasionally join a civilization. Prevents trading of (tame) instances of this creature in caravans."
                },
                {
                    "Token": "LOCKPICKER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Lets a creature open doors that are set to forbidden in fortress mode."
                },
                {
                    "Token": "LOOSE_CLUSTERS",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The creatures will scatter if they have this tag, or form tight packs if they don't."
                },
                {
                    "Token": "LOW_LIGHT_VISION",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "Determines how well a creature can see in the dark - higher is better. Dwarves have 10000, which amounts to perfect nightvision."
                },
                {
                    "Token": "MAGICAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "According to Toady One, this is completely interchangeable with [AT_PEACE_WITH_WILDLIFE] and might have been used in very early versions of the game by wandering wizards or the ent-type tree creatures that used to be animated by elves. [2]"
                },
                {
                    "Token": "MAGMA_VISION",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature is able to see while submerged in magma."
                },
                {
                    "Token": "MALE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the creature biologically male. Usually declared inside a caste."
                },
                {
                    "Token": "MANNERISM_*",
                    "Type": "Caste",
                    "Arguments": "occasionally body part",
                    "Description": "Adds a possible mannerism to the creature's profile.  See creature mannerism token for further info."
                },
                {
                    "Token": "MATERIAL",
                    "Type": "Creature",
                    "Arguments": "material id",
                    "Description": "Begins defining a new material.[Verify]"
                },
                {
                    "Token": "MATERIAL_FORCE_MULTIPLIER",
                    "Type": "Caste",
                    "Arguments": "Material token value A value B",
                    "Description": "When struck with a weapon made of the specified material, the force exerted will be multiplied by A/B, thus making the creature more or less susceptible to this material. For example, if A is 2 and B is 1, the force exerted by the defined material will be doubled. If A is 1 and B is 2, it will be halved instead. See also  [GENERAL_MATERIAL_FORCE_MULTIPLIER], which can be used to make this sort of effect applicable to all materials."
                },
                {
                    "Token": "MATUTINAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Sets the creature to be active at dawn in adventurer mode."
                },
                {
                    "Token": "MAXAGE",
                    "Type": "Caste",
                    "Arguments": "min max",
                    "Description": "Determines the creature's natural lifespan, using the specified minimum and maximum age values (in years). Each individual creature with this token is generated with a predetermined date (calculated down to the exact tick!) between these values, at which it is destined to die of old age, should it live long enough. Note that the probability of death at any given age does not increase as the creature gets older [3]. Creatures which lack this token are naturally immortal. The NO_AGING syndrome tag will prevent death by old age from occurring. Also note that, among civilized creatures, castes which lack this token will refuse to marry others with it, and vice versa."
                },
                {
                    "Token": "MEANDERER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the creature slowly stroll around, unless it's in combat or performing a job. If combined with [CAN_LEARN], will severely impact their pathfinding and lead the creature to move extremely slowly when not performing any task. Problematically applies to animal people based on the animal and war trained animalsBug:9588."
                },
                {
                    "Token": "MEGABEAST",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "A 'boss' creature. A small number of the creatures are created during worldgen, their histories and descendants (if any) will be tracked in worldgen (as opposed to simply 'spawning'), and they will occasionally go on rampages, potentially leading to worship if they attack the same place multiple times. Their presence and number will also influence age names. When appearing in fortress mode, they will have a pop-up message announcing their arrival. They will remain hostile to military even after being tamed.Bug:10731 See megabeast page for more details. Requires specifying a [BIOME] in which the creature will live. Subterranean biomes appear to not be allowed. Does stack with [LARGE_ROAMING] and if both are used the creature will spawn as both historical bosses and as wild animals."
                },
                {
                    "Token": "MENT_ATT_CAP_PERC",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE Token Cap %",
                    "Description": "Default is 200.  This means you can increase your attribute to 200% of its starting value (or the average value + your starting value if that is higher)."
                },
                {
                    "Token": "MENT_ATT_RANGE",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE lowest lower low median high higher highest",
                    "Description": "Sets up a mental attribute's range of values (0-5000). All mental attribute ranges default to 200:800:900:1000:1100:1300:2000."
                },
                {
                    "Token": "MENT_ATT_RATES",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE Token cost to improve unused counter rate rust counter rate demotion counter rate",
                    "Description": "Mental attribute gain/decay rates. Lower numbers in the last three slots make decay occur faster. Defaults are 500:4:5:4."
                },
                {
                    "Token": "MILKABLE",
                    "Type": "Caste",
                    "Arguments": "material token frequency",
                    "Description": "Allows the creature to be milked in the farmer's workshop. The frequency is the amount of ticks the creature needs to \"recharge\" (i.e. how much time needs to pass before it can be milked again). Does not work on sentient creatures, regardless of ethics."
                },
                {
                    "Token": "MISCHIEVIOUS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Alias for [MISCHIEVOUS]."
                },
                {
                    "Token": "MISCHIEVOUS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature spawns stealthed and will attempt to path into the fortress, pulling any levers it comes across. It will be invisible on the map and unit list until spotted by a citizen, at which point the game will pause and recenter on the creature. Used by gremlins in the vanilla game. \"They go on little missions to mess with various fortress buildings, not just levers.\""
                },
                {
                    "Token": "MODVALUE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Seemingly no longer used."
                },
                {
                    "Token": "MOUNT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature may be used as a mount. No use for the player in fortress mode, but enemy sieging forces may arrive with cavalry. Mounts are usable in adventure mode."
                },
                {
                    "Token": "MOUNT_EXOTIC",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature may be used as a mount, but civilizations cannot domesticate it in worldgen without certain exceptions."
                },
                {
                    "Token": "MULTIPART_FULL_VISION",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to have all-around vision as long as it has multiple heads that can see."
                },
                {
                    "Token": "MULTIPLE_LITTER_RARE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Makes the species usually produce a single offspring per birth, occasionally producing twins or triplets with a 1/500 chance.  Requires [FEMALE]."
                },
                {
                    "Token": "MUNDANE",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Marks if the creature is an actual real-life creature. Only used for age-names at present."
                },
                {
                    "Token": "NAME",
                    "Type": "Creature",
                    "Arguments": "singular plural adjective",
                    "Description": "The generic name for any creature of this type - will be used when distinctions between caste are unimportant. For names for specific castes, use [CASTE_NAME] instead. If left undefined, the creature will be labeled as \"nothing\" by the game."
                },
                {
                    "Token": "NATURAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Animal is considered to be natural. NATURAL animals will not engage creatures tagged with [AT_PEACE_WITH_WILDLIFE] in combat unless they are members of a hostile entity and vice-versa."
                },
                {
                    "Token": "NATURAL_ANIMAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Alias of [NATURAL]."
                },
                {
                    "Token": "NATURAL_SKILL",
                    "Type": "Caste",
                    "Arguments": "Skill token value",
                    "Description": "The creature possesses the specified skill at this level inherently - that is, it begins with the skill at this level, and the skill may never rust below that. A value of 15 is legendary."
                },
                {
                    "Token": "NIGHT_CREATURE_BOGEYMAN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creatures with this token can appear in bogeyman ambushes in adventure mode, where they adopt classical bogeyman traits such as stalking the adventurer and vaporising when dawn breaks. Such traits do not manifest if the creature is encountered outside of a bogeyman ambush (for instance, as a megabeast or a civilised being). In addition, their corpses and severed body parts turn into smoke after a short while. Note that setting the \"Number of Bogeyman Types\" in advanced world generation to 0 will only remove randomly-generated bogeymen."
                },
                {
                    "Token": "NIGHT_CREATURE_EXPERIMENTERv0.47.01",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on some necromancers. Creatures with this tag may periodically \"perform horrible experiments\" offscreen, during which they can use creature-targeting interactions with an [I_SOURCE:EXPERIMENT] tag on living creatures in their area. Worlds are generated with a list of procedurally-generated experiments, allowing necromancers to turn living people and animals into ghouls and other experimental creatures, and these will automatically be available to all experimenters; it does not appear possible to prevent this. You can mod in your own custom experiment interactions, but these are used very infrequently due to the large number of generated experiments."
                },
                {
                    "Token": "NIGHT_CREATURE_HUNTER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on night trolls and werebeasts. Implies that the creature is a night creature, and shows its description in legends mode entry. The creature is always hostile and will start no quarter combat with any nearby creatures, except for members of its own race. Note that this tag does not override the creature's normal behavior in fortress mode except for the aforementioned aggression, and doesn't prevent the creature from fleeing the battles it started. It also removes the creature's materials from stockpile settings list, making them be stored there regardless of settings. Does stack with [LARGE_ROAMING] and if both are used the creature will spawn as both historical hunters and as wild animals; this requires specifying a [BIOME] in which the creature will live, and subterranean biomes are allowed. This tag causes the usual behaviour of werebeasts in worldgen, that is, fleeing towns upon being cursed and conducting raids from a lair. If this tag is absent from a deity curse, the accursed will simply be driven out of towns in a similar manner to vampires. When paired with SPOUSE_CONVERTER, a very small population of the creature will be created during worldgen (sometimes only a single individual will be created), and their histories will be tracked (that is, they will not spawn spontaneously later, they must either have children or convert other creatures to increase their numbers). The creature will settle in a lair and go on rampages during worldgen. It will actively attempt to seek out potential conversion targets to abduct, convert, and have children with (if possible)."
                },
                {
                    "Token": "NIGHT_CREATURE_NIGHTMAREv0.47.01",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on nightmares. Corpses and severed body parts derived from creatures with this token turn into smoke after a short while."
                },
                {
                    "Token": "NO_AUTUMN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature caste does not appear in autumn."
                },
                {
                    "Token": "NO_CONNECTIONS_FOR_MOVEMENT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature doesn't require connected body parts to move[Verify]; generally used on undead creatures with connections that have rotted away."
                },
                {
                    "Token": "NO_DIZZINESS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature cannot become dizzy."
                },
                {
                    "Token": "NO_DRINK",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature does not need to drink."
                },
                {
                    "Token": "NO_EAT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature does not need to eat. Seems to cause worldgen crashes if it is part of an entity with [PERMITTED_JOB:FISHERMAN][Verify]"
                },
                {
                    "Token": "NO_FEVERS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature cannot suffer fevers."
                },
                {
                    "Token": "NO_GENDER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature is biologically sexless. Makes the creature unable to breed."
                },
                {
                    "Token": "NO_PHYS_ATT_GAIN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature cannot raise any physical attributes."
                },
                {
                    "Token": "NO_PHYS_ATT_RUST",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature cannot lose any physical attributes."
                },
                {
                    "Token": "NO_SLEEP",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature does not need to sleep. Can still be rendered unconscious by other means."
                },
                {
                    "Token": "NO_SPRING",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature caste does not appear in spring."
                },
                {
                    "Token": "NO_SUMMER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature caste does not appear in summer."
                },
                {
                    "Token": "NO_THOUGHT_CENTER_FOR_MOVEMENT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature doesn't require an organ with the [THOUGHT] tag to survive or attack; generally used on creatures that don't have brains."
                },
                {
                    "Token": "NO_UNIT_TYPE_COLOR",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Prevents creature from selecting its color based on its profession (e.g. Miner, Hunter, Wrestler)."
                },
                {
                    "Token": "NO_VEGETATION_PERTURB",
                    "Type": "Caste[Verify]",
                    "Arguments": "",
                    "Description": "Likely prevents the creature from leaving broken vegetation tracks.[Verify]"
                },
                {
                    "Token": "NO_WINTER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature caste does not appear in winter."
                },
                {
                    "Token": "NOBONES",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature has no bones."
                },
                {
                    "Token": "NOBREATHE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature doesn't need to breathe or have [BREATHE] parts in body, nor can it drown or be strangled. Creatures living in magma must have this tag, otherwise they will drown."
                },
                {
                    "Token": "NOCTURNAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Sets the creature to be active at night in adventure mode."
                },
                {
                    "Token": "NOEMOTION",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature has no emotions. It is immune to the effects of stress and unable to rage, and its needs cannot be fulfilled in any way. Used on undead in the vanilla game."
                },
                {
                    "Token": "NOEXERT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature can't become tired or over-exerted from taking too many combat actions or moving at full speed for extended periods of time."
                },
                {
                    "Token": "NOFEAR",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature doesn't feel fear and will never flee from battle, and will be immune to ghosts' attempts to 'scare it to death'. Additionally, it causes bogeymen and nightmares to become friendly towards the creature."
                },
                {
                    "Token": "NOMEAT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature will not drop meat when butchered."
                },
                {
                    "Token": "NONAUSEA",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature isn't nauseated by gut hits and cannot vomit."
                },
                {
                    "Token": "NOPAIN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature doesn't feel pain."
                },
                {
                    "Token": "NOSKIN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature will not drop a hide when butchered."
                },
                {
                    "Token": "NOSKULL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature will not drop a skull on butchering, rot, or decay of severed head."
                },
                {
                    "Token": "NOSMELLYROT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Does not produce miasma when rotting."
                },
                {
                    "Token": "NOSTUCKINS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Weapons can't get stuck in the creature."
                },
                {
                    "Token": "NOSTUN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature can't be stunned and knocked unconscious by pain or head injuries. Creatures with this tag never wake up from sleep in Fortress Mode. If this creature needs to sleep while playing, it will die."
                },
                {
                    "Token": "NOT_BUTCHERABLE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Cannot be butchered."
                },
                {
                    "Token": "NOT_LIVING",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Cannot be raised from the dead by necromancers or evil clouds. Implies the creature is not a normal living being. Used by vampires, mummies and inorganic creatures like the amethyst man and bronze colossus. Creatures who are [OPPOSED_TO_LIFE] (undead) will be docile towards creatures with this token."
                },
                {
                    "Token": "NOTHOUGHT",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature doesn't require a [THOUGHT] body part to survive. Has the added effect of preventing speech, though directly controlling creatures that would otherwise be capable of speaking allows them to engage in conversation."
                },
                {
                    "Token": "ODOR_LEVEL",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "How easy the creature is to smell. The higher the number, the easier the creature is to sniff out. Defaults to 50. Vanilla creatures have values from 0 (undetectable) to 90 (noticeable by humans and dwarves)."
                },
                {
                    "Token": "ODOR_STRING",
                    "Type": "Caste",
                    "Arguments": "string",
                    "Description": "What the creature smells like. If no odor string is defined, the creature name (not the caste name) is used."
                },
                {
                    "Token": "OPPOSED_TO_LIFE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Is hostile to all creatures except undead and other non-living ones and will show Opposed to life in the unit list. Used by undead in the vanilla game. Functions without the [NOT_LIVING] token, and seems to imply said token as well. Undead will not be hostile to otherwise-living creatures given this token. Living creatures given this token will attack living creatures that lack it, while ignoring other living creatures that also have this token."
                },
                {
                    "Token": "ORIENTATION",
                    "Type": "Caste",
                    "Arguments": "MALE/FEMALE disinterested chance lover-possible chance preference(?)-possible chance",
                    "Description": "Determines caste's likelihood of having sexual attraction to certain sexes. Values default to 75:20:5 for the same sex and 5:20:75 for the opposite sex. The first value indicates how likely to be entirely uninterested in the sex, the second decides if the creature will become lovers, the third decides if the creature will \"prefer\" this sex[Verify]. Marriage can happen as long as they are not disinterested. The values themselves are simply ratios and do not need to add up to any particular value."
                },
                {
                    "Token": "OUTSIDER_CONTROLLABLEv0.42.01",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Lets you play as an outsider of this species in adventure mode."
                },
                {
                    "Token": "PACK_ANIMAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to be used as a pack animal. Used by merchants without wagons and adventurers. Also prevents creature from dropping hauled items on its own -- do not use for player-controllable creatures!"
                },
                {
                    "Token": "PARALYZEIMMUNE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature is immune to all paralyzing special attacks."
                },
                {
                    "Token": "PATTERNFLIER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Used to control the bat riders with paralyze-dart blowguns that flew through the 2D chasm. Doesn't do anything now."
                },
                {
                    "Token": "PEARL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "In earlier versions, creature would generate pearls. Does nothing in the current version.[Verify]"
                },
                {
                    "Token": "PENETRATEPOWER",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Controls the ability of vermin to find a way into containers when they are eating food from your stockpiles. Objects made of most materials (e.g. metal) roll a number from 0-100, and if the resulting number is greater than the penetrate power, their contents escape for the time being. Objects made of wood, leather, amber, or coral roll 0-95, and items made of cloth roll 0-90."
                },
                {
                    "Token": "PERSONALITY",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE lowest median highest",
                    "Description": "Determines the range and chance of personality traits. Standard is 0:50:100. See Personality trait for more info."
                },
                {
                    "Token": "PET",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to be tamed in Fortress mode. Prerequisite for all other working animal roles. Civilizations that encounter it in worldgen will tame and domesticate it for their own use. Adding this to civilization members will classify them as pets instead of citizens, with all the problems that entails. However, you can solve these problems using the popular plugin Dwarf Therapist, which is completely unaffected by the tag."
                },
                {
                    "Token": "PET_EXOTIC",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to be tamed in Fortress mode. Prequisite for all other working animal roles. Civilizations cannot domesticate it in worldgen, with certain exceptions. More difficult to tame?[Verify] Adding this to civilization members will classify them as pets instead of citizens, with all the problems that entails. (Example)."
                },
                {
                    "Token": "PETVALUE",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "How valuable a tamed animal is. Actual cost in points in the embarking screen is 1+(PETVALUE/2) for an untrained animal, 1+PETVALUE for a war/hunting one."
                },
                {
                    "Token": "PETVALUE_DIVISOR",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Divides the creature's [PETVALUE] by the specified number. Used by honey bees to prevent a single hive from being worth a fortune."
                },
                {
                    "Token": "PHYS_ATT_CAP_PERC",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE Token Cap %",
                    "Description": "Default is 200. This means you can increase your attribute to 200% of its starting value (or the average value + your starting value if that is higher)."
                },
                {
                    "Token": "PHYS_ATT_RANGE",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE lowest lower low median high higher highest",
                    "Description": "Sets up a physical attribute's range of values (0-5000). All physical attribute ranges default to 200:700:900:1000:1100:1300:2000."
                },
                {
                    "Token": "PHYS_ATT_RATES",
                    "Type": "Caste",
                    "Arguments": "ATTRIBUTE Token cost to improve unused counter rate rust counter rate demotion counter rate",
                    "Description": "Physical attribute gain/decay rates. Lower numbers in the last three slots make decay occur faster. Defaults for STRENGTH, AGILITY, TOUGHNESS, and ENDURANCE are 500:3:4:3, while RECUPERATION and DISEASE_RESISTANCE default to 500:NONE:NONE:NONE."
                },
                {
                    "Token": "PLUS_BP_GROUP",
                    "Type": "Caste",
                    "Arguments": "BY_TYPE, BY_CATEGORY, or BY_TOKEN body type, category, or token",
                    "Description": "Adds a body part group to selected body part group. Presumably used immediately after [SET_BP_GROUP]."
                },
                {
                    "Token": "PLUS_MATERIAL",
                    "Type": "Creature",
                    "Arguments": "material",
                    "Description": "Adds a material to selected materials. Used immediately after [SELECT_MATERIAL]."
                },
                {
                    "Token": "POP_RATIO",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "Weighted population of caste; Lower is rarer. Not to be confused with [FREQUENCY]."
                },
                {
                    "Token": "POPULATION_NUMBER",
                    "Type": "Creature",
                    "Arguments": "min max",
                    "Description": "The minimum/maximum numbers of how many of these creatures are present in each world map tile of the appropriate region. Defaults to 1:1 if not specified."
                },
                {
                    "Token": "POWER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the being to represent itself as a deity, allowing it to become the leader of a civilized group. Used by unique demons in the vanilla game. Requires [CAN_SPEAK] to actually do anything more than settle at a location (e.g. write books, lead armies, profane temples). Doesn't appear to do anything for creatures that are already civilized. Once the creature ascends to a position of leadership, it will proceed to act as a standard ruler for their entity and fulfill the same functions (hold tournaments, tame creatures, etc)."
                },
                {
                    "Token": "PREFSTRING",
                    "Type": "Creature",
                    "Arguments": "string",
                    "Description": "Sets what other creatures prefer about this creature. \"Urist likes dwarves for their beards.\" Multiple entries will be chosen from at random. Creatures lacking a PREFSTRING token will never appear under another's preferences."
                },
                {
                    "Token": "PROFESSION_NAME",
                    "Type": "Creature",
                    "Arguments": "Unit type token (Profession) singular plural",
                    "Description": "The generic name for members of this profession, at the creature level. In order to give members of specific castes different names for professions, use [CASTE_PROFESSION_NAME] instead."
                },
                {
                    "Token": "PRONE_TO_RAGE",
                    "Type": "Caste",
                    "Arguments": "Chance",
                    "Description": "Creature has a percentage chance to flip out at visible non-friendly creatures. Enraged creatures attack anything regardless of timidity and get a strength bonus to their hits. This is what makes badgers so hardcore."
                },
                {
                    "Token": "PUS",
                    "Type": "Caste",
                    "Arguments": "<material token> <material state>",
                    "Description": "The creature has pus. Specifies the stuff secreted by infected wounds."
                },
                {
                    "Token": "RELSIZE",
                    "Type": "Caste",
                    "Arguments": "BY_CATEGORY, BY_TYPE, BY_TOKEN body category, type, or token Relsize",
                    "Description": "Specifies a new relative size for a part than what is stated in the body plan. For example, dwarves have larger livers."
                },
                {
                    "Token": "REMAINS",
                    "Type": "Caste",
                    "Arguments": "singular plural",
                    "Description": "What the creature's remains are called."
                },
                {
                    "Token": "REMAINS_COLOR",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "What color the creature's remains are."
                },
                {
                    "Token": "REMAINS_ON_VERMIN_BITE_DEATH",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Goes with [VERMIN_BITE] and [DIE_WHEN_VERMIN_BITE], the vermin creature will leave remains on death when biting. Leaving this tag out will cause the creature to disappear entirely after it bites."
                },
                {
                    "Token": "REMAINS_UNDETERMINED",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Unknown."
                },
                {
                    "Token": "REMOVE_MATERIAL",
                    "Type": "Creature",
                    "Arguments": "material token",
                    "Description": "Removes a material from the creature."
                },
                {
                    "Token": "REMOVE_TISSUE",
                    "Type": "Creature",
                    "Arguments": "tissue token",
                    "Description": "Removes a tissue from the creature."
                },
                {
                    "Token": "RETRACT_INTO_BP",
                    "Type": "Caste",
                    "Arguments": "BY_TYPE, BY_CATEGORY or BY_TOKEN body type, category, or token Second person (\"You\") retract verb text Third person (\"The giant snail\") retract verb text Second person cancel retract text Third person cancel retract text",
                    "Description": "The creature will retract into a body part when threatened. It will be unable to move or attack, but enemies will only be able to attack the specified body part. (eg. Turtle, Hedgehog) Second-person descriptions are used for adventurer mode natural ability. \"<pro_pos>\" can be used in the descriptions, being replaced with the proper pronoun (or lack thereof) in-game.  Undead curled up creatures are buggyBug:11463Bug:10519."
                },
                {
                    "Token": "RETURNS_VERMIN_KILLS_TO_OWNER",
                    "Type": "",
                    "Arguments": "",
                    "Description": "Cat behavior. If it kills a vermin creature and has an owner, it carries the remains in its mouth and drops them at their feet. Requires [HUNTS_VERMIN], obviously."
                },
                {
                    "Token": "ROOT_AROUND",
                    "Type": "Caste",
                    "Arguments": "BY_TYPE, BY_CATEGORY or BY_TOKEN body type, category, or token Second person (\"You\") verb text Third person (\"The hen\") verb text",
                    "Description": "Creature will occasionally root around in the grass, looking for insects.  Used for flavor in Adventurer Mode, spawns vermin edible for this creature in Fortress Mode. Creatures missing the specified body part will be unable to perform this action. The action produces a message (visible in adventure mode) in the form: [creature] [verb text] the [description of creature's location] In adventure mode, the \"rooting around\" ability will be included in the \"natural abilities\" menu, represented by its second person verb text."
                },
                {
                    "Token": "SAVAGE",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The creature will only show up in \"savage\" biomes. Has no effect on cavern creatures. Cannot be combined with [GOOD] or [EVIL]."
                },
                {
                    "Token": "SECRETION",
                    "Type": "Caste",
                    "Arguments": "<material token> <material state> BY_TOKEN / BY_CATEGORY / BY_TYPE <body part ID> / <category> or ALL / <type (e.g. GRASP)> <tissue layer> or ALL <trigger>",
                    "Description": "Causes the specified tissue layer(s) of the indicated body part(s) to secrete the designated material. A size 100 ('covering') contaminant is created over the affected body part(s) in its specified material state (and at the temperature appropriate to this state) when the trigger condition is met, as long as one of the secretory tissue layers is still intact. Valid triggers are: CONTINUOUS Secretion occurs once every 40 ticks in fortress mode, and every tick in adventurer mode.  EXERTION Secretion occurs continuously (at the rate described above) whilst the creature is at minimum Tired following physical exertion. Note that this cannot occur if the creature has [NOEXERT].  EXTREME_EMOTION Secretion occurs continuously (as above) whilst the creature is distressed. Cannot occur in creatures with [NOEMOTION]."
                },
                {
                    "Token": "SELECT_ADDITIONAL_CASTE",
                    "Type": "Creature",
                    "Arguments": "<caste>",
                    "Description": "Adds an additional previously defined caste to the selection. Used after [SELECT_CASTE]."
                },
                {
                    "Token": "SELECT_CASTE",
                    "Type": "Creature",
                    "Arguments": "<caste> or ALL",
                    "Description": "Selects a previously defined caste"
                },
                {
                    "Token": "SELECT_MATERIAL",
                    "Type": "Creature",
                    "Arguments": "<material token>",
                    "Description": "Selects a locally defined material. Can be ALL."
                },
                {
                    "Token": "SELECT_TISSUE",
                    "Type": "Creature",
                    "Arguments": "tissue token",
                    "Description": "Selects a tissue for editing."
                },
                {
                    "Token": "SEMIMEGABEAST",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Essentially the same as [MEGABEAST], but more of them are created during worldgen. See the semi-megabeast page for details."
                },
                {
                    "Token": "SENSE_CREATURE_CLASS",
                    "Type": "Caste",
                    "Arguments": "<creature class> <tile value or character> <foreground color>:<background color>:<foreground brightness>",
                    "Description": "Gives the creature the ability to sense creatures belonging to the specified creature class even when they lie far beyond line of sight, including through walls and floors. It also appears to reduce or negate the combat penalty of blind units when fighting creatures they can sense. In adventure mode, the specified tile will be used to represent sensed creatures when they cannot be seen directly."
                },
                {
                    "Token": "SET_BP_GROUP",
                    "Type": "Caste",
                    "Arguments": "selection criteria BY_TYPE, BY_CATEGORY, BY_TOKEN category, type, or token",
                    "Description": "Begins a selection of body parts."
                },
                {
                    "Token": "SKILL_LEARN_RATE",
                    "Type": "Caste",
                    "Arguments": "<skill_token> <percentage>",
                    "Description": "The rate at which this creature learns this skill. Requires [CAN_LEARN] or [INTELLIGENT] to function."
                },
                {
                    "Token": "SKILL_LEARN_RATES",
                    "Type": "Caste",
                    "Arguments": "<percentage>",
                    "Description": "The rate at which this creature learns all skills. Requires [CAN_LEARN] or [INTELLIGENT] to function."
                },
                {
                    "Token": "SKILL_RATE",
                    "Type": "Caste",
                    "Arguments": "skill_token <% of improvement points gained> <unused counter rate> <rust counter rate> <demotion counter rate>",
                    "Description": "Like [SKILL_RATES], but applies to individual skills instead. Requires [CAN_LEARN] or [INTELLIGENT] to function."
                },
                {
                    "Token": "SKILL_RATES",
                    "Type": "Caste",
                    "Arguments": "<% of improvement points gained> <unused counter rate> <rust counter rate> <demotion counter rate>",
                    "Description": "Affects skill gain and decay. Lower numbers in the last three slots make decay occur faster ([SKILL_RATES:100:1:1:1] would cause rapid decay). The counter rates may also be replaced with NONE. Default is [SKILL_RATES:100:8:16:16]. Requires [CAN_LEARN] or [INTELLIGENT] to function."
                },
                {
                    "Token": "SKILL_RUST_RATE",
                    "Type": "Caste",
                    "Arguments": "skill_token value value value",
                    "Description": "The rate at which this skill decays. Lower values cause the skill to decay faster. Requires [CAN_LEARN] or [INTELLIGENT] to function."
                },
                {
                    "Token": "SKILL_RUST_RATES",
                    "Type": "Caste",
                    "Arguments": "value value value",
                    "Description": "The rate at which all skills decay. Lower values cause the skills to decay faster. Requires [CAN_LEARN] or [INTELLIGENT] to function."
                },
                {
                    "Token": "SLOW_LEARNER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Shorthand for [CAN_LEARN] + [SKILL_LEARN_RATES:50].[Verify] Used by a number of 'primitive' creatures (like ogres, giants and troglodytes) in the vanilla game. Applicable to player races. Prevents a player from recruiting nobility, even basic ones. Subterranean creatures with this token combined with [EVIL] will become servants of goblins in their civilizations, in the style of trolls."
                },
                {
                    "Token": "SMALL_REMAINS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Creature leaves \"remains\" instead of a corpse. Used by vermin."
                },
                {
                    "Token": "SMELL_TRIGGER",
                    "Type": "Creature",
                    "Arguments": "value",
                    "Description": "Determines how keen a creature's sense of smell is - lower is better. At 10000, a creature cannot smell at all."
                },
                {
                    "Token": "SOLDIER_ALTTILE",
                    "Type": "Creature",
                    "Arguments": "'character' or tile number",
                    "Description": "If this creature is active in its civilization's military, it will blink between its default tile and this one."
                },
                {
                    "Token": "SOUND",
                    "Type": "Caste",
                    "Arguments": "Sound application (currently accepts ALERT or PEACEFUL_INTERMITTENT) Sound range (in tiles) Sound delay (lower values = sound is produced more often) VOCALIZATION or NONE (determines whether the sound requires breathing or not) First-person description Third-person description Description when out of sight",
                    "Description": "Creature makes sounds periodically, which can be heard in Adventure mode. First-person reads \"You bark\" Third-person reads \"The capybara barks\" Out of sight reads \"You hear a loud bark\" with the text in bold being the description arguments of the token."
                },
                {
                    "Token": "SOURCE_HFID",
                    "Type": "Creature",
                    "Arguments": "Integer (generic token?)",
                    "Description": "Found on generated angels. This is the historical figure ID of the deity with which the angel is associated. Since HFIDs are not predictable before worldgen, this isn't terribly usable in mods."
                },
                {
                    "Token": "SPECIFIC_FOOD",
                    "Type": "Caste",
                    "Arguments": "PLANT or CREATURE Plant/creature ID",
                    "Description": "Creature will only appear in biomes with this plant or creature available. Grazers given a specific type of grass (such as pandas and bamboo) will only eat that grass and nothing else, risking starvation if there's none available."
                },
                {
                    "Token": "SPEECH",
                    "Type": "Creature",
                    "Arguments": "speech file",
                    "Description": "Boasting speeches relating to killing this creature. Examples include dwarf.txt and elf.txt in data\\speech."
                },
                {
                    "Token": "SPEECH_FEMALE",
                    "Type": "Creature",
                    "Arguments": "speech file",
                    "Description": "Boasting speeches relating to killing females of this creature."
                },
                {
                    "Token": "SPEECH_MALE",
                    "Type": "Creature",
                    "Arguments": "speech file",
                    "Description": "Boasting speeches relating to killing males of this creature."
                },
                {
                    "Token": "SPHERE",
                    "Type": "Creature",
                    "Arguments": "sphere",
                    "Description": "Sets what religious spheres the creature is aligned to, for purposes of being worshipped via the [POWER] token. Also affects the layout of hidden fun stuff, and the creature's name."
                },
                {
                    "Token": "SPOUSE_CONVERSION_TARGET",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "This creature can be converted by a night creature with [SPOUSE_CONVERTER]."
                },
                {
                    "Token": "SPOUSE_CONVERTER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "If the creature has the [NIGHT_CREATURE_HUNTER] tag, it will kidnap [SPOUSE_CONVERSION_TARGET]s and transform them into the caste of its species with the [CONVERTED_SPOUSE] tag during worldgen. It may also start families this way."
                },
                {
                    "Token": "SPREAD_EVIL_SPHERES_IF_RULERv0.47.01",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "If the creature rules over a site, it will cause the local landscape to be corrupted into evil surroundings associated with the creature's spheres. The creature must have at least one of the following spheres for this to take effect: BLIGHT, DEATH, DISEASE, DEFORMITY, NIGHTMARES. The first three kill vegetation, while the others sometimes do.  The last two get evil plants and evil animals sometimes. NIGHTMARES gets bogeymen. [4] Used by demons in the vanilla game."
                },
                {
                    "Token": "STANCE_CLIMBER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Caste does not require [GRASP] body parts to climb -- it can climb with [STANCE] parts instead."
                },
                {
                    "Token": "STANDARD_GRAZER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Acts as [GRAZER] but set to 20000*G*(max size)^(-3/4), where G defaults to 100 but can be set in d_init, and the whole thing is trapped between 150 and 3 million. Used for all grazers in the default creature raws."
                },
                {
                    "Token": "STRANGE_MOODSv0.42.01",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature will get strange moods in fortress mode and can produce artifacts."
                },
                {
                    "Token": "SUPERNATURAL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the creature knowledge of any secrets with [SUPERNATURAL_LEARNING_POSSIBLE] that match its spheres and also prevents it from becoming a vampire or werebeast. Other effects are unknown."
                },
                {
                    "Token": "SWIMS_INNATE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature naturally knows how to swim perfectly and does not use the swimmer skill, as opposed to [SWIMS_LEARNED] below. However, Fortress mode AI never paths into water anyway, so it's less useful there."
                },
                {
                    "Token": "SWIMS_LEARNED",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature swims only as well as their present swimming skill allows them to."
                },
                {
                    "Token": "SYNDROME_DILUTION_FACTORv0.42.01",
                    "Type": "Caste",
                    "Arguments": "<syndrome identifier>:<percentage>",
                    "Description": "Dilutes the effects of syndromes which have the specified identifier. A percentage of 100 is equal to the regular syndrome effect severity, higher percentages reduce severity."
                },
                {
                    "Token": "TENDONS",
                    "Type": "Caste",
                    "Arguments": "material token healing rate",
                    "Description": "The creature has tendons in its [CONNECTIVE_TISSUE_ANCHOR] tissues (bone or chitin by default). Cutting the bone/chitin tissue severs the tendons, disabling motor function if the target is a limb."
                },
                {
                    "Token": "THICKWEB",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature's webs can catch larger creatures."
                },
                {
                    "Token": "TISSUE",
                    "Type": "Creature",
                    "Arguments": "name",
                    "Description": "Begins defining a tissue in the creature file."
                },
                {
                    "Token": "TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "BY_TYPE, BY_CATEGORY, BY_TOKEN TYPE,CATEGORY, or TOKEN TISSUE LOCATION",
                    "Description": "Adds the tissue layer to wherever it is required. Non-argument Locations can be FRONT, RIGHT, LEFT, TOP, BOTTOM. Argument locations are AROUND and CLEANS, requiring a further body part and a % of coverage/cleansing"
                },
                {
                    "Token": "TISSUE_LAYER_OVER",
                    "Type": "Caste",
                    "Arguments": "BY_TYPE, BY_CATEGORY, BY_TOKEN TYPE,CATEGORY, or TOKEN TISSUE LOCATION",
                    "Description": "Presumably a counterpart to TISSUE_LAYER_UNDER (see below)."
                },
                {
                    "Token": "TISSUE_LAYER_UNDER",
                    "Type": "Caste",
                    "Arguments": "BY_TYPE, BY_CATEGORY, BY_TOKEN TYPE,CATEGORY, or TOKEN TISSUE",
                    "Description": "Adds the tissue layer under a given part. For example, an iron man has a gaseous poison within, and this tissue (GAS is its name) has the token [TISSUE_LEAKS] and its state is GAS, so when you puncture the iron outside and damage this tissue it leaks gas (can have a syndrome by using a previous one in the creature sample.) [TISSUE_LAYER_UNDER:BY_CATEGORY:ALL:{tissue}] {tissue} is what will be under the TISSUE_LAYER; here is an example Tissue from the Iron Man:\n  [TISSUE:GAS] [TISSUE_NAME:gas:NP] [TISSUE_MATERIAL:LOCAL_CREATURE_MAT:GAS] [TISSUE_MAT_STATE:GAS] [RELATIVE_THICKNESS:50] [TISSUE_LEAKS] [TISSUE_SHAPE:LAYER]"
                },
                {
                    "Token": "TITAN",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on titans. Cannot be specified in user-defined raws."
                },
                {
                    "Token": "TRADE_CAPACITY",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "How much the creature can carry when used by merchants."
                },
                {
                    "Token": "TRAINABLE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Shortcut for [TRAINABLE_HUNTING] + [TRAINABLE_WAR]."
                },
                {
                    "Token": "TRAINABLE_HUNTING",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Can be trained as a hunting beast, increasing speed."
                },
                {
                    "Token": "TRAINABLE_WAR",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Can be trained as a war beast, increasing strength and endurance."
                },
                {
                    "Token": "TRANCES",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to go into martial trances. Used by dwarves in the vanilla game."
                },
                {
                    "Token": "TRAPAVOID",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature will never trigger traps it steps on. Used by a number of creatures. Doesn't make the creature immune to remotely activated traps (like retractable spikes being triggered while the creature is standing over them). TRAPAVOID creatures lose this power if they're immobilized while standing in a trap, be it by stepping on thick web, being paralyzed or being knocked unconscious."
                },
                {
                    "Token": "TRIGGERABLE_GROUP",
                    "Type": "Creature",
                    "Arguments": "min max",
                    "Description": "A large swarm of vermin can be disturbed, usually in adventurer mode.[Verify]"
                },
                {
                    "Token": "TSU_NOUN",
                    "Type": "Caste",
                    "Arguments": "noun SINGULAR or PLURAL",
                    "Description": "Noun for the [TISSUE_STYLE_UNIT], used in the description of the tissue layer's style."
                },
                {
                    "Token": "UBIQUITOUS",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "Creature will occur in every region with the correct biome. Does not apply to [EVIL]/[GOOD] tags."
                },
                {
                    "Token": "UNDERGROUND_DEPTH",
                    "Type": "Creature",
                    "Arguments": "mindepth maxdepth",
                    "Description": "Depth that the creature appears underground. Numbers can be from 0 to 5. 0 is actually 'above ground' and can be used if the creature is to appear both above and below ground. Values from 1-3 are the respective cavern levels, 4 is the magma sea and 5 is the HFS. A single argument may be used instead of min and max. Demons use only 5:5; user-defined creatures with both this depth and [FLIER] will take part in the initial wave from the HFS alongside generated demons, but without [FLIER] they will only spawn from the map edges. Civilizations that can use underground plants or animals will only export (via the embark screen or caravans) things that are available at depth 1."
                },
                {
                    "Token": "UNDERSWIM",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature is displayed as blue when in 7/7 water. Used on fish and amphibious creatures which swim under the water."
                },
                {
                    "Token": "UNIQUE_DEMON",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Found on generated demons; causes the game to create a single named instance of the demon which will emerge from the underworld and take over civilizations during worldgen. Could not be specified in user-defined raws prior to version 0.47.01."
                },
                {
                    "Token": "USE_CASTE",
                    "Type": "Creature",
                    "Arguments": "new caste token old caste token",
                    "Description": "Defines a new caste derived directly from a previous caste. The new caste inherits all properties of the old one. The effect of this tag is automatic if one has not yet defined any castes: \"Any caste-level tag that occurs before castes are explicitly declared is saved up and placed on any caste that is declared later, unless the caste is explicitly derived from another caste.\""
                },
                {
                    "Token": "USE_MATERIAL",
                    "Type": "Creature",
                    "Arguments": "new material ID old material ID",
                    "Description": "Defines a new local creature material and populates it with all properties defined in the specified local creature material."
                },
                {
                    "Token": "USE_MATERIAL_TEMPLATE",
                    "Type": "Creature",
                    "Arguments": "new material token material template",
                    "Description": "Defines a new local creature material and populates it with all properties defined in the specified template."
                },
                {
                    "Token": "USE_TISSUE",
                    "Type": "Creature",
                    "Arguments": "new tissue token old tissue id",
                    "Description": "Defines a new local creature tissue and populates it with all properties defined in the local tissue specified in the second argument."
                },
                {
                    "Token": "USE_TISSUE_TEMPLATE",
                    "Type": "Creature",
                    "Arguments": "new tissue token tissue template",
                    "Description": "Loads a tissue template listed in OBJECT:TISSUE_TEMPLATE files, such as tissue_template_default.txt."
                },
                {
                    "Token": "UTTERANCES",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Changes the language of the creature into unintelligible 'kobold-speak', which creatures of other species will be unable to understand. If a civilized creature has this and is not part of a [SKULKING] civ, it will tend to start wars with all nearby civilizations and will be unable to make peace treaties due to 'inability to communicate'."
                },
                {
                    "Token": "VEGETATION",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Like [AT_PEACE_WITH_WILDLIFE], but also makes the creature more valued in artwork by civilisations with the PLANT sphere. [5] Used by grimelings in the vanilla game."
                },
                {
                    "Token": "VERMIN_BITE",
                    "Type": "Caste",
                    "Arguments": "chance of occurrence[Verify] verb (bitten, stung, etc.) material token material state",
                    "Description": "Enables vermin to bite other creatures, injecting the specified material. See [SPECIALATTACK_INJECT_EXTRACT] for details about injection - this token presumably works in a similar manner.[Verify]"
                },
                {
                    "Token": "VERMIN_EATER",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The vermin creature will attempt to eat exposed food. See [PENETRATEPOWER]. Distinct from [VERMIN_ROTTER]."
                },
                {
                    "Token": "VERMIN_FISH",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The vermin appears in water and will attempt to swim around."
                },
                {
                    "Token": "VERMIN_GROUNDER",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The creature appears in \"general\" surface ground locations. Note that this doesn't stop the creature from flying if it can (most vermin birds have this tag)."
                },
                {
                    "Token": "VERMIN_HATEABLE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Some dwarves will hate the creature and get unhappy thoughts when around it. See the list of hateable vermin for details."
                },
                {
                    "Token": "VERMIN_MICRO",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "This makes the creature move in a swarm of creatures of the same race as it (e.g. swarm of flies, swarm of ants)."
                },
                {
                    "Token": "VERMIN_NOFISH",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature cannot be caught by fishing."
                },
                {
                    "Token": "VERMIN_NOROAM",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature will not be observed randomly roaming about the map."
                },
                {
                    "Token": "VERMIN_NOTRAP",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature cannot be caught in baited animal traps; however, a \"catch live land animal\" task may still be able to capture one if a dwarf finds one roaming around."
                },
                {
                    "Token": "VERMIN_ROTTER",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The vermin are attracted to rotting stuff and loose food left in the open and cause unhappy thoughts to dwarves who encounter them. Present on flies, knuckle worms, acorn flies, and blood gnats. Speeds up decay?[Verify]"
                },
                {
                    "Token": "VERMIN_SOIL",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The creature randomly appears near dirt or mud, and may be uncovered by creatures that have the [ROOT_AROUND] interaction such as geese and chickens. Dwarves will ignore the creature when given the \"Capture live land animal\" task."
                },
                {
                    "Token": "VERMIN_SOIL_COLONY",
                    "Type": "Creature",
                    "Arguments": "",
                    "Description": "The vermin will appear in a single tile cluster of many vermin, such as a colony of ants."
                },
                {
                    "Token": "VERMINHUNTER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Old shorthand for \"does cat stuff\". Contains [AT_PEACE_WITH_WILDLIFE] + [RETURNS_VERMIN_KILLS_TO_OWNER] + [HUNTS_VERMIN] + [ADOPTS_OWNER]."
                },
                {
                    "Token": "VESPERTINE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Sets the creature to be active during the evening in adventurer mode."
                },
                {
                    "Token": "VIEWRANGE",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Value should determine how close you have to get to a critter before it attacks (or prevents adv mode travel etc.) Default is 20."
                },
                {
                    "Token": "VISION_ARC",
                    "Type": "Caste",
                    "Arguments": "binocular vision arc non-binocular vision arc",
                    "Description": "The width of the creature's vision arcs, in degrees (i.e. 0 to 360). The first number is binocular vision, the second is non-binocular vision.  Binocular vision has a minimum of about 10 degrees, monocular, a maximum of about 350 degrees. Values past these limits will be accepted, but will default to ~10 degrees and ~350 degrees respectively."
                },
                {
                    "Token": "WAGON_PULLER",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Allows the creature to pull caravan wagons. If a civilization doesn't have access to any, it is restricted to trading with pack animals."
                },
                {
                    "Token": "WEBBER",
                    "Type": "Caste",
                    "Arguments": "material token",
                    "Description": "Allows the creature to create webs, and defines what the webs are made of."
                },
                {
                    "Token": "WEBIMMUNE",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The creature will not get caught in thick webs. Used by creatures who can shoot thick webs (such as giant cave spiders) in order to make them immune to their own attacks."
                }
            ],
            "subToken": [
                {
                    "TYPE": "BODYGLOSS"
                },
                {
                    "TYPE": "ATTACK"
                },
                {
                    "TYPE": "TISSUE_LAYER"
                },
                {
                    "TYPE": "TISSUE_LAYER_OVER"
                },
                {
                    "TYPE": "TISSUE_LAYER_UNDER"
                }
            ]
        },
        {
            "name": "ATTACK",
            "description": "attack",
            "subType": "true",
            "token": [
                [
                    {
                        "Token": "ATTACK_SKILL",
                        "Type": "Caste",
                        "Arguments": "Skill token",
                        "Description": "Defines the skill used by the attack."
                    },
                    {
                        "Token": "ATTACK_VERB",
                        "Type": "Caste",
                        "Arguments": "2nd person 3rd person",
                        "Description": "Descriptive text for the attack."
                    },
                    {
                        "Token": "ATTACK_CONTACT_PERC",
                        "Type": "Caste",
                        "Arguments": "% value",
                        "Description": "The contact area of the attack, measured in % of the body part's volume. Note that all attack percentages can be more than 100%."
                    },
                    {
                        "Token": "ATTACK_PENETRATION_PERC",
                        "Type": "Caste",
                        "Arguments": "% value",
                        "Description": "The penetration value of the attack, measured in % of the body part's volume. Requires ATTACK_FLAG_EDGE. Maximum value: 15000."
                    },
                    {
                        "Token": "ATTACK_PRIORITY",
                        "Type": "Caste",
                        "Arguments": "MAIN or SECOND",
                        "Description": "Usage frequency. MAIN attacks are 100 times more frequently chosen than SECOND. Opportunity attacks ignore this preference."
                    },
                    {
                        "Token": "ATTACK_VELOCITY_MODIFIER",
                        "Type": "Caste",
                        "Arguments": "number",
                        "Description": "The velocity multiplier of the attack, multiplied by 1000."
                    },
                    {
                        "Token": "ATTACK_FLAG_CANLATCH",
                        "Type": "Caste",
                        "Arguments": "",
                        "Description": "Attacks that damage tissue have the chance to latch on in a wrestling hold. The grabbing bodypart can then use the \"shake around\" wrestling move, causing severe, armor-bypassing tensile damage according to the attacker's body volume."
                    },
                    {
                        "Token": "ATTACK_FLAG_WITH",
                        "Type": "Caste",
                        "Arguments": "",
                        "Description": "Displays the name of the body part used to perform an attack while announcing it, e.g. \"The weaver punches the bugbat with his right hand\"."
                    },
                    {
                        "Token": "ATTACK_FLAG_EDGE",
                        "Type": "Caste",
                        "Arguments": "",
                        "Description": "The attack is edged, with all the effects on physical resistance and contact area that it entails."
                    },
                    {
                        "Token": "ATTACK_PREPARE_AND_RECOVER",
                        "Type": "Caste",
                        "Arguments": "Preparation time Recovery time",
                        "Description": "Determines the length of time to prepare this attack and until one can perform this attack again. Values appear to be calculated in adventure mode ticks."
                    },
                    {
                        "Token": "ATTACK_FLAG_BAD_MULTIATTACK",
                        "Type": "Caste",
                        "Arguments": "",
                        "Description": "Multiple strikes with this attack cannot be performed effectively."
                    },
                    {
                        "Token": "ATTACK_FLAG_INDEPENDENT_MULTIATTACK",
                        "Type": "Caste",
                        "Arguments": "",
                        "Description": "Multiple strikes with this attack can be performed with no penalty. The creature will use all attacks with this token at once."
                    },
                    {
                        "Token": "SPECIALATTACK_INJECT_EXTRACT",
                        "Type": "Caste",
                        "Arguments": "<material token> <material state> <min quantity> <max quantity>",
                        "Description": "When added to an attack, causes the attack to inject the specified material into the victim's bloodstream. Once injected, the material will participate in thermal exchange within the creature - injecting something like molten iron (INORGANIC:IRON:LIQUID) would cause most unmodded creatures to melt (note that some of the injected material also splatters over the bodypart used to carry out the attack, so it should be protected appropriately). If the injected material has an associated syndrome with the [SYN_INJECTED] token, it will be transmitted to the victim. If the attack is blunt, the injected material lacks the [ENTERS_BLOOD] token, the attacked bodypart has no [VASCULAR] tissues, or the victim is bloodless, the material will splatter over the attacked body part instead."
                    },
                    {
                        "Token": "SPECIALATTACK_INTERACTION",
                        "Type": "Caste",
                        "Arguments": "interaction",
                        "Description": "When this attack lands successfully, a specified interaction will take effect on the target creature. The attack must break the target creature's skin in order to work. This will take effect in worldgen as well. If the attack would break skin, the interaction will occur before the attack actually lands."
                    },
                    {
                        "Token": "SPECIALATTACK_SUCK_BLOOD",
                        "Type": "Caste",
                        "Arguments": "min max",
                        "Description": "Successful attack draws out an amount of blood randomized between the min and max value. Beware that this will trigger any ingestion syndromes attached to the target creature's blood - for example, using this attack on a vampire will turn you into one too."
                    }
                ]
            ]
        },
        {
            "name": "TISSUE_LAYER_OVER",
            "description": "",
            "subType": "true",
            "token": [
                {
                    "Token": "SELECT_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token | Selects a tissue at a location (optional) FRONT, BACK, LEFT, RIGHT, TOP, BOTTOM, AROUND.",
                    "Description": "Begins a selection of tissue layers. [SELECT_TISSUE_LAYER:HEART:BY_TYPE:HEART]"
                },
                {
                    "Token": "PLUS_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token",
                    "Description": "Adds tissue layers to those selected."
                },
                {
                    "Token": "SET_TL_GROUP",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token tissue",
                    "Description": "Begins a selection of tissue layers. Only usable for descriptor and cosmetic purposes. Research has implied it may be redundant with SELECT_TISSUE_LAYER, as the latter allows for cosmetics as well as \"functional\" tokens such as TL_MAJOR_ARTERIES. Vanilla raws still use SET_TL_GROUP though, for all cosmetic purposes. More research is needed on this subject."
                },
                {
                    "Token": "PLUS_TL_GROUP",
                    "Type": "Caste",
                    "Arguments": "BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token tissue",
                    "Description": "Adds tissue layers to those selected. Like SET_TL_GROUP, it may be redundant even if used in the vanilla raws."
                },
                {
                    "Token": "SET_LAYER_TISSUE",
                    "Type": "Caste",
                    "Arguments": "TISSUE",
                    "Description": "Sets a selected tissue layer to be made of a different tissue."
                },
                {
                    "Token": "SHEARABLE_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "tissue modifier required value",
                    "Description": "Tissue layer can be sheared for its component material. The specified modifier must be at least of the desired value for shearing to be possible (for example, a llama's wool must have a LENGTH of 300 before it is shearable)."
                },
                {
                    "Token": "TISSUE_LAYER_APPEARANCE_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "QUALITY lowest lower low median high higher highest",
                    "Description": "Sets the range of qualities, including LENGTH, DENSE, HIGH_POSITION, CURLY, GREASY, WRINKLY"
                },
                {
                    "Token": "TISSUE_STYLE_UNIT",
                    "Type": "Caste",
                    "Arguments": "tissue style unit ID shaping",
                    "Description": "Sets tissue layer to be the target of TISSUE_STYLE token specified for an entity, works only on entity members. Mostly used with tissues HAIR, BEARD, MOUSTACHE, SIDEBURNS."
                },
                {
                    "Token": "TL_COLOR_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "COLOR freq COLOR freq etc.",
                    "Description": "Creates a list of colors/color patterns, giving each a relative frequency. If the given color or pattern does not exist, the tissue is described as being \"transparent\"."
                },
                {
                    "Token": "TLCM_GENETIC_MODEL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The way the color modifier is passed on to offspring. May or may not work right now.[Verify]"
                },
                {
                    "Token": "TLCM_IMPORTANCE",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "Presumably modifies the importance of the tissue layer color modifier, for description purposes. HOWEVER using this appears to remove all mention of colour from creature descriptions. It does not appear in any default creatures."
                },
                {
                    "Token": "TLCM_NOUN",
                    "Type": "Caste",
                    "Arguments": "name SINGULAR or PLURAL",
                    "Description": "Names the tissue layer color modifier, and determines the noun. Also used by Stonesense for colouring body parts."
                },
                {
                    "Token": "TLCM_TIMING",
                    "Type": "Caste",
                    "Arguments": "ROOT start change window years days end change window years days",
                    "Description": "Determines the point in the creature's life when the color change begins and ends."
                },
                {
                    "Token": "TL_CONNECTS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the CONNECTS attribute to selected layers."
                },
                {
                    "Token": "TL_HEALING_RATE",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the HEALING_RATE of the selected tissue layers."
                },
                {
                    "Token": "TL_MAJOR_ARTERIES",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the \"major arteries\" attribute to selected layers. Used to add massive bleeding properties to the throat, made from skin."
                },
                {
                    "Token": "TL_PAIN_RECEPTORS",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the number of pain receptors for selected tissue layers."
                },
                {
                    "Token": "TL_RELATIVE_THICKNESS",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the relative thickness for selected tissue layers."
                },
                {
                    "Token": "TL_VASCULAR",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Sets a new VASCULAR value (which modulates bleeding) for selected tissue layers."
                }
            ]
        },
        {
            "name": "TISSUE_LAYER_UNDER",
            "description": "",
            "subType": "true",
            "token": [
                {
                    "Token": "SELECT_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token | Selects a tissue at a location (optional) FRONT, BACK, LEFT, RIGHT, TOP, BOTTOM, AROUND.",
                    "Description": "Begins a selection of tissue layers. [SELECT_TISSUE_LAYER:HEART:BY_TYPE:HEART]"
                },
                {
                    "Token": "PLUS_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token",
                    "Description": "Adds tissue layers to those selected."
                },
                {
                    "Token": "SET_TL_GROUP",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token tissue",
                    "Description": "Begins a selection of tissue layers. Only usable for descriptor and cosmetic purposes. Research has implied it may be redundant with SELECT_TISSUE_LAYER, as the latter allows for cosmetics as well as \"functional\" tokens such as TL_MAJOR_ARTERIES. Vanilla raws still use SET_TL_GROUP though, for all cosmetic purposes. More research is needed on this subject."
                },
                {
                    "Token": "PLUS_TL_GROUP",
                    "Type": "Caste",
                    "Arguments": "BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token tissue",
                    "Description": "Adds tissue layers to those selected. Like SET_TL_GROUP, it may be redundant even if used in the vanilla raws."
                },
                {
                    "Token": "SET_LAYER_TISSUE",
                    "Type": "Caste",
                    "Arguments": "TISSUE",
                    "Description": "Sets a selected tissue layer to be made of a different tissue."
                },
                {
                    "Token": "SHEARABLE_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "tissue modifier required value",
                    "Description": "Tissue layer can be sheared for its component material. The specified modifier must be at least of the desired value for shearing to be possible (for example, a llama's wool must have a LENGTH of 300 before it is shearable)."
                },
                {
                    "Token": "TISSUE_LAYER_APPEARANCE_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "QUALITY lowest lower low median high higher highest",
                    "Description": "Sets the range of qualities, including LENGTH, DENSE, HIGH_POSITION, CURLY, GREASY, WRINKLY"
                },
                {
                    "Token": "TISSUE_STYLE_UNIT",
                    "Type": "Caste",
                    "Arguments": "tissue style unit ID shaping",
                    "Description": "Sets tissue layer to be the target of TISSUE_STYLE token specified for an entity, works only on entity members. Mostly used with tissues HAIR, BEARD, MOUSTACHE, SIDEBURNS."
                },
                {
                    "Token": "TL_COLOR_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "COLOR freq COLOR freq etc.",
                    "Description": "Creates a list of colors/color patterns, giving each a relative frequency. If the given color or pattern does not exist, the tissue is described as being \"transparent\"."
                },
                {
                    "Token": "TLCM_GENETIC_MODEL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The way the color modifier is passed on to offspring. May or may not work right now.[Verify]"
                },
                {
                    "Token": "TLCM_IMPORTANCE",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "Presumably modifies the importance of the tissue layer color modifier, for description purposes. HOWEVER using this appears to remove all mention of colour from creature descriptions. It does not appear in any default creatures."
                },
                {
                    "Token": "TLCM_NOUN",
                    "Type": "Caste",
                    "Arguments": "name SINGULAR or PLURAL",
                    "Description": "Names the tissue layer color modifier, and determines the noun. Also used by Stonesense for colouring body parts."
                },
                {
                    "Token": "TLCM_TIMING",
                    "Type": "Caste",
                    "Arguments": "ROOT start change window years days end change window years days",
                    "Description": "Determines the point in the creature's life when the color change begins and ends."
                },
                {
                    "Token": "TL_CONNECTS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the CONNECTS attribute to selected layers."
                },
                {
                    "Token": "TL_HEALING_RATE",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the HEALING_RATE of the selected tissue layers."
                },
                {
                    "Token": "TL_MAJOR_ARTERIES",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the \"major arteries\" attribute to selected layers. Used to add massive bleeding properties to the throat, made from skin."
                },
                {
                    "Token": "TL_PAIN_RECEPTORS",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the number of pain receptors for selected tissue layers."
                },
                {
                    "Token": "TL_RELATIVE_THICKNESS",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the relative thickness for selected tissue layers."
                },
                {
                    "Token": "TL_VASCULAR",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Sets a new VASCULAR value (which modulates bleeding) for selected tissue layers."
                }
            ]
        },
        {
            "name": "TISSUE_LAYER",
            "description": "",
            "subType": "true",
            "token": [
                {
                    "Token": "SELECT_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token | Selects a tissue at a location (optional) FRONT, BACK, LEFT, RIGHT, TOP, BOTTOM, AROUND.",
                    "Description": "Begins a selection of tissue layers. [SELECT_TISSUE_LAYER:HEART:BY_TYPE:HEART]"
                },
                {
                    "Token": "PLUS_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token",
                    "Description": "Adds tissue layers to those selected."
                },
                {
                    "Token": "SET_TL_GROUP",
                    "Type": "Caste",
                    "Arguments": "TISSUE BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token tissue",
                    "Description": "Begins a selection of tissue layers. Only usable for descriptor and cosmetic purposes. Research has implied it may be redundant with SELECT_TISSUE_LAYER, as the latter allows for cosmetics as well as \"functional\" tokens such as TL_MAJOR_ARTERIES. Vanilla raws still use SET_TL_GROUP though, for all cosmetic purposes. More research is needed on this subject."
                },
                {
                    "Token": "PLUS_TL_GROUP",
                    "Type": "Caste",
                    "Arguments": "BY_CATEGORY, BY_TYPE, BY_TOKEN Location - category, type, or token tissue",
                    "Description": "Adds tissue layers to those selected. Like SET_TL_GROUP, it may be redundant even if used in the vanilla raws."
                },
                {
                    "Token": "SET_LAYER_TISSUE",
                    "Type": "Caste",
                    "Arguments": "TISSUE",
                    "Description": "Sets a selected tissue layer to be made of a different tissue."
                },
                {
                    "Token": "SHEARABLE_TISSUE_LAYER",
                    "Type": "Caste",
                    "Arguments": "tissue modifier required value",
                    "Description": "Tissue layer can be sheared for its component material. The specified modifier must be at least of the desired value for shearing to be possible (for example, a llama's wool must have a LENGTH of 300 before it is shearable)."
                },
                {
                    "Token": "TISSUE_LAYER_APPEARANCE_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "QUALITY lowest lower low median high higher highest",
                    "Description": "Sets the range of qualities, including LENGTH, DENSE, HIGH_POSITION, CURLY, GREASY, WRINKLY"
                },
                {
                    "Token": "TISSUE_STYLE_UNIT",
                    "Type": "Caste",
                    "Arguments": "tissue style unit ID shaping",
                    "Description": "Sets tissue layer to be the target of TISSUE_STYLE token specified for an entity, works only on entity members. Mostly used with tissues HAIR, BEARD, MOUSTACHE, SIDEBURNS."
                },
                {
                    "Token": "TL_COLOR_MODIFIER",
                    "Type": "Caste",
                    "Arguments": "COLOR freq COLOR freq etc.",
                    "Description": "Creates a list of colors/color patterns, giving each a relative frequency. If the given color or pattern does not exist, the tissue is described as being \"transparent\"."
                },
                {
                    "Token": "TLCM_GENETIC_MODEL",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "The way the color modifier is passed on to offspring. May or may not work right now.[Verify]"
                },
                {
                    "Token": "TLCM_IMPORTANCE",
                    "Type": "Caste",
                    "Arguments": "number",
                    "Description": "Presumably modifies the importance of the tissue layer color modifier, for description purposes. HOWEVER using this appears to remove all mention of colour from creature descriptions. It does not appear in any default creatures."
                },
                {
                    "Token": "TLCM_NOUN",
                    "Type": "Caste",
                    "Arguments": "name SINGULAR or PLURAL",
                    "Description": "Names the tissue layer color modifier, and determines the noun. Also used by Stonesense for colouring body parts."
                },
                {
                    "Token": "TLCM_TIMING",
                    "Type": "Caste",
                    "Arguments": "ROOT start change window years days end change window years days",
                    "Description": "Determines the point in the creature's life when the color change begins and ends."
                },
                {
                    "Token": "TL_CONNECTS",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the CONNECTS attribute to selected layers."
                },
                {
                    "Token": "TL_HEALING_RATE",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the HEALING_RATE of the selected tissue layers."
                },
                {
                    "Token": "TL_MAJOR_ARTERIES",
                    "Type": "Caste",
                    "Arguments": "",
                    "Description": "Gives the \"major arteries\" attribute to selected layers. Used to add massive bleeding properties to the throat, made from skin."
                },
                {
                    "Token": "TL_PAIN_RECEPTORS",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the number of pain receptors for selected tissue layers."
                },
                {
                    "Token": "TL_RELATIVE_THICKNESS",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Changes the relative thickness for selected tissue layers."
                },
                {
                    "Token": "TL_VASCULAR",
                    "Type": "Caste",
                    "Arguments": "value",
                    "Description": "Sets a new VASCULAR value (which modulates bleeding) for selected tissue layers."
                }
            ]
        },
        {
            "name": "CREATURE_VARIATION",
            "description": "variations that can be applied to creatures (e.g., making them giants, or anthropomorphic). Technically a series of tokens that are added to or removed from the creature (essentially a set of templated changes)",
            "token": [
                {
                    "Token": "CV_NEW_TAG",
                    "Arguments": "token (including token arguments)",
                    "Description": "Adds the given token to the target creature. E.g. [CV_NEW_TAG:BIOME:ANY_FOREST] gives the creature [BIOME:ANY_FOREST]."
                },
                {
                    "Token": "CV_ADD_TAG",
                    "Arguments": "token (including token arguments)",
                    "Description": "Alias for CV_NEW_TAG."
                },
                {
                    "Token": "CV_REMOVE_TAG",
                    "Arguments": "leading token (name and) arguments",
                    "Description": "Removes all tokens from the target creature which start with the given chain of token arguments. E.g. [CV_REMOVE_TAG:BODY:HUMANOID_SIMPLE] would remove [BODY:HUMANOID_SIMPLE:3_EYES], but [CV_REMOVE_TAG:BODY:3_EYES] would not. Neither would [CV_REMOVE_TAG:BODY:HUMANOID_SIMPLE] be able to remove [BODY:HUMANOID_SIMPLE_NECK:3_EYES], as it looks for whole arguments. [CV_REMOVE_TAG:BODY] would remove both examples above, as they start with \"BODY\"."
                },
                {
                    "Token": "CV_CONVERT_TAG",
                    "Arguments": "",
                    "Description": "Starts a conversion block, containing one [CVCT_MASTER], one [CVCT_TARGET], and one [CVCT_REPLACEMENT]. Note that multiple conversion blocks are applied in what might appear as \"reverse\" order (see Application)."
                },
                {
                    "Token": "CVCT_MASTER",
                    "Arguments": "leading token (name and) arguments",
                    "Description": "Specifies which tokens of the target creature may be converted, by looking at full arguments at the start of said token (like [CV_REMOVE_TAG]). If no CVCT_MASTER is given, it is given no arguments, or the only argument it is given is blank (i.e. [CVCT_MASTER:]), all tokens of the target creature are selected."
                },
                {
                    "Token": "CVCT_TARGET",
                    "Arguments": "string",
                    "Description": "Locates the specified string within all tokens specified by CVCT_MASTER. If no CVCT_TARGET is given, it is given no arguments, or the only argument it is given is blank (i.e. [CVCT_TARGET:]), the game will freeze when loading the creature."
                },
                {
                    "Token": "CVCT_REPLACEMENT",
                    "Arguments": "string",
                    "Description": "Replaces the string specified by CVCT_TARGET within the tokens specified by CVCT_MASTER. This means the targeted part of a token can be changed anywhere in the token, e.g. [CV_CONVERT_TAG] \t[CVCT_MASTER:BODY] \t[CVCT_TARGET:2EYES] \t[CVCT_REPLACEMENT:2EYESTALKS]  would affect both [BODY:QUADRUPED_NECK:2EYES:NOSE:2LUNGS:...] and [BODY:INSECT:2EYES:HEART:GUTS:BRAIN:MOUTH:2WINGS], converting them into [BODY:QUADRUPED_NECK:2EYESTALKS:NOSE:2LUNGS:...] and [BODY:INSECT:2EYESTALKS:HEART:GUTS:BRAIN:MOUTH:2WINGS] respectively. Colons can be included as part of both the target and the replacement string, e.g. given  [CV_CONVERT_TAG] \t[CVCT_MASTER:BODY] \t[CVCT_TARGET:BASIC_1PARTBODY:BASIC_HEAD] \t[CVCT_REPLACEMENT:HUMANOID:3FINGERS]  and [BODY:BASIC_1PARTBODY:BASIC_HEAD:HEART:GUTS:BRAIN:MOUTH:2EYESTALKS], you will get [BODY:HUMANOID:3FINGERS:HEART:GUTS:BRAIN:MOUTH:2EYESTALKS]. All occurrences of the target string are replaced, e.g. given  [CV_CONVERT_TAG] \t[CVCT_MASTER:DESCRIPTION] \t[CVCT_TARGET:TRAIT] \t[CVCT_REPLACEMENT:modderiffic]  and [DESCRIPTION:This is an example creature. It is TRAIT, very very TRAIT.], you will get [DESCRIPTION:This is an example creature. It is modderiffic, very very modderiffic.]. If no CVCT_REPLACEMENT is given, the target string is simply removed."
                },
                {
                    "Token": "CV_NEW_CTAG",
                    "Arguments": "!ARG number value for !ARG to match token",
                    "Description": "Conditional variant of [CV_NEW_TAG], see Arguments and conditional tokens."
                },
                {
                    "Token": "CV_ADD_CTAG",
                    "Arguments": "!ARG number value for !ARG to match token",
                    "Description": "Alias for CV_NEW_CTAG."
                },
                {
                    "Token": "CV_REMOVE_CTAG",
                    "Arguments": "!ARG number value for !ARG to match token",
                    "Description": "Conditional variant of [CV_REMOVE_TAG], see Arguments and conditional tokens."
                },
                {
                    "Token": "CV_CONVERT_CTAG",
                    "Arguments": "!ARG number value for !ARG to match",
                    "Description": "Conditional variant of [CV_CONVERT_TAG], see Arguments and conditional tokens. Uses [CVCT_MASTER], [CVCT_TARGET], and [CVCT_REPLACEMENT], just as the former."
                }
            ]
        },
        {
            "name": "DESCRIPTOR_COLOR ",
            "description": "(tag is COLOR) - named colors for use with DESCRIPTOR_PATTERN objects (other purposes unknown)",
            "token": [
                {
                "Token": "NAME",
                "Arguments": "string",
                "Usage": "Required",
                "Description": "What this color will be called in-game."
              },
              {
                "Token": "WORD",
                "Arguments": "tag",
                "Usage": "Required",
                "Description": "Effect unknown."
              },
              {
                "Token": "RGB",
                "Arguments": "red:green:blue",
                "Usage": "Required",
                "Description": "Decides the exact color value of the color using the additive RGB system. This color is not shown in-game, but when a randomly generated beast uses this color, their tile color is defined by an approximation of this[Verify]. Each value can range from 0-255."
              }
            ]
        },
        {
            "name": "DESCRIPTOR_PATTERN ",
            "description": "(tag is COLOR_PATTERN) - patterns with color combinations for use with creatures",
            "token": [
                {
                   "Token": "PATTERN",
                   "Arguments": "SPOTS, STRIPES, MOTTLED, IRIS_EYE or PUPIL_EYE",
                   "Usage": "Required",
                   "Description": "The type of pattern, deciding the description. SPOTS: Causes a crash if no CP_COLOR is givenBug:11806, otherwise takes any amount. STRIPES: Takes any amount of CP_COLOR tokens. MOTTLED: Takes any amount of CP_COLOR tokens. IRIS_EYE: Only shows the third CP_COLOR given; technically takes any amount. Causes a crash if no CP_COLOR is givenBug:11806. If only one or two CP_COLORs is given, the tissue is described as being \"transparent\". PUPIL_EYE: Only shows the second CP_COLOR given; technically takes any amount. Causes a crash if no CP_COLOR is givenBug:11806. If only one CP_COLORs is given, the tissue is described as being \"transparent\". An undefined pattern type causes the description to simply not show up."
                 },
                 {
                   "Token": "CP_COLOR",
                   "Arguments": "color token",
                   "Usage": "Required (mostly)",
                   "Description": "A color to be used in the pattern. See PATTERN for how many CP_COLOR tokens are needed, and how they are used. Modded color tokens may be used."
                 }
            ]
        },
        {
            "name": "DESCRIPTOR_SHAPE ",
            "description": "(tag is SHAPE) - shapes with descriptions and variations, used for engravings",
            "token": [
                {
                   "Token": "ADJ",
                   "Arguments": "string",
                   "Usage": "",
                   "Description": "An adjective to be paired with the name. Can be used multiple times, allowing for variants of the same shape e.g. \"thin cross\", \"tall cross\"."
                 },
                 {
                   "Token": "CATEGORY",
                   "Arguments": "category name",
                   "Usage": "",
                   "Description": "A category the shape belongs to, which can be used by the tool token SHAPE_CATEGORY. Vanilla categories are SIMPLE, PLATONIC, and DICE, but any arbitrary category name is allowed."
                 },
                 {
                   "Token": "SIDES",
                   "Arguments": "number",
                   "Usage": "dice",
                   "Description": "The amount of sides of the dice."
                 },
                 {
                   "Token": "GEMS_USE_ADJ",
                   "Arguments": "",
                   "Usage": "gems",
                   "Description": "Makes gems in this shape use the syntax 'ADJ + material' e.g. \"conglomerate gizzard stone\". This, GEMS_USE_NOUN or GEMS_USE_ADJ_NOUN must be used for the name of a gem in this shape to show up."
                 },
                 {
                   "Token": "GEMS_USE_ADJ_NOUN",
                   "Arguments": "",
                   "Usage": "gems",
                   "Description": "Makes gems in this shape use the syntax 'ADJ + material + NAME' e.g. \"smooth conglomerate cabochon\". This, GEMS_USE_ADJ or GEMS_USE_ADJ_NOUN must be used for the name of a gem in this shape to show up."
                 },
                 {
                   "Token": "GEMS_USE_NOUN",
                   "Arguments": "",
                   "Usage": "gems",
                   "Description": "Makes gems in this shape use the syntax 'material + NAME' e.g. \"point cut conglomerate\". This, GEMS_USE_ADJ or GEMS_USE_ADJ_NOUN must be used for the name of a gem in this shape to show up."
                 },
                 {
                   "Token": "NAME",
                   "Arguments": "string:plural",
                   "Usage": "Required",
                   "Description": "The name of the shape. Is not always strictly used, see GEMS_USE_ADJ."
                 },
                 {
                   "Token": "TILE",
                   "Arguments": "'character' or tile number",
                   "Usage": "Required",
                   "Description": "The tile the shape uses, as an engraving or as an item (gem, die)."
                 },
                 {
                   "Token": "WORD",
                   "Arguments": "word",
                   "Usage": "",
                   "Description": "Effect unknown."
                 }
            ]
        },
        {
            "name": "ENTITY",
            "description": "civilization types, with assigned race, language, culture, ethics, and social structure",
            "token": [
                {
                   "Token": "ALL_MAIN_POPS_CONTROLLABLEv0.42.01 / ADVENTURE_TIER",
                   "Arguments": "order",
                   "Description": "Allows adventure mode for entities with sites.  Dwarves, elves, and humans take up tier 3, 2, and 1 respectively. Order doesn't need to be maintained; a custom entity can have a tier of 3000 and still work even if it's the only custom entity. [ADVENTURE_TIER:4] Removed in Version 0.42.01, effectively replaced by ALL_MAIN_POPS_CONTROLLABLE."
                 },
                 {
                   "Token": "INDIV_CONTROLLABLE",
                   "Arguments": "",
                   "Description": "Allows the race to be played as an \"outsider\" in adventure mode. Not having this specified in one of the entities will cause the adventure mode option to disappear. Note that ADVENTURE_TIER is not required if this token is included, and that this cannot be applied to civilizations that were not in an entity_*.txt file during world gen. Removed in Version 0.42.01, in favor of the creature token (not entity token) OUTSIDER_CONTROLLABLE."
                 },
                 {
                   "Token": "SITE_CONTROLLABLEv0.42.01 / CIV_CONTROLLABLE",
                   "Arguments": "",
                   "Description": "Allows fortress mode. If multiple entities have the CIV_CONTROLLABLE token, then at embark the specific civs can be chosen by + or - on the civ list screen (by pressing TAB), though it will not state what entity the civs belong to. To check which one, tab to the neighbors screen: the entity's race will be at the top. At least one civilization must have this token. (Replaced in 0.42.01 by SITE_CONTROLLABLE.)"
                 },
                 {
                   "Token": "CREATURE",
                   "Arguments": "creature",
                   "Description": "The type of creature that will inhabit the civilization. If multiple creature types are specified, each civilization will randomly choose one of the creatures. In entities with multiple possible creatures, you can manipulate the chance of one creature being chosen by adding multiple identical creature tags. For instance adding [CREATURE:DWARF][CREATURE:DWARF][CREATURE:DWARF][CREATURE:ELF] to the same entity will make the civs created about 75% dwarven, 25% elven. It should be noted that civilizations are in general weighted by this token: for example, if you have one entity with three [CREATURE:DWARF] entries and another separate entity with a single [CREATURE:ELF] entry, then you can expect to see three times as many of the former placed as the latter.[Verify]"
                 },
                 {
                   "Token": "SOURCE_HFID",
                   "Arguments": "integer (or generic token?)",
                   "Description": "Found on generated angel entities.  Appears to draw from creatures with this HFID, which associates the entity with a historical figure of the same ID corresponding to a deity."
                 },
                 {
                   "Token": "BIOME_SUPPORT",
                   "Arguments": "biome frequency",
                   "Description": "Controls the expansion of the civilization's territory.  The higher the number is relative to other BIOME_SUPPORT tokens in the entity, the faster it can spread through the biome.  These numbers are evaluated relative to each other, i.e. if one biome is 1 and the other is 2, the spread will be the same as if one was 100 and the other was 200.  Civs can spread out over biomes they cannot actually build in; for example, humans spread quickly over oceans but cannot actually build in them. [BIOME_SUPPORT:ANY_GRASSLAND:4]"
                 },
                 {
                   "Token": "SETTLEMENT_BIOME",
                   "Arguments": "biome",
                   "Description": "If the civ's territory crosses over this biome, it can build settlements here. [SETTLEMENT_BIOME:ANY_GRASSLAND]"
                 },
                 {
                   "Token": "START_BIOME",
                   "Arguments": "biome",
                   "Description": "Combination of EXCLUSIVE_START_BIOME and SETTLEMENT_BIOME; allows the civ to start in and create settlements in the biome. [START_BIOME:ANY_FOREST]"
                 },
                 {
                   "Token": "EXCLUSIVE_START_BIOME",
                   "Arguments": "biome",
                   "Description": "The birth of the civilization can occur in this biome, but cannot (necessarily) build in it. If the civ does not have SETTLEMENT_BIOME or START_BIOME for the biome in question, it will only construct a single settlement there. [EXCLUSIVE_START_BIOME:MOUNTAIN]"
                 },
                 {
                   "Token": "DEFAULT_SITE_TYPE",
                   "Arguments": "site type",
                   "Description": "Valid site types are DARK_FORTRESS (π), CAVE (•), CAVE_DETAILED (Ω), TREE_CITY (î), and CITY (#). Also recognizes PLAYER_FORTRESS  (creates a civ of hillocks only), and MONUMENT (creates a civ without visible sites (except tombs and castles), but may cause worldgen crashes). FORTRESS is no longer a valid entry, castles are currently controlled by BUILDS_OUTDOOR_FORTIFICATIONS. Defaults to CITY. Selecting CAVE causes the classic kobold behavior of not showing up on the \"neighbors\" section of the site selection screen. Selecting DARK_FORTRESS also allows generation of certain other structures.  CAVE_DETAILED civilizations will create fortresses in mountainous regions and hillocks in non-mountainous regions. [DEFAULT_SITE_TYPE:CAVE_DETAILED]"
                 },
                 {
                   "Token": "LIKES_SITE",
                   "Arguments": "site type",
                   "Description": "Most residents will try to move to this site type, unless already at one. [LIKES_SITE:CAVE_DETAILED]"
                 },
                 {
                   "Token": "TOLERATES_SITE",
                   "Arguments": "site type",
                   "Description": "Some residents will try to move to this site type, unless already at one. [TOLERATES_SITE:CITY]"
                 },
                 {
                   "Token": "WORLD_CONSTRUCTION",
                   "Arguments": "construction",
                   "Description": "Controls which constructions the civ will build on the world map. Valid constructions are ROAD, TUNNEL, BRIDGE, and WALL. [WORLD_CONSTRUCTION:BRIDGE] [WORLD_CONSTRUCTION:ROAD] [WORLD_CONSTRUCTION:TUNNEL] [WORLD_CONSTRUCTION:WALL]"
                 },
                 {
                   "Token": "MAX_POP_NUMBER",
                   "Arguments": "number",
                   "Description": "Max historical population per entity. Multiply this by max starting civ to get the total maximum historical population of the species. Defaults to 500. [MAX_POP_NUMBER:500]"
                 },
                 {
                   "Token": "MAX_SITE_POP_NUMBER",
                   "Arguments": "number",
                   "Description": "Max historical population per individual site. Defaults to 50. [MAX_SITE_POP_NUMBER:200]"
                 },
                 {
                   "Token": "MAX_STARTING_CIV_NUMBER",
                   "Arguments": "number",
                   "Description": "Max number of civ to spawn at world generation. Worldgen picks entities in some sequential order from the raws, and once it reaches the end of the list, it will begin again at the top.  Setting this number lower than 100, like say, 7, will cause worldgen to skip over the civ for placement if there are already 7 civs of this type.  Note that if all civs are set to lower numbers, and the number of starting civs is set higher than the maximum possible amount of civs in total, it will gracefully stop placing civs and get down to the history aspect of worldgen. Defaults to 3. [MAX_STARTING_CIV_NUMBER:3]"
                 },
                 {
                   "Token": "PERMITTED_BUILDING",
                   "Arguments": "building name",
                   "Description": "The named, custom building can be built by a civilization in Fortress Mode. [PERMITTED_BUILDING:SOAP_MAKER]"
                 },
                 {
                   "Token": "PERMITTED_JOB",
                   "Arguments": "profession",
                   "Description": "Allows this job type to be selected. This applies to worldgen creatures, in the embark screen, and in play. Certain professions also influence the availability of materials for trade. [PERMITTED_JOB:MINER]"
                 },
                 {
                   "Token": "PERMITTED_REACTION",
                   "Arguments": "reaction name",
                   "Description": "Allows this reaction to be used by a civilization. It is used primarily in Fortress Mode, but also allows certain resources, such as steel, to be available to a race. When creating custom reactions, this token must be present or the player will not be able to use the reaction in Fortress Mode. [PERMITTED_REACTION:TAN_A_HIDE]"
                 },
                 {
                   "Token": "CURRENCY_BY_YEAR",
                   "Arguments": "",
                   "Description": "Causes the civ's currency to be numbered with the year it was minted."
                 },
                 {
                   "Token": "CURRENCY",
                   "Arguments": "inorganic material value",
                   "Description": "What kind of metals the civ uses for coin minting, as well as the value of the coin.  Due to the Dwarven economy having been disabled since version 0.31, the value doesn't actually do anything. [CURRENCY:SILVER:5]"
                 },
                 {
                   "Token": "ART_FACET_MODIFIER",
                   "Arguments": "type number",
                   "Description": "OWN_RACE, FANCIFUL, EVIL, GOOD Number goes from 0 to 25600 where 256 is the default. [ART_FACET_MODIFIER:OWN_RACE:512]"
                 },
                 {
                   "Token": "ART_IMAGE_ELEMENT_MODIFIER",
                   "Arguments": "item number",
                   "Description": "CREATURE, PLANT, TREE, SHAPE, ITEM\n0-25600 Determines the chance of each image occurring in that entity's artwork, such as engravings and on artifacts, for default (non-historical) artwork. [ART_IMAGE_ELEMENT_MODIFIER:TREE:512]"
                 },
                 {
                   "Token": "ITEM_IMPROVEMENT_MODIFIER",
                   "Arguments": "item number",
                   "Description": "ART_IMAGE, COVERED or GLAZED, RINGS_HANGING, BANDS, SPIKES, ITEMSPECIFIC, THREAD, CLOTH, SEWN_IMAGE\n0-25600 Determines the chance of the entity using that particular artwork method, such as \"encircled with bands\" or \"menaces with spikes\". [ITEM_IMPROVEMENT_MODIFIER:SPIKES:0] This also seems to change the amount that the entity will pay for items that are improved in these ways in their tokens."
                 },
                 {
                   "Token": "TRANSLATION",
                   "Arguments": "language",
                   "Description": "What language raw the entity uses. If an entity lacks this tag, translations are drawn randomly from all translation files. Multiple translation tags will only result in the last one being used. If GEN_DIVINE is entered, the entity will use a generated divine language, that is, the same language that is used for the names of angels. [TRANSLATION:DWARF]"
                 },
                 {
                   "Token": "SELECT_SYMBOL",
                   "Arguments": "noun symbol",
                   "Description": "ALL, REMAINING, BATTLE, BRIDGE, CIV, CRAFT_GUILD, FESTIVAL, LIBRARYv0.42.01, MERCHANT_COMPANY, MILITARY_UNIT, OTHER, RELIGION, ROAD, SIEGE, SITE, TEMPLE, TUNNEL, VESSEL, WALL, WAR Causes the entity to more often use these symbols in the particular SYM set. [SELECT_SYMBOL:ALL:PEACE]"
                 },
                 {
                   "Token": "SUBSELECT_SYMBOL",
                   "Arguments": "noun symbol",
                   "Description": "Causes the symbol set to be preferred as adjectives by the civilization. Used in vanilla to put violent names in sieges and batttles. [SELECT_SYMBOL:SIEGE:NAME_SIEGE] [SUBSELECT_SYMBOL:SIEGE:VIOLENT]"
                 },
                 {
                   "Token": "CULL_SYMBOL",
                   "Arguments": "noun symbol",
                   "Description": "Causes the entity to not use the words in these SYM sets. [CULL_SYMBOL:ALL:UGLY]"
                 },
                 {
                   "Token": "FRIENDLY_COLOR",
                   "Arguments": "see color",
                   "Description": "The color of this entity's civilization settlements in the world gen and embark screens, also used when announcing arrival of their caravan. Defaults to 7:0:1. [FRIENDLY_COLOR:1:0:1]"
                 },
                  {
                   "Token": "RELIGION",
                   "Arguments": "type",
                   "Description": "REGIONAL_FORCE: The creatures will worship a single force associated with the terrain of their initial biome. PANTHEON: The creatures will worship a group of gods, each aligned with their spheres and other appropriate ones as well. [RELIGION:PANTHEON]"
                 },
                 {
                   "Token": "RELIGION_SPHERE",
                   "Arguments": "sphere",
                   "Description": "Can be any available sphere - multiple entries are possible. Choosing a religious sphere will automatically make its opposing sphere not possible for the species to have: adding WATER, for example, means civs of this entity will never get FIRE as a religious sphere. Note that the DEATH sphere favours the appearance of necromancers (and therefore, towers) \"in\" the entity. [RELIGION_SPHERE:FORTRESSES]"
                 },
                 {
                   "Token": "SPHERE_ALIGNMENT",
                   "Arguments": "sphere number",
                   "Description": "This token forces an entity to favor or disfavor particular religious spheres, causing them to acquire those spheres more often when generating a pantheon. [SPHERE_ALIGNMENT:TREES:512]"
                 },
                 {
                   "Token": "POSITION",
                   "Arguments": "string",
                   "Description": "Defines a leader/noble position for a civilization. These replace previous tags such as [MAYOR] and [CAN_HAVE_SITE_LEADER] and so on. To define a position further, see Position token."
                 },
                 {
                   "Token": "LAND_HOLDER_TRIGGER",
                   "Arguments": "land holder number population wealth exported created wealth",
                   "Description": "Defines when a particular land-holding noble (baron, count, duke in vanilla) will arrive at a fortress. As of version 0.44.11, however, this is obsolete due to the changes in how sites are elevated in status."
                 },
                 {
                   "Token": "SITE_VARIABLE_POSITIONS",
                   "Arguments": "Position responsibility or ALL",
                   "Description": "Allows a site responsibility to be taken up by a dynamically generated position (lords, hearthpersons, etc). Any defined positions holding a given responsibility will take precedence over generated positions for that responsibility. Also appears to cause site disputes.[Verify]"
                 },
                 {
                   "Token": "VARIABLE_POSITIONS",
                   "Arguments": "Position responsibility or ALL",
                   "Description": "Allows a responsibility to be taken up by a dynamically generated position (such as Law-maker). Any defined positions holding a given responsibility will take precedence over generated positions for that responsibility."
                 },
                 {
                   "Token": "ETHIC",
                   "Arguments": "behavior reaction",
                   "Description": "Sets the civ's view of ethics (certain behaviors), from capital punishment to completely acceptable. This also causes the civ to look upon opposing ethics with disfavor if their reaction to it is opposing, and when at extremes (one ACCEPTABLE, another civ UNTHINKABLE; for example) they will often go to war over it. [ETHIC:EAT_SAPIENT_KILL:ACCEPTABLE]"
                 },
                 {
                   "Token": "VALUE",
                   "Arguments": "value number",
                   "Description": "Sets the civ's cultural values. Numbers range from -50 (complete anathema) to 0 (neutral) to 50 (highly valued). [VALUE:CRAFTSMANSHIP:50] Certain values must be set to 15 or more for civs to create structures and form entities during history gen:  15+ KNOWLEDGE for libraries 15+ COOPERATION and 15+ CRAFTSMANSHIP for craft guilds Guilds also need guild-valid professions (see PERMITTED_JOB)"
                 },
                 {
                   "Token": "VARIABLE_VALUEv0.42.01",
                   "Arguments": "value or ALL min max",
                   "Description": "Makes values randomized rather than specified. This tag overrides the VALUE tag. Using [VARIABLE_VALUE:ALL:x:y] and then overwriting single values with further [VARIABLE_VALUE:value:x:y] tags works."
                 },
                 {
                   "Token": "WILL_ACCEPT_TRIBUTE",
                   "Arguments": "",
                   "Description": "Makes the civ's traders accept offered goods."
                 },
                 {
                   "Token": "WANDERER, BEAST_HUNTER, SCOUT, MERCENARY",
                   "Arguments": "",
                   "Description": "The civ will send out these sorts of adventurers in worldgen, which seems to increase Tracker skill. These types of adventurers will sometimes be seen leading a battle (instead of war leaders or generals) in remote locations during world-gen, in charge of the defenders. Mercenaries and monster hunters from the civ may visit player's fortress and petition for residency there to enlist in the military or hunt monsters in caverns, respectively.v0.42.01"
                 },
                 {
                   "Token": "ABUSE_BODIES",
                   "Arguments": "",
                   "Description": "The civilization will mutilate bodies when they are the victors in history-gen warfare, such as hanging bodies from trees, putting them on spikes, and so forth. Adventurers killed in Adventurer mode will sometimes be impaled on spikes wherever they died, with or without this token, and regardless of whether they actually antagonized the townspeople."
                 },
                 {
                   "Token": "ACTIVE_SEASON",
                   "Arguments": "season",
                   "Description": "The season when the civ is most active: when they will trade, interact with you via diplomats, and/or invade you. Civs can have multiple season entries. Note: If multiple caravans arrive at the same time, you are able to select which civ to trade with at the depot menu. ACTIVE_SEASON tags may be changed for a currently active fort. [ACTIVE_SEASON:AUTUMN]"
                 },
                 {
                   "Token": "AMBUSHER",
                   "Arguments": "",
                   "Description": "When invading, sneaks around and shoots at straggling members of your society. They will spawn on the edge of the map and will only be visible when one of their party are spotted; this can be quite dangerous to undefended trade depots. If the civilization also has the SIEGER token, they will eventually ramp it up to less subtle means of warfare."
                 },
                 {
                   "Token": "AT_PEACE_WITH_WILDLIFE",
                   "Arguments": "",
                   "Description": "Will not attack wildlife, and will not be attacked by them, even if you have them in your party. This can be somewhat disconcerting when attacked by bears in the forest, and your elven ally sits back and does nothing."
                 },
                 {
                   "Token": "BABYSNATCHER",
                   "Arguments": "",
                   "Description": "Sends thieves to steal babies. Without this tag (or AMBUSHER, or ITEM_THIEF), enemy civs will only siege (if capable), and will siege as early as they would otherwise babysnatch. This can happen as early as the first year of the fort! In addition, babysnatcher civs will snatch children during worldgen, allowing them to become part of the civ if they do not escape. Note: If the playable civ in fortress mode has this tag (e.g. you add BABYSNATCHER to the dwarf entity) then the roles will be reversed and elves and humans will siege and ambush and goblins will be friendly to you. However, animals traded away to one's own caravan will count as snatched, reported upon the animal leaving the map, and the animal will not count as having been exported."
                 },
                 {
                   "Token": "BUILDS_OUTDOOR_FORTIFICATIONS",
                   "Arguments": "",
                   "Description": "Makes the civilization build castles from mead halls, and (unlike older versions) only functions when the type of site built is a hamlet/town. This, combined with the correct type of position associated with a site, is why adventurers can only lay claim to human sites. Bug:8001"
                 },
                 {
                   "Token": "BUILDS_OUTDOOR_TOMBS",
                   "Arguments": "",
                   "Description": "Makes the civilization build tombs."
                 },
                 {
                   "Token": "BANDITRY",
                   "Arguments": "percentage",
                   "Description": "Sets a percentage of the entity population to be used as bandits."
                 },
                 {
                   "Token": "DIPLOMAT_BODYGUARDS",
                   "Arguments": "",
                   "Description": "Visiting diplomats are accompanied by a pair of soldiers."
                 },
                 {
                   "Token": "GENERATED",
                   "Arguments": "",
                   "Description": "Found on generated divine \"HF Guardian Entities\".  Cannot be used in user-defined raws."
                 },
                 {
                   "Token": "INVADERS_IGNORE_NEUTRALS",
                   "Arguments": "",
                   "Description": "Causes invaders to ignore visiting caravans and other neutral creatures.[Verify]"
                 },
                 {
                   "Token": "ITEM_THIEF",
                   "Arguments": "",
                   "Description": "Sends thieves to steal items. This will also occur in history generation, and thieves will have the \"thief\" profession. Items stolen in history gen will be scattered around that creature's home. Also causes that civ to be hostile to any entity without this token. Without this tag (or AMBUSHER, or BABYSNATCHER), enemy civs will only siege (if capable), and will siege as early as they would otherwise steal. Note: If the playable civ in Fortress Mode has this tag (e.g. you add ITEM_THIEF to the Dwarf entity) then the roles will be reversed and elves and humans will siege and ambush and kobolds will be friendly to you. However, ALL items traded away to one's own caravan will count as stolen, reported when the items leave the map, and the stolen items will not count as exported."
                 },
                 {
                   "Token": "LOCAL_BANDITRY",
                   "Arguments": "",
                   "Description": "Causes the entity to send out patrols that can ambush adventurers. Said patrols will be hostile to any adventurers they encounter, regardless of race or nationality."
                 },
                 {
                   "Token": "MERCHANT_BODYGUARDS",
                   "Arguments": "",
                   "Description": "Caravan merchants are accompanied by soldiers."
                 },
                 {
                   "Token": "MERCHANT_NOBILITY",
                   "Arguments": "",
                   "Description": "Merchants will engage in cross-civ trading and form companies. In previous versions, this resulted in the civ having a Guild Representative / Merchant Baron / Merchant Prince, but now this is controlled solely by positions."
                 },
                 {
                   "Token": "PROGRESS_TRIGGER_POPULATION",
                   "Arguments": "level",
                   "Description": "0 to 5, civ will come to site once population at site has reached that level. If multiple progress triggers exist for a civ, it will come when any one of them is fulfilled instead of waiting for all of them to be reached. A value of 0 disables the trigger. 1 corresponds to 20 dwarves, 2 to 50 dwarves, 3 to 80, 4 to 110, and 5 to 140. Progress triggers may be changed, added, or deleted for a currently active fort. Note: hostile civs require that this be fulfilled as well as at least one other non-siege trigger before visiting for non-siege activities."
                 },
                 {
                   "Token": "PROGRESS_TRIGGER_PRODUCTION",
                   "Arguments": "level",
                   "Description": "0 to 5, civ will come to site once created wealth has reached that level. If multiple progress triggers exist for a civ, it will come when any one of them is fulfilled instead of waiting for all of them to be reached. A value of 0 disables the trigger. 1 corresponds to 5000☼ created wealth, 2 to 25000☼, 3 to 100000☼, 4 to 200000☼, and 5 to 300000☼. Progress triggers may be changed, added, or deleted for a currently active fort."
                 },
                 {
                   "Token": "PROGRESS_TRIGGER_TRADE",
                   "Arguments": "level",
                   "Description": "0 to 5, civ will come to site once exported goods has reached that level. If multiple progress triggers exist for a civ, it will come when any one of them is fulfilled instead of waiting for all of them to be reached. A value of 0 disables the trigger. 1 corresponds to 500☼ exported wealth, 2 to 2500☼, 3 to 10000☼, 4 to 20000☼, and 5 to 30000☼. Progress triggers may be changed, added, or deleted for a currently active fort."
                 },
                 {
                   "Token": "PROGRESS_TRIGGER_POP_SIEGE",
                   "Arguments": "level",
                   "Description": "0 to 5, civ will begin to send sieges against the player civ when this level is reached if it is hostile. If multiple progress triggers exist for a civ, it will come when any one of them is fulfilled instead of waiting for all of them to be reached. A value of 0 disables the trigger."
                 },
                 {
                   "Token": "PROGRESS_TRIGGER_PROD_SIEGE",
                   "Arguments": "level",
                   "Description": "0 to 5, civ will begin to send sieges against the player civ when this level is reached if it is hostile."
                 },
                 {
                   "Token": "PROGRESS_TRIGGER_TRADE_SIEGE",
                   "Arguments": "level",
                   "Description": "0 to 5, civ will begin to send sieges against the player civ when this level is reached if it is hostile."
                 },
                 {
                   "Token": "SIEGER",
                   "Arguments": "",
                   "Description": "Will start campfires and wait around at the edge of your map for a month or two before rushing in to attack. This will occur when the progress triggers for sieging are reached. If the civ lacks smaller methods of conflict (AMBUSHER, BABYSNATCHER, ITEM_THIEF), they will instead send smaller-scale sieges when their triggers for \"first contact\" are reached."
                 },
                 {
                   "Token": "SITE_GUARDIAN",
                   "Arguments": "",
                   "Description": "Guards certain special sites, such as a vault belonging to a demon allied with a deity.  Used in generated divine entities."
                 },
                 {
                   "Token": "SKULKING",
                   "Arguments": "",
                   "Description": "This makes the severity of attacks depend on the extent of item/baby thievery rather than the passage of time. Designed to go with ITEM_THIEF, may or may not work with BABYSNATCHER.  Prevents the civ from engaging in diplomacy or ending up at war."
                 },
                 {
                   "Token": "TREE_CAP_DIPLOMACY",
                   "Arguments": "",
                   "Description": "Visiting diplomats impose tree cutting quotas; without this, they will simply compliment your fortress and leave. Also causes the diplomat to make unannounced first contact at the very beginning of the first spring after your fortress becomes a land holder."
                 },
                 {
                   "Token": "LAYER_LINKED",
                   "Arguments": "",
                   "Description": "Defines if a civilization is a hidden subterranean entity, such as bat man civilizations. May spawn in any of the three caverns, in groups of 5-10 soldiers who will hunt down nearby cavern creatures. If you embark as this civ, you have access to pets and trees from all three layers, not only the first."
                 },
                 {
                   "Token": "UNDEAD_CANDIDATE",
                   "Arguments": "",
                   "Description": "Does nothing in the current version. [1]"
                 },
                 {
                   "Token": "GENERATE_KEYBOARD_INSTRUMENTS, GENERATE_PERCUSSION_INSTRUMENTS, GENERATE_STRINGED_INSTRUMENTS, GENERATE_WIND_INSTRUMENTS, GENERATE_DANCE_FORMS, GENERATE_MUSICAL_FORMS, GENERATE_POETIC_FORMSv0.42.01",
                   "Arguments": "",
                   "Description": "Makes civilizations generate the given instruments/forms."
                 },
                 {
                   "Token": "SCHOLARv0.42.01",
                   "Arguments": "scholar type",
                   "Description": "ALL, ASTRONOMER, CHEMIST, DOCTOR, ENGINEER, GEOGRAPHER, HISTORIAN, MATHEMATICIAN, NATURALIST, PHILOSOPHER"
                 },
                 {
                   "Token": "SET_SCHOLARS_ON_VALUES_AND_JOBSv0.42.01",
                   "Arguments": "",
                   "Description": "Generates scholars based on the values generated with the VARIABLE_VALUE tag."
                 },
                 {
                   "Token": "NO_ARTIFACT_CLAIMSv0.44.01",
                   "Arguments": "",
                   "Description": "Used for kobolds."
                 },
                 {
                   "Token": "MINING_UNDERWORLD_DISASTERSv0.47.02",
                   "Arguments": "",
                   "Description": "The civilization can breach the Underworld during world generation."
                 },
                 {
                   "Token": "AMMO",
                   "Arguments": "item token",
                   "Description": "Used after a ranged weapon type. [AMMO:ITEM_AMMO_BOLTS]"
                 },
                 {
                   "Token": "ARMOR",
                   "Arguments": "item token rarity",
                   "Description": "Rarity is optional, and valid values are FORCED, COMMON, UNCOMMON, and RARE (anything else is treated as COMMON). FORCED items will be available 100% of the time, COMMON items 50%, UNCOMMON items 10%, and RARE items 1%. If certain armor types are lacking after performing one pass of randomised checks, the game will repeat random checks until an option is successfully chosen. [ARMOR:ITEM_ARMOR_PLATEMAIL:COMMON]"
                 },
                 {
                   "Token": "DIGGER",
                   "Arguments": "item token",
                   "Description": "Causes the selected weapon to fall under the \"digging tools\" section of the embark screen. Also forces the weapon to be made out of metal, which can cause issues if a modded entity has access to picks without access to metal - for those cases, listing the pick under the [WEAPON] token works just as well. Note that this tag is neither necessary nor sufficient to allow use of that item as a mining tool – for that, the item itself needs to be a weapon with [SKILL:MINING]. [DIGGER:ITEM_WEAPON_PICK]"
                 },
                 {
                   "Token": "GLOVES",
                   "Arguments": "item token rarity",
                   "Description": "Rarity is optional, and valid values are FORCED, COMMON, UNCOMMON, and RARE (anything else is treated as COMMON). Uses the same rarity values and methods as outlined in ARMOR. [GLOVES:ITEM_GLOVES_GLOVES:COMMON]"
                 },
                 {
                   "Token": "HELM",
                   "Arguments": "item token rarity",
                   "Description": "Rarity is optional, and valid values are FORCED, COMMON, UNCOMMON, and RARE (anything else is treated as COMMON). Uses the same rarity values and methods as outlined in ARMOR. [HELM:ITEM_HELM_HELM:COMMON]"
                 },
                 {
                   "Token": "INSTRUMENT",
                   "Arguments": "item token",
                   "Description": "No longer used as of Version 0.42.01 due to the ability to generate instruments in world generation. It is still usable if pre-defined instruments are modded in, and generated musical forms are capable of selecting pre-defined instruments to use. However, reactions for making instruments, instrument parts, and/or assembling such instruments need to be added as well, as this token no longer adds such instruments to the craftdwarf's workshop menu. [INSTRUMENT:ITEM_INSTRUMENT_FLUTE]"
                 },
                 {
                   "Token": "PANTS",
                   "Arguments": "item token rarity",
                   "Description": "Rarity is optional, and valid values are FORCED, COMMON, UNCOMMON, and RARE (anything else is treated as COMMON). Uses the same rarity values and methods as outlined in ARMOR. [PANTS:ITEM_PANTS_PANTS:COMMON]"
                 },
                 {
                   "Token": "SHIELD",
                   "Arguments": "item token",
                   "Description": "[SHIELD:ITEM_SHIELD_SHIELD]"
                 },
                 {
                   "Token": "SHOES",
                   "Arguments": "item token rarity",
                   "Description": "Rarity is optional, and valid values are FORCED, COMMON, UNCOMMON, and RARE (anything else is treated as COMMON). Uses the same rarity values and methods as outlined in ARMOR. [SHOES:ITEM_SHOES_SHOES:COMMON]"
                 },
                 {
                   "Token": "SIEGEAMMO",
                   "Arguments": "item token",
                   "Description": "[SIEGEAMMO:ITEM_SIEGEAMMO_BALLISTA]"
                 },
                 {
                   "Token": "TOOL",
                   "Arguments": "item token",
                   "Description": "[TOOL:ITEM_TOOL_NEST_BOX]"
                 },
                 {
                   "Token": "TOY",
                   "Arguments": "item token",
                   "Description": "[TOY:ITEM_TOY_PUZZLEBOX]"
                 },
                 {
                   "Token": "TRAPCOMP",
                   "Arguments": "item token",
                   "Description": "[TRAPCOMP:ITEM_TRAPCOMP_GIANTAXEBLADE]"
                 },
                 {
                   "Token": "WEAPON",
                   "Arguments": "item token",
                   "Description": "While this does not accept a rarity value, something similar can be achieved by having multiple variations of a weapon type with small differences and specifying each of them.[1] [WEAPON:ITEM_WEAPON_AXE_BATTLE]"
                 },
                 {
                   "Token": "USE_ANIMAL_PRODUCTS",
                   "Arguments": "",
                   "Description": "Allows use of products made from animals. All relevant creatures will be able to provide wool, silk, and extracts (including milk and venom) for trade, and non-sentient creatures (unless ethics state otherwise) will be able to provide eggs, caught fish, meat, leather, bone, shell, pearl, horn, and ivory."
                 },
                 {
                   "Token": "USE_ANY_PET_RACE",
                   "Arguments": "",
                   "Description": "Any creature in the civilization's list of usables (from the surrounding 7x7 or so of squares and map features in those squares) which has PET or PET_EXOTIC will be available as a pet, pack animal (with PACK_ANIMAL), wagon puller (with WAGON_PULLER), mount (with MOUNT or MOUNT_EXOTIC), or siege minion (with TRAINABLE_WAR and without CAN_LEARN). This notion of the initial usable creature list, which then gets pared down or otherwise considered, applies below as well. All common domestic and equipment creatures are also added to the initial list."
                 },
                 {
                   "Token": "USE_CAVE_ANIMALS",
                   "Arguments": "",
                   "Description": "If they don't have it, creatures with exclusively subterranean biomes are skipped. If they have it, cave creatures with PET will also be available as pets, pack animals (with PACK_ANIMAL), wagon pullers (with WAGON_PULLER), mounts (with MOUNT or MOUNT_EXOTIC), and siege minions (with TRAINABLE_WAR and without CAN_LEARN)."
                 },
                 {
                   "Token": "USE_EVIL_ANIMALS",
                   "Arguments": "",
                   "Description": "Without this, EVIL creatures are skipped, otherwise, evil creatures with SLOW_LEARNER or without CAN_LEARN will be also available as pets (with PET), pack animals (with PACK_ANIMAL), wagon pullers (with WAGON_PULLER), mounts (with MOUNT or MOUNT_EXOTIC), and siege minions (with TRAINABLE_WAR or SLOW_LEARNER), even the normally untameable species."
                 },
                 {
                   "Token": "USE_EVIL_PLANTS",
                   "Arguments": "",
                   "Description": "Same as USE_EVIL_ANIMALS for all uses of plants."
                 },
                 {
                   "Token": "USE_EVIL_WOOD",
                   "Arguments": "",
                   "Description": "Same as USE_EVIL_ANIMALS for all uses of wood."
                 },
                 {
                   "Token": "USE_GOOD_ANIMALS",
                   "Arguments": "",
                   "Description": "Without this GOOD creatures are skipped, otherwise, good creatures without CAN_LEARN will also be available as pets (with PET), pack animals (with PACK_ANIMAL), wagon pullers (with WAGON_PULLER), mounts (with MOUNT or MOUNT_EXOTIC), and siege minions (with TRAINABLE_WAR), even the normally untameable species."
                 },
                 {
                   "Token": "USE_GOOD_PLANTS",
                   "Arguments": "",
                   "Description": "Same as USE_GOOD_ANIMALS for all uses of plants."
                 },
                 {
                   "Token": "USE_GOOD_WOOD",
                   "Arguments": "",
                   "Description": "Same as USE_GOOD_ANIMALS for all uses of wood."
                 },
                 {
                   "Token": "USE_MISC_PROCESSED_WOOD_PRODUCTS",
                   "Arguments": "",
                   "Description": "If the relevant professions are permitted, controls availability of lye (LYE_MAKING), charcoal (BURN_WOOD), and potash (POTASH_MAKING)."
                 },
                 {
                   "Token": "USE_NON_EXOTIC_PET_RACEv0.47.01",
                   "Arguments": "",
                   "Description": "Makes the civilization use all locally available non-exotic pets."
                 },
                 {
                   "Token": "COMMON_DOMESTIC_MOUNT",
                   "Arguments": "",
                   "Description": "Gives the civilization access to creatures with COMMON_DOMESTIC and MOUNT. Additionally, all available (based on USE_ANY_PET_RACE, USE_CAVE_ANIMALS, USE_GOOD_ANIMALS, and USE_EVIL_ANIMALS) creature with MOUNT and PET will be allowed for use as mounts during combat."
                 },
                 {
                   "Token": "COMMON_DOMESTIC_PACK",
                   "Arguments": "",
                   "Description": "Gives the civilization access to creatures with COMMON_DOMESTIC and PACK_ANIMAL. Additionally, all available (see above) creatures with PACK_ANIMAL and PET will be allowed for use during trade as pack animals."
                 },
                 {
                   "Token": "COMMON_DOMESTIC_PET",
                   "Arguments": "",
                   "Description": "Gives the civilization access to creatures with COMMON_DOMESTIC and PET. Additionally, all available (see above) creatures with PET will be allowed for use as pets."
                 },
                 {
                   "Token": "COMMON_DOMESTIC_PULL",
                   "Arguments": "",
                   "Description": "Gives the civilization access to creatures with COMMON_DOMESTIC and WAGON_PULLER. Additionally, all available (see above) creatures with WAGON_PULLER and PET will be allowed for use during trade to pull wagons."
                 },
                 {
                   "Token": "RIVER_PRODUCTS",
                   "Arguments": "",
                   "Description": "Allow use of river products in the goods available for trade."
                 },
                 {
                   "Token": "OCEAN_PRODUCTS",
                   "Arguments": "",
                   "Description": "Allow use of ocean products (including amber and coral) in the goods available for trade. Without OCEAN_PRODUCTS, civilizations will not be able to trade ocean fish even if they are also available from other sources (e.g. sturgeons and stingrays)."
                 },
                 {
                   "Token": "INDOOR_FARMING",
                   "Arguments": "",
                   "Description": "Allow use of underground plant products in the goods available for trade. Lack of suitable vegetation in the caverns will cause worldgen rejections."
                 },
                 {
                   "Token": "OUTDOOR_FARMING",
                   "Arguments": "",
                   "Description": "Allow use of outdoor plant products in the goods available for trade. Lack of suitable vegetation in this civilization's starting area will cause worldgen rejections."
                 },
                 {
                   "Token": "INDOOR_GARDENS",
                   "Arguments": "",
                   "Description": "Allow use of underground plant growths (quarry bush leaves, in unmodded games) in the goods available for trade."
                 },
                 {
                   "Token": "OUTDOOR_GARDENS",
                   "Arguments": "",
                   "Description": "Allow use of outdoor plant growths in the goods available for trade."
                 },
                 {
                   "Token": "INDOOR_ORCHARDS",
                   "Arguments": "",
                   "Description": "Allows use of indoor tree growths in the goods available for trade. Not used in vanilla entities, as vanilla underground trees do not grow fruit. Needs INDOOR_WOOD for proper work. Will cause rejections, if growths are unavailable."
                 },
                 {
                   "Token": "OUTDOOR_ORCHARDS",
                   "Arguments": "",
                   "Description": "Allows use of outdoor tree growths in the goods available for trade. Needs OUTDOOR_WOOD to proper work[Verify]."
                 },
                 {
                   "Token": "CLOTHING",
                   "Arguments": "",
                   "Description": "Civilization members will attempt to wear clothing."
                 },
                 {
                   "Token": "SUBTERRANEAN_CLOTHING",
                   "Arguments": "",
                   "Description": "Will wear things made of spider silk and other subterranean materials."
                 },
                 {
                   "Token": "EQUIPMENT_IMPROVEMENTS",
                   "Arguments": "",
                   "Description": "Adds decorations to equipment based on the level of the generated unit. Also improves item quality."
                 },
                 {
                   "Token": "IMPROVED_BOWS",
                   "Arguments": "",
                   "Description": "Adds decorations to weapons generated for bowman and master bowman."
                 },
                 {
                   "Token": "METAL_PREF",
                   "Arguments": "",
                   "Description": "Allows metal materials to be used to make cages (inexpensive metals only) and crafts."
                 },
                 {
                   "Token": "STONE_PREF",
                   "Arguments": "",
                   "Description": "Allows the civilization to make use of nearby stone types. If the FURNACE_OPERATOR job is permitted, also allows ore-bearing stones to be smelted into metals."
                 },
                 {
                   "Token": "WOOD_WEAPONS",
                   "Arguments": "",
                   "Description": "The civilization can make traditionally metallic weapons such as swords and spears from wood."
                 },
                 {
                   "Token": "WOOD_ARMOR",
                   "Arguments": "",
                   "Description": "The civilization can make traditionally metallic armor such as mail shirts and helmets from wood."
                 },
                 {
                   "Token": "GEM_PREF",
                   "Arguments": "",
                   "Description": "Enables creatures of this entity to bring gems in trade."
                 },
                 {
                   "Token": "INDOOR_WOOD",
                   "Arguments": "",
                   "Description": "Allow use of subterranean wood types, such as tower-cap and fungiwood logs."
                 },
                 {
                   "Token": "OUTDOOR_WOOD",
                   "Arguments": "",
                   "Description": "Allow use of outdoor wood types, such as mangrove and oak."
                 },
                 {
                   "Token": "GEM_SHAPE",
                   "Arguments": "shape",
                   "Description": "Precious gems cut by this civilization's jewelers can be of this shape."
                 },
                 {
                   "Token": "STONE_SHAPE",
                   "Arguments": "shape",
                   "Description": "Ordinary non-gem stones cut by this civilization's jewelers can be of this shape."
                 },
                 {
                   "Token": "DIVINE_MAT_CLOTHING",
                   "Arguments": "",
                   "Description": "Allows use of materials with [DIVINE] for clothing. Used for generated divine entities."
                 },
                 {
                   "Token": "DIVINE_MAT_CRAFTS",
                   "Arguments": "",
                   "Description": "Allows use of materials with [DIVINE] for crafts.[Verify] Used for generated divine entities."
                 },
                 {
                   "Token": "DIVINE_MAT_WEAPONS",
                   "Arguments": "",
                   "Description": "Allows use of metals with [DIVINE] for weapons. Used for generated divine entities."
                 },
                 {
                   "Token": "DIVINE_MAT_ARMOR",
                   "Arguments": "",
                   "Description": "Allows use of metals with [DIVINE] for armor. Used for generated divine entities."
                 },
                  {
                   "Token": "ANIMAL",
                   "Arguments": "",
                   "Description": "Start an animal definition."
                 },
                 {
                   "Token": "ANIMAL_TOKEN",
                   "Arguments": "creature token",
                   "Description": "Select specific creature."
                 },
                 {
                   "Token": "ANIMAL_CASTE_TOKEN",
                   "Arguments": "creature caste token",
                   "Description": "Select specific creature caste (requires ANIMAL_TOKEN). Sites with animal populations will still include all castes, but only the selected ones will be used for specific roles."
                 },
                 {
                   "Token": "ANIMAL_CLASS",
                   "Arguments": "creature class",
                   "Description": "Select creature castes with this creature class (multiple uses allowed)."
                 },
                 {
                   "Token": "ANIMAL_FORBIDDEN_CLASS",
                   "Arguments": "creature class",
                   "Description": "Forbid creature castes with this creature class (multiple uses allowed)."
                 },
                 {
                   "Token": "ANIMAL_ALWAYS_PRESENT",
                   "Arguments": "",
                   "Description": "Animal will be present even if it does not naturally occur in the entity's terrain. All creatures, including demons, night trolls and other generated ones will be used if no specific creature or class is selected."
                 },
                 {
                   "Token": "ANIMAL_NEVER_MOUNT, ANIMAL_ALWAYS_MOUNT ANIMAL_NEVER_WAGON_PULLER, ANIMAL_ALWAYS_WAGON_PULLER ANIMAL_NEVER_SIEGE, ANIMAL_ALWAYS_SIEGE ANIMAL_NEVER_PET, ANIMAL_ALWAYS_PET ANIMAL_NEVER_PACK_ANIMAL, ANIMAL_ALWAYS_PACK_ANIMAL",
                   "Arguments": "",
                   "Description": "Override creature usage tokens. Respectively: MOUNT and MOUNT_EXOTIC WAGON_PULLER TRAINABLE_WAR and not CAN_LEARN PET and PET_EXOTIC PACK_ANIMAL ALWAYS overrides NEVER if a caste is matched by more than one animal definition."
                 },
                 {
                   "Token": "TISSUE_STYLE",
                   "Arguments": "tissue style unit ID",
                   "Description": "Select a tissue layer which has the ID attached using TISSUE_STYLE_UNIT token in unit raws. This allows setting further cultural style parameters for the selected tissue layer."
                 },
                 {
                   "Token": "TS_MAINTAIN_LENGTH",
                   "Arguments": "minimum length? maximum length?",
                   "Description": "Presumably sets culturally preferred tissue length for selected tissue. Needs testing. Dwarves have their beards set to 100:NONE by default."
                 },
                 {
                   "Token": "TS_PREFERRED_SHAPING",
                   "Arguments": "styling token",
                   "Description": "Valid tokens are NEATLY_COMBED, BRAIDED, DOUBLE_BRAIDS, PONY_TAILS, CLEAN_SHAVEN and STANDARD_HAIR/BEARD/MOUSTACHE/SIDEBURNS_SHAPINGS. Presumably sets culturally preferred tissue shapings for selected tissue. Needs testing."
                 }
            ]
        },
        {
            "name": "GRAPHICS",
            "description": "graphic tiles for creatures. These are not found inside the raw/objects folder",
            "token": [

            ]
        },
        {
            "name": "TILE_PAGE",
            "description": "defines graphic assets",
            "token": [

            ]
        },
        {
            "name": "PALETTE",
            "description": "defines color palettes to be used with graphics",
            "token": [

            ]
        },
        {
            "name": "INTERACTION",
            "description": "interaction definitions",
            "token": [
                {
                   "Token": "EXPERIMENT_ONLY",
                   "Context": "Global",
                   "Arguments": "",
                   "Description": "Disallows use of the interaction in play, but if the interaction animates or resurrects corpses, or has an I_SOURCE:EXPERIMENT tag, it can be used in worldgen. Animation and resurrection interactions do not need I_SOURCE:EXPERIMENT to work in worldgen."
                 },
                 {
                   "Token": "I_SOURCE",
                   "Context": "Global",
                   "Arguments": "type",
                   "Description": "Defines what things are capable of triggering this interaction - multiple sources may be specified. Valid values: CREATURE_ACTION - Specifies that the interaction may be used in conjunction with [CAN_DO_INTERACTION] and [CE_CAN_DO_INTERACTION], but it isn't actually necessary for this. It might exist simply to allow for the inclusion of IS_ tokens (detailed below) to be applied when the interaction is used in this context. ATTACK - Allows the interaction to be used in conjunction with [SPECIALATTACK_INTERACTION] and [CE_SPECIAL_ATTACK_INTERACTION]. INGESTION - Allows the interaction to be used in conjunction with [CE_BODY_MAT_INTERACTION]. DEITY - Allows the interaction to be inflicted upon mortals by the gods, for reasons dictated by [IS_USAGE_HINT]. SECRET - Allows the interaction to act as a secret which can be learnt and passed on to others, as specified via [IS_SECRET]. Appropriate interaction effects with a creature target will be applied to individuals who learn the secret. It is possible to set restrictions on who may learn the secret by using creature target tokens as described below. Also see [IS_SECRET_GOAL] and [IS_SPHERE]. REGION - Allows the interaction to take place spontaneously in regions specified using [IS_REGION]. Also see [IS_FREQUENCY] and [IE_INTERMITTENT]. DISTURBANCE - Allows the interaction to take place spontaneously in disturbed tombs; generated interactions with this token are used to create mummies. UNDERGROUND_SPECIAL - Allows the interaction to take place spontaneously in curious underground structures (which have since been removedv0.40.01); generated interactions with this token used to be used to produce zombies when creating the structure's inhabitants. EXPERIMENT - This can be used by NIGHT_CREATURE_EXPERIMENTERs while \"performing horrible experiments\" in worldgen. Only seems relevant for interactions that target living creatures. Note that all NIGHT_CREATURE_EXPERIMENTERs have access to generated experiments, and due to the large number of generated experiments available custom experiment interactions will tend to show up very rarely."
                 },
                 {
                   "Token": "IS_HIST_STRING_1",
                   "Context": "Within I_SOURCE",
                   "Arguments": "text",
                   "Description": "Describes what the interaction did to a historical figure; this is displayed in legends mode following the name of the historical figure who performed the interaction and preceding the name of the targeted historical figure (or, in the case of [I_SOURCE:INGESTION], the historical figure from whom the consumed material was extracted). [IS_HIST_STRING_1: cursed]"
                 },
                 {
                   "Token": "IS_HIST_STRING_2",
                   "Context": "Within I_SOURCE",
                   "Arguments": "text",
                   "Description": "Describes what the interaction did to a historical figure; this is displayed in legends mode after the name of the historical figure who was targeted by the interaction. In the case of [I_SOURCE:INGESTION], it is displayed after the name of the historical figure from whom the consumed material was extracted. [IS_HIST_STRING_2: to assume the form of a lizard-like monster every full moon]"
                 },
                 {
                   "Token": "IS_TRIGGER_STRING",
                   "Context": "Within I_SOURCE",
                   "Arguments": "text",
                   "Description": "Displayed as an announcement when the interaction is carried out during play. The text follows the name of the target unit, and is preceded by IS_TRIGGER_STRING_SECOND or IS_TRIGGER_STRING_THIRD. May be limited to [I_SOURCE:DEITY] and [I_SOURCE:EXPERIMENT] interactions at present; this still needs to be tested. [IS_TRIGGER_STRING: been infected with a contagious ghoulish condition]"
                 },
                 {
                   "Token": "IS_TRIGGER_STRING_SECOND",
                   "Context": "Within I_SOURCE",
                   "Arguments": "text",
                   "Description": "Presented before the IS_TRIGGER_STRING when describing the event in the second person. [IS_TRIGGER_STRING_SECOND: have]"
                 },
                 {
                   "Token": "IS_TRIGGER_STRING_THIRD",
                   "Context": "Within I_SOURCE",
                   "Arguments": "text",
                   "Description": "Presented before the IS_TRIGGER_STRING when describing the event in the third person. [IS_TRIGGER_STRING_THIRD: has]"
                 },
                 {
                   "Token": "IS_NAME",
                   "Context": "Within I_SOURCE",
                   "Arguments": "string",
                   "Description": "Generally used with [I_SOURCE:SECRET] interactions to describe what the secret is about (though it may be used to name any I_SOURCE). This name is engraved onto the appropriate secret-containing slabs from worldgen, and is used in legends mode when describing the secret being learnt by historical figures. [IS_NAME:the secrets of life and death]"
                 },
                 {
                   "Token": "IS_SPHERE",
                   "Context": "Within I_SOURCE:SECRET",
                   "Arguments": "sphere",
                   "Description": "Indicates the sphere to which this secret pertains. Only one sphere can be defined for each [I_SOURCE:SECRET] token, so several [I_SOURCE:SECRET] tokens are required to make a secret belong to multiple spheres."
                 },
                 {
                   "Token": "IS_SECRET_GOAL",
                   "Context": "Within I_SOURCE:SECRET",
                   "Arguments": "Secret Goal token",
                   "Description": "Indicates why somebody would want to learn the secret. Valid values: STAY_ALIVE MAINTAIN_ENTITY_STATUS START_A_FAMILY RULE_THE_WORLD CREATE_A_GREAT_WORK_OF_ART CRAFT_A_MASTERWORK BRING_PEACE_TO_THE_WORLD BECOME_A_LEGENDARY_WARRIOR MASTER_A_SKILL FALL_IN_LOVE SEE_THE_GREAT_NATURAL_SITES IMMORTALITY However, currently only IMMORTALITY will result in a secret being pursued during world-gen.[Verify]"
                 },
                 {
                   "Token": "IS_SECRET",
                   "Context": "Within I_SOURCE:SECRET",
                   "Arguments": "Secret Flag",
                   "Description": "Indicates how the secret can be learned. Valid values: SUPERNATURAL_LEARNING_POSSIBLE - gods may gift the secret to their worshippers. Secrets with [IS_SPHERE] specified may only be granted by gods who have at least one matching sphere. MUNDANE_RESEARCH_POSSIBLE - the secret can be researched by mundane means. This doesn't do anything at present. [1]. MUNDANE_TEACHING_POSSIBLE - the secret can be taught to apprentices MUNDANE_RECORDING_POSSIBLE:objects/text/(book_title).txt:objects/text/(book_topic).txt - the secret can be written in books with the specified title. If this tag is present, a slab will be created upon learning the secret by supernatural means."
                 },
                 {
                   "Token": "IS_USAGE_HINT",
                   "Context": "Within I_SOURCE:DEITY",
                   "Arguments": "Usage Hint token",
                   "Description": "Indicates why a deity would choose to perform this interaction. See CDI:USAGE_HINT below for valid values - in this context, MINOR_BLESSING, MEDIUM_BLESSING, MINOR_CURSE, MEDIUM_CURSE, and MAJOR_CURSE are the only values that make sense."
                 },
                 {
                   "Token": "IS_REGION",
                   "Context": "Within I_SOURCE:REGION",
                   "Arguments": "Region type",
                   "Description": "Indicates what types of regions are capable of performing this interaction. This token may be specified several times per I_SOURCE to permit multiple terrain/alignment types. Valid values: ANY permits the interaction to occur in all regions, regardless of terrain or alignment Terrain:  DESERT FOREST GLACIER GRASSLAND HILLS LAKE MOUNTAINS OCEAN SWAMP TUNDRA ANY_TERRAIN permits the interaction to occur in all regions which meet alignment specifications Alignment:  NORMAL_ALLOWED EVIL_ALLOWED GOOD_ALLOWED SAVAGE_ALLOWED EVIL_ONLY GOOD_ONLY SAVAGE_ONLY"
                 },
                 {
                   "Token": "IS_FREQUENCY",
                   "Context": "Within I_SOURCE",
                   "Arguments": "Probability",
                   "Description": "When used with [I_SOURCE:REGION], determines how likely it is for the region(s) specified via [IS_REGION] to possess this interaction. Note: it appears that regions aren't allowed to possess more than a single regional interaction at present."
                 },
                 {
                   "Token": "I_TARGET",
                   "Context": "Global",
                   "Arguments": "ID, type",
                   "Description": "Defines the targets available for subsequent use with [I_EFFECT] tokens. Multiple targets may be specified; the precise target(s) used with each interaction effect are indicated via their ID (see [IE_TARGET]). Valid values: CORPSE - The target is a CORPSE or CORPSEPIECE item. CREATURE - The target is a unit. MATERIAL - This is a valid target for use in [I_EFFECT:MATERIAL_EMISSION] interaction effects, and is used to set the material or flow type of the emission. This information, in turn, is either obtained from an [IT_MATERIAL] token or by using [IT_LOCATION:CONTEXT_MATERIAL]. Using the latter implies that the precise emission info will be provided when defining how an interaction user can use the interaction in question via CDI tokens, enabling one to create 'template' material emission interactions such as the MATERIAL_EMISSION and MATERIAL_EMISSION_WITH_HIDE interactions included in the vanilla raws. LOCATION - The target is a local map tile. If used with [IT_LOCATION:CONTEXT_CREATURE_OR_LOCATION], creatures at the target tile are also valid targets."
                 },
                 {
                   "Token": "IT_LOCATION",
                   "Context": "Within I_TARGET",
                   "Arguments": "Location",
                   "Description": "This is often included after [I_TARGET] token to add more detail about the target. Valid values: CONTEXT_CREATURE - Used with CREATURE to target the whole unit. CONTEXT_BP - Used with CREATURE to target the body part specified in [CDI:BP_REQUIRED]. CONTEXT_LOCATION - Used with LOCATION to target only a tile. CONTEXT_CREATURE_OR_LOCATION - Used with LOCATION to allow for targetting of both creatures and tiles. CONTEXT_ITEM - Used with CORPSE. CONTEXT_REGION - Can only be used by [I_SOURCE:REGION] interactions. CONTEXT_MATERIAL - Used with MATERIAL if you want an [I_EFFECT:MATERIAL_EMISSION] to obtain the emission material/flow type from [CDI:MATERIAL] or [CDI:FLOW]. RANDOM_NEARBY_LOCATION - Used with LOCATION. Targets a location from somewhere random within a number of squares from another LOCATION target specified by its target ID. For example, [I_TARGET:B:LOCATION] with [IT_LOCATION:RANDOM_NEARBY_LOCATION:A:5] will randomly select a tile lying somewhere within a radius of 5 tiles from [I_TARGET:A:LOCATION]. A walkable path between the two locations must exist."
                 },
                 {
                   "Token": "IT_MANUAL_INPUT",
                   "Context": "Within I_TARGET",
                   "Arguments": "text",
                   "Description": "Tells the adventure mode player what they should be selecting. If not specified, the player will only be able to target themselves."
                 },
                 {
                   "Token": "IT_AFFECTED_CREATURE",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "CREATURE:CASTE",
                   "Description": "Specifies specific creatures the interaction can target."
                 },
                 {
                   "Token": "IT_AFFECTED_CLASS",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "Creature class",
                   "Description": "Specifies creature classes the interaction can target."
                 },
                 {
                   "Token": "IT_IMMUNE_CREATURE",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "CREATURE:CASTE",
                   "Description": "Specifies specific creatures the interaction cannot target."
                 },
                 {
                   "Token": "IT_IMMUNE_CLASS",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "Creature class",
                   "Description": "Specifies creature classes the interaction cannot target."
                 },
                 {
                   "Token": "IT_REQUIRES",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "Creature token or property",
                   "Description": "Indicates that the target must have the specified property. Valid values: FIT_FOR_ANIMATION - Any corpse or body part that can become a zombie (heads, hands, etc.) FIT_FOR_RESURRECTION - The target corpse's UPPERBODY must be attached. HAS_BLOOD MORTAL NO_AGING STERILE Creature token: BLOODSUCKER, CAN_LEARN, CAN_SPEAK, CRAZED, EXTRAVISION, MISCHIEVOUS (or MISCHIEVIOUS), NO_CONNECTIONS_FOR_MOVEMENT, NO_DIZZINESS, NO_DRINK, NO_EAT, NO_FEVERS, NO_PHYS_ATT_GAIN, NO_PHYS_ATT_RUST, NO_SLEEP, NO_THOUGHT_CENTER_FOR_MOVEMENT, NOBREATHE, NOEMOTION, NOEXERT, NOFEAR, NONAUSEA, NOPAIN, NOSTUN, NOT_LIVING, NOTHOUGHT, OPPOSED_TO_LIFE, PARALYZEIMMUNE, SUPERNATURAL, TRANCES, UTTERANCES"
                 },
                 {
                   "Token": "IT_FORBIDDEN",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "Creature token or property",
                   "Description": "Indicates that the target must not have the specified property. Valid values are the same as for IT_REQUIRES."
                 },
                 {
                   "Token": "IT_CANNOT_TARGET_IF_ALREADY_AFFECTED",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "",
                   "Description": "Prevents the interaction from targeting a creature that's already under the effect of the same interaction."
                 },
                 {
                   "Token": "IT_CANNOT_HAVE_SYNDROME_CLASS",
                   "Context": "Within I_TARGET:CORPSE or I_TARGET:CREATURE",
                   "Arguments": "Syndrome class",
                   "Description": "Prevents the interaction from targeting a creature under the effects of a syndrome having the specified SYN_CLASS value."
                 },
                 {
                   "Token": "IT_MATERIAL",
                   "Context": "Within I_TARGET:MATERIAL",
                   "Arguments": "type",
                   "Description": "Specifies the type of material the interaction targets; currently only used for MATERIAL_EMISSION interaction effects. See Breath Attack Types. Valid values: FLOW:Breath attack token - The emission will consist of the specified special flow type. MATERIAL:Material token:Breath attack token - The emission will consist of the specified material dispersed in the specified manner. CONTEXT_MATERIAL - Indicates the emission details should be obtained from [CDI:MATERIAL] or [CDI:FLOW]."
                 },
                 {
                   "Token": "I_EFFECT",
                   "Context": "Global",
                   "Arguments": "type",
                   "Description": "Specifies what the interaction does to the targets. Multiple [I_EFFECT]s may be specified in a single interaction, and the same type may be used more than once. Valid values: ADD_SYNDROME - Adds one or more syndromes to a valid creature target.  You must specify the syndrome details just below this interaction effect using the [SYNDROME] tag followed by the relevant syndrome tokens. See here for more information. ANIMATE - Raises the target corpse/bodypart as an undead unit. The zombie will always be hostile to life and will retain no information about its original personality/loyalties. Syndromes can also be specified within this tag. If a regional interaction contains this effect, affected regions will have undead wildlife. RESURRECT - Takes a target corpse and returns the creature to life.  This can be used on parts that are not FIT_FOR_RESURRECTION, but only the main part (with an UPPERBODY attached) will remain loyal to its original faction.  Syndromes can also be specified within this tag. CLEAN - Removes contaminants from a valid creature target. See [IE_GRIME_LEVEL]  and [IE_SYNDROME_TAG]. CONTACT - Causes the creatures to touch. MATERIAL_EMISSION - Causes a particular material to be emitted. Used by evil weather and the MATERIAL_EMISSION interaction. HIDE - Allows the creature to hide even if another creature can see it. CREATE_ITEM - Creates an item as described by [IE_ITEM] and [IE_ITEM_QUALITY]. CHANGE_ITEM_QUALITY - Alters an item's quality level as indicated by either [IE_CHANGE_QUALITY] or [IE_SET_QUALITY]. When targeting a unit, all items equipped by that unit will be affected. SUMMON_UNIT - Creates a new unit at the target. The type of unit can either be specified using the [CREATURE] token, or made to be randomly selected as indicated by a variety of flag-based tokens: [IE_CREATURE_FLAG], [IE_FORBIDDEN_CREATURE_FLAG], [IE_CREATURE_CASTE_FLAG], [IE_FORBIDDEN_CREATURE_CASTE_FLAG], [IE_HAVE_FAST_EFFORTLESS_GAIT_SPEED] and/or [IE_ALL_SLOW_EFFORTLESS_GAIT_SPEED]. See also [IE_TIME_RANGE] and [IE_MAKE_PET_IF_POSSIBLE]. PROPEL_UNIT - Applies a force specified using [IE_PROPEL_FORCE] to a unit to knock it back. CHANGE_WEATHER - Changes the weather as specified by [IE_ADD_WEATHER] and/or [IE_REMOVE_WEATHER]. RAISE_GHOST - Present in version 0.47.01 and accepted as a valid I_EFFECT token, but does not have an effect currently."
                 },
                 {
                   "Token": "IE_ARENA_NAME",
                   "Context": "Within I_EFFECT",
                   "Arguments": "text",
                   "Description": "Allows the interaction effect to be applied directly to newly spawned creatures in arena mode. The specified name is used to represent it within the creature creation effects list."
                 },
                 {
                   "Token": "IE_TARGET",
                   "Context": "Within I_EFFECT",
                   "Arguments": "ID",
                   "Description": "Specifies which I_TARGET a particular interaction effect will be applied to. For example, in an interaction with the token [I_TARGET:B:CREATURE], 'B' is the ID used to indicate this target option. [I_EFFECT:ADD_SYNDROME] followed by [IE_TARGET:B] would therefore apply the syndrome to this target. Certain types of interaction effects require multiple IE_TARGET tokens in a specific order to function properly. A few effects do not require a target at all."
                 },
                 {
                   "Token": "IE_INTERMITTENT",
                   "Context": "Within I_EFFECT",
                   "Arguments": "Frequency",
                   "Description": "Only appears to work with [I_SOURCE:REGION] interactions. Indicates that the effect happens intermittently and specifies roughly how often. Regional interactions aren't able to use effects which lack this token. Valid values: WEEKLY Note: DAILY, MONTHLY and YEARLY also exist in the string dump but don't appear to work at present."
                 },
                 {
                   "Token": "IE_IMMEDIATE",
                   "Context": "Within I_EFFECT",
                   "Arguments": "",
                   "Description": "Indicates that the effect happens immediately."
                 },
                 {
                   "Token": "IE_LOCATION",
                   "Context": "Within I_EFFECT",
                   "Arguments": "Location Hint",
                   "Description": "Prevents the interaction effect from manifesting unless the target is in a location which meets the specified criteria. Valid values:  IN_WATER IN_MAGMA NO_WATER NO_MAGMA NO_THICK_FOG OUTSIDE A depth of 1/7 is sufficient for IN_WATER and IN_MAGMA. Note: NO_THICK_FOG and OUTSIDE are accepted as valid location hints when specified with IE_LOCATION, but don't appear to work. It's possible that they're currently only implemented for use with [CDI:LOCATION_HINT]."
                 },
                 {
                   "Token": "IE_ADD_WEATHER",
                   "Context": "Within I_EFFECT:CHANGE_WEATHER",
                   "Arguments": "type",
                   "Description": "Indicates what type of weather is added. Valid values: FOG_MIST FOG_NORMAL FOG_THICK FRONT_WARM FRONT_COLD FRONT_OCCLUDED STRATUS_ALTO STRATUS_PROPER STRATUS_NIMBUS CUMULUS_MED CUMULUS_MULTI CUMULUS_NIMBUS CIRRUS"
                 },
                 {
                   "Token": "IE_REMOVE_WEATHER",
                   "Context": "Within I_EFFECT:CHANGE_WEATHER",
                   "Arguments": "type",
                   "Description": "Indicates what type of weather is removed. See above for a list of valid weather types."
                 },
                 {
                   "Token": "IE_GRIME_LEVEL",
                   "Context": "Within I_EFFECT:CLEAN",
                   "Arguments": "amount?",
                   "Description": "[IE_GRIME_LEVEL:2] appears in the default cleaning interaction, and may indicate amount of grime cleaned."
                 },
                 {
                   "Token": "IE_SYNDROME_TAG",
                   "Context": "Within I_EFFECT:CLEAN",
                   "Arguments": "syndrome trigger flag",
                   "Description": "When a creature cleans off a contaminant which is associated with a syndrome, the syndrome will be contracted if it has a matching trigger flag. This is what enables cats to become slightly inebriated when licking off alcohol. SYN_INGESTED appears to be the only syndrome trigger flag that works in this context."
                 },
                 {
                   "Token": "IE_PROPEL_FORCE",
                   "Context": "Within I_EFFECT:PROPEL_UNIT",
                   "Arguments": "amount",
                   "Description": "Indicates the amount of force that the target will be propelled with."
                 },
                 {
                   "Token": "IE_ITEM",
                   "Context": "Within I_EFFECT:CREATE_ITEM",
                   "Arguments": "<probability>:<quantity>:item token:material token",
                   "Description": "Defines what item will be created."
                 },
                 {
                   "Token": "IE_ITEM_QUALITY",
                   "Context": "Within I_EFFECT:CREATE_ITEM",
                   "Arguments": "<quality> OR <minimum quality>:<maximum quality>",
                   "Description": "Defines what quality the created item shall have. Can either be specified in the form of a single, fixed quality (it seems that ARTIFACT can only be used in this manner), or a minimum and maximum level (in which case the quality is selected randomly). Valid values (numerals only except for ARTIFACT): 0 = ordinary 1 = well-crafted 2 = finely crafted 3 = superior quality 4 = exceptional 5 = masterwork ARTIFACT"
                 },
                 {
                   "Token": "IE_SET_QUALITY",
                   "Context": "Within I_EFFECT:CHANGE_ITEM_QUALITY",
                   "Arguments": "quality level",
                   "Description": "Defines a fixed quality level which the affected item(s) will be set to (decreasing or increasing in quality as necessary). See above for a list of valid quality levels (but note that ARTIFACT cannot be used in this effect)."
                 },
                 {
                   "Token": "IE_CHANGE_QUALITY",
                   "Context": "Within I_EFFECT:CHANGE_ITEM_QUALITY",
                   "Arguments": "amount",
                   "Description": "Determines how much the quality of the item(s) will be changed. For instance, improving a well-crafted -item- (quality level 1) by 2 will turn it into a superior-quality *item* (quality level 3). A negative value can be used to decrease quality. Quality cannot be increased beyond level 5 (masterwork) or decreased below level 0 (ordinary)."
                 },
                 {
                   "Token": "CREATURE",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<creature token>:<caste token>",
                   "Description": "Indicates which specific creature will be created when using this interaction. ANY can be used in place of a specific caste token. Only one [CREATURE] may currently be specified per interaction effect."
                 },
                 {
                   "Token": "IE_CREATURE_FLAG",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<creature flag>",
                   "Description": "When this token is added to a random creature summoning effect, it narrows down the selection to creatures which have the specified creature flag. This token may be used multiple times per interaction effect; creatures which lack any of the indicated flags will never be summoned."
                 },
                 {
                   "Token": "IE_FORBIDDEN_CREATURE_FLAG",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<creature flag>",
                   "Description": "When this token is added to a random creature summoning effect, any creature with the specified creature flag will be excluded from the selection. This token may be used multiple times per interaction effect; creatures which possess any of the indicated flags will never be summoned."
                 },
                 {
                   "Token": "IE_CREATURE_CASTE_FLAG",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<caste flag>",
                   "Description": "When this token is added to a random creature summoning effect, it narrows down the selection to creatures which have the specified caste flag. This token may be used multiple times per interaction effect; creatures which lack any of the indicated flags will never be summoned."
                 },
                 {
                   "Token": "IE_FORBIDDEN_CREATURE_CASTE_FLAG",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<caste flag>",
                   "Description": "When this token is added to a random creature summoning effect, it excludes any creature with the specified caste flag. This token may be used multiple times per interaction effect; creatures which possess any of the indicated flags will never be summoned."
                 },
                 {
                   "Token": "IE_HAVE_FAST_EFFORTLESS_GAIT_SPEED",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<minimum gait speed>",
                   "Description": "When this token is added to a random creature summoning effect, it narrows down the selection to creatures which have at least one gait with an <energy expenditure> of 0 and a <max speed> less than or equal to the specified <minimum gait speed> (\"less than\" because lower is faster in the scale used for gait speed). [2]"
                 },
                 {
                   "Token": "IE_ALL_SLOW_EFFORTLESS_GAIT_SPEED",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<maximum gait speed>",
                   "Description": "When this token is added to a random creature summoning effect, it excludes any creatures which have at least one gait with an <energy expenditure> of 0 and a <max speed> value less than or equal to the specified <maximum gait speed> (note that larger values are slower in the scale used for gait speed). [3]"
                 },
                 {
                   "Token": "IE_TIME_RANGE",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "<minimum ticks>:<maximum ticks>",
                   "Description": "The summoned unit vanishes in a puff of smoke once a certain amount of time has elapsed. The time limit is a randomly selected number of ticks within the specified minimum-maximum time range. The unit will persist indefinitely if this token is omitted."
                 },
                 {
                   "Token": "IE_MAKE_PET_IF_POSSIBLE",
                   "Context": "Within I_EFFECT:SUMMON_UNIT",
                   "Arguments": "",
                   "Description": "Makes the summoned unit behave as a pet of the unit who performed the summoning interaction."
                 },
                 {
                   "Token": "GENERATED",
                   "Context": "Global",
                   "Arguments": "",
                   "Description": "Indicates that this is a generated interaction. Cannot be specified in user-defined raws."
                 }
            ]
        },
        {
            "name": "INORGANIC",
            "description": "inorganic material definitions",
            "token": [

            ]
        },
        {
            "name": "TEXT_SET",
            "description": "text descriptions",
            "token": [

            ]
        },
        {
            "name": "ITEM_AMMO",
            "description": "ammunition for ranged weapons",
            "token": [
                {
                    "Token": "NAME",
                    "Arguments": "singular:plural",
                    "Description": "What this item will be called in-game."
                },
                {
                    "Token": "CLASS",
                    "Arguments": "anything",
                    "Description": "This ammo can be fired from a weapon that is set to fire the same ammo type. Defaults to BOLT."
                },
                {
                    "Token": "SIZE / WEIGHT",
                    "Arguments": "value",
                    "Description": "How large the ammunition is. Required."
                },
                {
                    "Token": "ATTACK",
                    "Arguments": "attacktype:BLUNT or EDGE contact_area:value penetration_size:value verb2nd:string verb3rd:string noun:string velocity_multiplier:value",
                    "Description": "Specifies the attack characteristics of the ammunition."
                }
            ]
        },
        {
            "name": "ITEM_ARMOR",
            "description": "body clothing, including armor",
            "token": [
                {
                    "Token": "NAME",
                    "Arguments": "singular:plural",
                    "Usage": "Required",
                    "Description": "What this item will be called in-game."
                },
                {
                    "Token": "ADJECTIVE",
                    "Arguments": "adjective",
                    "Usage": "All garments and shields",
                    "Description": "Appears before the name of the garment's material. E.g. \"long cow leather skirt\""
                },
                {
                    "Token": "MATERIAL_SIZE",
                    "Arguments": "value",
                    "Usage": "Required",
                    "Description": "How much material is needed to make the item. Most important with bars. The number of bars required to make the item is the value divided by three."
                },
                {
                    "Token": "ARMORLEVEL",
                    "Arguments": "0 - clothing\n 1 - leather\n 2 - chain\n 3 - plate",
                    "Usage": "All garments and shields",
                    "Description": "The garment's general purpose. Defaults to 1 for shields, 0 for everything else. Class 0 items are claimed and used by civilians as ordinary clothing (unless LAYER is ARMOR) and are subject to wear."
                },
                {
                    "Token": "METAL_ARMOR_LEVELS",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Metal versions of this item count as one ARMORLEVEL higher and thus won't be worn by random peasants. This tag will not work unless ARMORLEVEL is explicitly declared: if you leave out ARMORLEVEL, even metal armor will default to level 0."
                },
                {
                    "Token": "CHAIN_METAL_TEXT",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Metal versions of this item will have \"chain\" added between the material and item name."
                },
                {
                    "Token": "PREPLURAL",
                    "Arguments": "<phrase> of",
                    "Usage": "ITEM_ARMOR\nITEM_PANTS",
                    "Description": "Changes the plural form of this item to \"<phrase of> item\". Primarily pertains to the stock screens. Example, \"suits of\" platemail, \"pairs of\" trousers, etc."
                },
                {
                    "Token": "MATERIAL_PLACEHOLDER",
                    "Arguments": "adjective",
                    "Usage": "ITEM_ARMOR\nITEM_PANTS",
                    "Description": "If the item has no material associated with it (e.g. stockpile menus and trade negotiations), this will be displayed in its place. Used for leather armor."
                },
                {
                    "Token": "VALUE",
                    "Arguments": "",
                    "Usage": "",
                    "Description": "Unused. Defaults to -1."
                },
                {
                    "Token": "UPSTEP",
                    "Arguments": "value, MAX",
                    "Usage": "ITEM_GLOVES\nITEM_SHOES\nITEM_SHIELD",
                    "Description": "Length of gloves or footwear, counted in [LIMB] body parts towards the torso. A value of 1 lets gloves cover the lower arms, a value of 2 stretches a boot all the way over the upper leg and so on. Regardless of the value, none of these items can ever extend to cover the upper or lower body. Shields also have this token, but it only seems to affect weight."
                },
                {
                    "Token": "UBSTEP",
                    "Arguments": "value, MAX",
                    "Usage": "ITEM_ARMOR",
                    "Description": "Length of the sleeves, counted in [LIMB] body parts towards the hands. A value of 0 only protects both halves of the torso, 1 extends over the upper arms and so on. Regardless of the value, body armor can never extend to cover the hands or head. Currently buggedBug:1821, high values of UBSTEP will result in the item protecting facial features, fingers, and toes, while leaving those parts that it cannot protect unprotected (but still counting them as steps)."
                },
                {
                    "Token": "LBSTEP",
                    "Arguments": "value or MAX",
                    "Usage": "ITEM_ARMOR\nITEM_PANTS",
                    "Description": "Length of the legs/hem, counted in [LIMB] body parts towards the feet. A value of 0 only covers the lower body, 1 extends over the upper legs and so on. Regardless of the value, body armor or pants can never extend to cover the feet."
                },
                {
                    "Token": "BLOCKCHANCE",
                    "Arguments": "value",
                    "Usage": "ITEM_SHIELD",
                    "Description": "Affects the block chance of the shield. Defaults to 10."
                },
                {
                    "Token": "SOFT",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Clothiers can make this item from all kinds of cloth. If paired with [LEATHER], the item has an equal chance of being either in randomly generated outfits. Further uses of this tag are unknown."
                },
                {
                    "Token": "HARD",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Default state in the absence of a [SOFT] token. Actual effects unknown."
                },
                {
                    "Token": "METAL",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Item can be made from metal. Overrides [SOFT] and [LEATHER] in randomly generated outfits, if the ARMORLEVEL permits. Civilizations with [WOOD_ARMOR] will make this item out of wood instead."
                },
                {
                    "Token": "BARRED",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Craftsmen can make this item from bones. Randomly generated outfits don't include bone armor."
                },
                {
                    "Token": "SCALED",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Craftsmen can make this item from shells. Randomly generated outfits don't include shell armor."
                },
                {
                    "Token": "LEATHER",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Leatherworkers can make this item from leather. If paired with [SOFT], this item has an equal chance of being either in randomly generated outfits."
                },
                {
                    "Token": "SHAPED",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Only one shaped piece of clothing can be worn on a single body slot at a time."
                },
                {
                    "Token": "STRUCTURAL_ELASTICITY_CHAIN_ALL",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Increases the *_STRAIN_AT_YIELD properties of the armor's material to 50000, if lower. This makes the garment flex and give way instead of shattering under force. Strong materials that resist cutting will blunt edged attacks into bone-crushing hits instead."
                },
                {
                    "Token": "STRUCTURAL_ELASTICITY_CHAIN_METAL",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Increases the *_STRAIN_AT_YIELD properties of the armor's material to 50000, but only if the garment is made from metal."
                },
                {
                    "Token": "STRUCTURAL_ELASTICITY_WOVEN_THREAD",
                    "Arguments": "",
                    "Usage": "All garments",
                    "Description": "Reduces the armor material's SHEAR_YIELD to 20000, SHEAR_FRACTURE to 30000 and increases the *_STRAIN_AT_YIELD properties to 50000, but only if the garment is made from cloth. This makes the item very weak against edged attacks, even if the thread material is normally very strong."
                },
                {
                    "Token": "LAYER_SIZE",
                    "Arguments": "value",
                    "Usage": "All garments",
                    "Description": "The item's bulkiness when worn. Aside from the layer limitations, it's a big contributor to the thickness and weight (and therefore price) of the garment. See Armor for more on item sizes and layering. Defaults to 10."
                },
                {
                    "Token": "LAYER_PERMIT",
                    "Arguments": "value",
                    "Usage": "All garments",
                    "Description": "The maximum amount of crap that can fit underneath the garment. See Armor for more on item sizes and layering. Defaults to 10."
                },
                {
                    "Token": "LAYER",
                    "Arguments": "UNDER\nOVER\nARMOR\nCOVER",
                    "Usage": "All garments",
                    "Description": "Where the item goes in relation to other clothes. Socks cannot be worn on top of boots! The LAYER_PERMIT of the highest layer is used on a given section of the body - you can fit a lot of shirts and other undergarments underneath a robe, but not if you wear a leather jerkin on top of it, and you can still wear a cloak over the whole ensemble. Defaults to UNDER."
                },
                {
                    "Token": "COVERAGE",
                    "Arguments": "% value",
                    "Usage": "All garments",
                    "Description": "How often the garment gets in the way of a contaminant or an attack. Armor with a 5% coverage value, for example, will be near useless because 95% of attacks will bypass it completely. Temperature effects and armor thickness are also influenced. Defaults to 100."
                }
            ]
        },
        {
            "name": "ITEM_FOOD",
            "description": "prepared food definitions",
            "token": [
                {
                  "Token": "NAME",
                  "Arguments": "singular:plural",
                  "Description": "What this item will be called in-game."
                },
                {
                  "Token": "LEVEL",
                  "Arguments": "",
                  "Description": "Specifies the number of ingredients that are used in this type of prepared meal - 2 for Easy, 3 for Fine, 4 for Lavish. Defaults to 2."
                }
            ]
        },
        {
            "name": "ITEM_GLOVES",
            "description": "hand clothing, including armor",
            "token": [

            ]
        },
        {
            "name": "ITEM_HELM",
            "description": "head clothing, including armor",
            "token": [

            ]
        },
        {
            "name": "ITEM_INSTRUMENT",
            "description": "instrument definitions",
            "token": [
                {
                   "Token": "PLACED_AS_BUILDING",
                   "Arguments": "",
                   "Description": "Makes the instrument stationary."
                 },
                 {
                   "Token": "DOMINANT_MATERIAL_PIECE",
                   "Arguments": "instrument piece",
                   "Description": "Sets a piece as the central part of the instrument."
                 },
                 {
                   "Token": "INSTRUMENT_PIECE",
                   "Arguments": "token tool token singular plural STANDARD/ALWAYS_PLURAL/ALWAYS_SINGULAR",
                   "Description": "Defines an instrument piece. token is the identifier that can be used in other raw tags to refer to this instrument piece. tool token is the tool which is required (and consumed) during the construction process to create this instrument piece. If an instrument does not have any pieces, SELF can be used for any argument which needs to be an instrument piece."
                 },
                 {
                   "Token": "VOLUME_mB",
                   "Arguments": "min max",
                   "Description": "The instrument's volume range, in millibels (100 mB = 1 dB)."
                 },
                 {
                   "Token": "SOUND_PRODUCTION",
                   "Arguments": "various tokens",
                   "Description": "Defines how a musician can produce sound when using this instrument. Can be used multiple times. Valid tokens and their required additional arguments are: PLUCKED_BY_BP, PLUCKED (requires two tokens, actor then target) BOWED (two tokens) STRUCK_BY_BP, STRUCK (two tokens) VIBRATE_BP_AGAINST_OPENING BLOW_AGAINST_FIPPLE, BLOW_OVER_OPENING_SIDE, BLOW_OVER_OPENING_END, BLOW_OVER_SINGLE_REED, BLOW_OVER_DOUBLE_REED, BLOW_OVER_FREE_REED STRUCK_TOGETHER, SHAKEN SCRAPED (two tokens), FRICTION (two tokens) RESONATOR BAG_OVER_REED (two tokens), AIR_OVER_REED (two tokens), AIR_OVER_FREE_REED (two tokens), AIR_AGAINST_FIPPLE (two tokens)"
                 },
                 {
                   "Token": "PITCH_CHOICE",
                   "Arguments": "method",
                   "Description": "Defines how the pitch can be varied by the musician. Can be used multiple times. Valid methods are: MEMBRANE_POSITION SUBPART_CHOICE KEYBOARD STOPPING_FRET (requires two tokens, first for \"string\" second for \"neck\" -- or whatever is being pressed against what), STOPPING_AGAINST_BODY (two tokens), STOPPING_HOLE, STOPPING_HOLE_KEY SLIDE HARMONIC_SERIES VALVE_ROUTES_AIR BP_IN_BELL FOOT_PEDALS (two token, first is what is being changed e.g. \"strings\", second is \"body\" which has pedalboard -- or whatever piece is being stepped on)"
                 },
                 {
                   "Token": "TUNING",
                   "Arguments": "method instrument piece",
                   "Description": "Can be used multiple times. Valid methods are: PEGS, ADJUSTABLE_BRIDGES, CROOKS, TIGHTENING, LEVERS."
                 },
                 {
                   "Token": "PITCH_RANGE",
                   "Arguments": "min pitch max pitch",
                   "Description": "From the example file: Pitch is <min>:<max> in cents with middle C at zero.  There are 1200 cents in an octave.  The game verbally differentiates values from -4200 to 4200, but you can go outside that if you like.  The in-game generated instruments will range from roughly C0 to C8 (-4800 to 4800), sometimes beyond for really unusual ones.         You can also use INDEFINITE_PITCH."
                 },
                 {
                   "Token": "INDEFINITE_PITCH",
                   "Arguments": "",
                   "Description": "May replace [PITCH_RANGE]."
                 },
                 {
                   "Token": "TIMBRE",
                   "Arguments": "any number of timbre words",
                   "Description": "Valid timbre words are: CLEAR, NOISY, FULL, THIN, ROUND, SHARP, SMOOTH, CHOPPY, STEADY, EVOLVING, STRONG, DELICATE, BRIGHT, GRACEFUL, SPARSE, BREATHY, STRAINED, BROAD, LIGHT, MELLOW, WOBBLING, FOCUSED, EVEN, FLUID, VIBRATING, QUAVERING, EERIE, FRAGILE, BRITTLE, PURE, PIERCING, STRIDENT, WAVERING, HARSH, REEDY, NASAL, BUZZY, ROUGH, WARM, RUGGED, HEAVY, FLAT, DARK, CRISP, SONOROUS, WATERY, GENTLE, SLICING, LIQUID, RAUCOUS, BREEZY, RASPY, WISPY, SHRILL, MUDDY, RICH, DULL, FLOATING, RINGING, RESONANT, SWEET, RIPPLING, SPARKLING."
                 },
                 {
                   "Token": "REGISTER",
                   "Arguments": "min pitch max pitch any number of timbre words",
                   "Description": "See PITCH_RANGE and TIMBRE for possible values. The pitch range overrides the global pitch for a register, but the register timbres are added to the global ones."
                 },
                 {
                   "Token": "MUSIC_SKILL",
                   "Arguments": "skill token",
                   "Description": "Which skill should be trained by playing the instrument. Any skill token is valid, but the in-game generated instruments only use PLAY_KEYBOARD_INSTRUMENT, PLAY_STRINGED_INSTRUMENT, PLAY_WIND_INSTRUMENT, or PLAY_PERCUSSION_INSTRUMENT. Levels in this skill do not seem to have any effect on the quality of music produced. Can only be used once."
                 },
                 {
                   "Token": "DESCRIPTION",
                   "Arguments": "description",
                   "Description": "A general description of the completed instrument.  Multiple [DESCRIPTION] tokens can be used in the same definition, with each appearing on a new line."
                 }
            ]
        },
        {
            "name": "ITEM_PANTS",
            "description": "lower body clothing, including armor",
            "token": [

            ]
        },
        {
            "name": "ITEM_SHIELD",
            "description": "shields",
            "token": [

            ]
        },
        {
            "name": "ITEM_SHOES",
            "description": "foot clothing, including armor",
            "token": [

            ]
        },
        {
            "name": "ITEM_SIEGEAMMO",
            "description": "ammunition for siege weapons that ballistae fire",
            "token": [
                {
                   "Token": "NAME",
                   "Arguments": "singular:plural",
                   "Description": "What this item will be called in-game."
                 },
                 {
                   "Token": "CLASS",
                   "Arguments": "",
                   "Description": "Specifies what type of siege engine uses this ammunition. Currently, only BALLISTA is permitted."
                 }
            ]
        },
        {
            "name": "ITEM_TOOL",
            "description": "multi-purpose items that can serve as a weapon, food storage container, etc",
            "token": [

            ]
        },
        {
            "name": "ITEM_TOY",
            "description": "toy definitions",
            "token": [
                 {
                    "Token": "NAME",
                    "Arguments": "singular:plural",
                    "Description": "What this item will be called in-game."
                  },
                  {
                    "Token": "HARD_MAT",
                    "Arguments": "",
                    "Description": "Presumably prevents the item from being made from cloth, silk, or leather, present on everything but puzzleboxes and drums. Appears to work backwards for strange moods."
                  }
            ]
        },
        {
            "name": "ITEM_TRAPCOMP",
            "description": "components that can be used in weapon traps (two special tags define trapcomps that can be used in other constructions: IS_SCREW and IS_SPIKE)",
            "token": [

            ]
        },
        {
            "name": "ITEM_WEAPON",
            "description": "weapons that are used by soldiers, as well as digging tools",
            "token": [

            ]
        },
        {
            "name": "ITEM",
            "description": "items ranging from ammunition to food types, has secondary types for the purposes of [TYPE:ID] ITEM_AMMO, ITEM_ARMOR, ITEM_FOOD, ITEM_GLOVES, ITEM_HELM, ITEM_INSTRUMENT, ITEM_PANTS, ITEM_SHIELD, ITEM_SHOES, ITEM_SIEGEAMMO, ITEM_TOOL, ITEM_TOY, ITEM_TRAPCOMP, ITEM_WEAPON",
            "token": [
                {
                   "Token": "BAR",
                   "Subtype": "NONE",
                   "Description": "Bars, such as metal, fuel, or soap. Standard dimension = 150."
                 },
                 {
                   "Token": "SMALLGEM",
                   "Subtype": "NONE",
                   "Description": "Cut gemstones usable in the jeweler's workshop"
                 },
                 {
                   "Token": "BLOCKS",
                   "Subtype": "NONE",
                   "Description": "Blocks of any kind."
                 },
                 {
                   "Token": "ROUGH",
                   "Subtype": "NONE",
                   "Description": "Rough gemstones or raw glass."
                 },
                 {
                   "Token": "BOULDER / STONE",
                   "Subtype": "NONE",
                   "Description": "Raw mined stone."
                 },
                 {
                   "Token": "WOOD",
                   "Subtype": "NONE",
                   "Description": "Wooden logs."
                 },
                 {
                   "Token": "DOOR",
                   "Subtype": "NONE",
                   "Description": "Doors and glass portals."
                 },
                 {
                   "Token": "FLOODGATE",
                   "Subtype": "NONE",
                   "Description": "Floodgates."
                 },
                 {
                   "Token": "BED",
                   "Subtype": "NONE",
                   "Description": "Beds."
                 },
                 {
                   "Token": "CHAIR",
                   "Subtype": "NONE",
                   "Description": "Chairs and thrones."
                 },
                 {
                   "Token": "CHAIN",
                   "Subtype": "NONE",
                   "Description": "Chains and ropes."
                 },
                 {
                   "Token": "FLASK",
                   "Subtype": "NONE",
                   "Description": "Flasks, vials, and waterskins."
                 },
                 {
                   "Token": "GOBLET",
                   "Subtype": "NONE",
                   "Description": "Goblets, mugs, and cups."
                 },
                 {
                   "Token": "INSTRUMENT",
                   "Subtype": "item_instrument.txt",
                   "Description": "Musical instruments."
                 },
                 {
                   "Token": "TOY",
                   "Subtype": "item_toy.txt",
                   "Description": "Toys."
                 },
                 {
                   "Token": "WINDOW",
                   "Subtype": "NONE",
                   "Description": "Glass windows."
                 },
                 {
                   "Token": "CAGE",
                   "Subtype": "NONE",
                   "Description": "Cages and terrariums."
                 },
                 {
                   "Token": "BARREL",
                   "Subtype": "NONE",
                   "Description": "Barrels."
                 },
                 {
                   "Token": "BUCKET",
                   "Subtype": "NONE",
                   "Description": "Buckets."
                 },
                 {
                   "Token": "ANIMALTRAP",
                   "Subtype": "NONE",
                   "Description": "Animal traps."
                 },
                 {
                   "Token": "TABLE",
                   "Subtype": "NONE",
                   "Description": "Tables."
                 },
                 {
                   "Token": "COFFIN",
                   "Subtype": "NONE",
                   "Description": "Coffins, caskets, and sarcophagi."
                 },
                 {
                   "Token": "STATUE",
                   "Subtype": "NONE",
                   "Description": "Statues."
                 },
                 {
                   "Token": "CORPSE",
                   "Subtype": "NONE",
                   "Description": "Corpses. Does not have a material that can be specified for reactions, but GET_MATERIAL_FROM_REAGENT will return the \"dominant\" material (normally flesh)."
                 },
                 {
                   "Token": "WEAPON",
                   "Subtype": "item_weapon.txt",
                   "Description": "Weapons."
                 },
                 {
                   "Token": "ARMOR",
                   "Subtype": "item_armor.txt",
                   "Description": "Armor and clothing worn on the upper body."
                 },
                 {
                   "Token": "SHOES",
                   "Subtype": "item_shoes.txt",
                   "Description": "Armor and clothing worn on the feet."
                 },
                 {
                   "Token": "SHIELD",
                   "Subtype": "item_shield.txt",
                   "Description": "Shields and bucklers."
                 },
                 {
                   "Token": "HELM",
                   "Subtype": "item_helm.txt",
                   "Description": "Armor and clothing worn on the head."
                 },
                 {
                   "Token": "GLOVES",
                   "Subtype": "item_gloves.txt",
                   "Description": "Armor and clothing worn on the hands."
                 },
                 {
                   "Token": "BOX",
                   "Subtype": "NONE",
                   "Description": "Chests (wood), coffers (stone), boxes (glass, default), and bags (cloth or leather)."
                 },
                 {
                   "Token": "BIN",
                   "Subtype": "NONE",
                   "Description": "Bins."
                 },
                 {
                   "Token": "ARMORSTAND",
                   "Subtype": "NONE",
                   "Description": "Armor stands."
                 },
                 {
                   "Token": "WEAPONRACK",
                   "Subtype": "NONE",
                   "Description": "Weapon racks."
                 },
                 {
                   "Token": "CABINET",
                   "Subtype": "NONE",
                   "Description": "Cabinets."
                 },
                 {
                   "Token": "FIGURINE",
                   "Subtype": "NONE",
                   "Description": "Figurines."
                 },
                 {
                   "Token": "AMULET",
                   "Subtype": "NONE",
                   "Description": "Amulets."
                 },
                 {
                   "Token": "SCEPTER",
                   "Subtype": "NONE",
                   "Description": "Scepters."
                 },
                 {
                   "Token": "AMMO",
                   "Subtype": "item_ammo.txt",
                   "Description": "Ammunition for hand-held weapons."
                 },
                 {
                   "Token": "CROWN",
                   "Subtype": "NONE",
                   "Description": "Crowns."
                 },
                 {
                   "Token": "RING",
                   "Subtype": "NONE",
                   "Description": "Rings."
                 },
                 {
                   "Token": "EARRING",
                   "Subtype": "NONE",
                   "Description": "Earrings."
                 },
                 {
                   "Token": "BRACELET",
                   "Subtype": "NONE",
                   "Description": "Bracelets."
                 },
                 {
                   "Token": "GEM",
                   "Subtype": "NONE",
                   "Description": "Large gems."
                 },
                 {
                   "Token": "ANVIL",
                   "Subtype": "NONE",
                   "Description": "Anvils."
                 },
                 {
                   "Token": "CORPSEPIECE",
                   "Subtype": "NONE",
                   "Description": "Body parts. Does not have a material that can be specified for reactions, but GET_MATERIAL_FROM_REAGENT will return the \"dominant\" material."
                 },
                 {
                   "Token": "REMAINS",
                   "Subtype": "NONE",
                   "Description": "Dead vermin bodies. Material is CREATURE_ID:CASTE."
                 },
                 {
                   "Token": "MEAT",
                   "Subtype": "NONE",
                   "Description": "Butchered meat."
                 },
                 {
                   "Token": "FISH",
                   "Subtype": "NONE",
                   "Description": "Prepared fish. Material is CREATURE_ID:CASTE."
                 },
                 {
                   "Token": "FISH_RAW",
                   "Subtype": "NONE",
                   "Description": "Freshly-caught fish. Material is CREATURE_ID:CASTE."
                 },
                 {
                   "Token": "VERMIN",
                   "Subtype": "NONE",
                   "Description": "Live vermin. Material is CREATURE_ID:CASTE."
                 },
                 {
                   "Token": "PET",
                   "Subtype": "NONE",
                   "Description": "Tame vermin. Material is CREATURE_ID:CASTE."
                 },
                 {
                   "Token": "SEEDS",
                   "Subtype": "NONE",
                   "Description": "Seeds from plants."
                 },
                 {
                   "Token": "PLANT",
                   "Subtype": "NONE",
                   "Description": "Plants."
                 },
                 {
                   "Token": "SKIN_TANNED",
                   "Subtype": "NONE",
                   "Description": "Leather."
                 },
                 {
                   "Token": "PLANT_GROWTH",
                   "Subtype": "growth ID",
                   "Description": "Plant growths.  Subtype is the GROWTH's identifier within the plant raws (e.g. \"LEAVES\" or \"FLOWERS\" for most trees)"
                 },
                 {
                   "Token": "THREAD",
                   "Subtype": "NONE",
                   "Description": "Thread (made at the farmer's workshop), webs (collected or undisturbed), and strands extracted from suitable stones. Standard dimension = 15000."
                 },
                 {
                   "Token": "CLOTH",
                   "Subtype": "NONE",
                   "Description": "Cloth made at the loom. Standard dimension = 10000."
                 },
                 {
                   "Token": "TOTEM",
                   "Subtype": "NONE",
                   "Description": "Skull totems."
                 },
                 {
                   "Token": "PANTS",
                   "Subtype": "item_pants.txt",
                   "Description": "Armor and clothing worn on the legs."
                 },
                 {
                   "Token": "BACKPACK",
                   "Subtype": "NONE",
                   "Description": "Backpacks."
                 },
                 {
                   "Token": "QUIVER",
                   "Subtype": "NONE",
                   "Description": "Quivers."
                 },
                 {
                   "Token": "CATAPULTPARTS",
                   "Subtype": "NONE",
                   "Description": "Catapult parts."
                 },
                 {
                   "Token": "BALLISTAPARTS",
                   "Subtype": "NONE",
                   "Description": "Ballista parts."
                 },
                 {
                   "Token": "SIEGEAMMO",
                   "Subtype": "item_siegeammo.txt",
                   "Description": "Siege engine ammunition."
                 },
                 {
                   "Token": "BALLISTAARROWHEAD",
                   "Subtype": "NONE",
                   "Description": "Ballista arrow heads."
                 },
                 {
                   "Token": "TRAPPARTS",
                   "Subtype": "NONE",
                   "Description": "Mechanisms."
                 },
                 {
                   "Token": "TRAPCOMP",
                   "Subtype": "item_trapcomp.txt",
                   "Description": "Trap components."
                 },
                 {
                   "Token": "DRINK",
                   "Subtype": "NONE",
                   "Description": "Alcoholic drinks. Standard dimension = 150."
                 },
                 {
                   "Token": "POWDER_MISC",
                   "Subtype": "NONE",
                   "Description": "Powders such as flour, dye, sand, or gypsum plaster. Standard dimension = 150."
                 },
                 {
                   "Token": "CHEESE",
                   "Subtype": "NONE",
                   "Description": "Pieces of cheese."
                 },
                 {
                   "Token": "FOOD",
                   "Subtype": "item_food.txt",
                   "Description": "Prepared meals."
                 },
                 {
                   "Token": "LIQUID_MISC",
                   "Subtype": "NONE",
                   "Description": "Liquids such as water, lye, and extracts. Standard dimension = 150."
                 },
                 {
                   "Token": "COIN",
                   "Subtype": "NONE",
                   "Description": "Coins."
                 },
                 {
                   "Token": "GLOB",
                   "Subtype": "NONE",
                   "Description": "Fat, tallow, pastes/pressed objects, and small bits of molten rock/metal. Standard dimension = 150."
                 },
                 {
                   "Token": "ROCK",
                   "Subtype": "NONE",
                   "Description": "Small rocks (usually sharpened and/or thrown in adventurer mode)."
                 },
                 {
                   "Token": "PIPE_SECTION",
                   "Subtype": "NONE",
                   "Description": "Pipe sections and glass tubes."
                 },
                 {
                   "Token": "HATCH_COVER",
                   "Subtype": "NONE",
                   "Description": "Hatch covers."
                 },
                 {
                   "Token": "GRATE",
                   "Subtype": "NONE",
                   "Description": "Grates."
                 },
                 {
                   "Token": "QUERN",
                   "Subtype": "NONE",
                   "Description": "Querns."
                 },
                 {
                   "Token": "MILLSTONE",
                   "Subtype": "NONE",
                   "Description": "Millstones."
                 },
                 {
                   "Token": "SPLINT",
                   "Subtype": "NONE",
                   "Description": "Splints."
                 },
                 {
                   "Token": "CRUTCH",
                   "Subtype": "NONE",
                   "Description": "Crutches."
                 },
                 {
                   "Token": "TRACTION_BENCH",
                   "Subtype": "NONE",
                   "Description": "Traction benches."
                 },
                 {
                   "Token": "ORTHOPEDIC_CAST",
                   "Subtype": "NONE",
                   "Description": "Casts."
                 },
                 {
                   "Token": "TOOL",
                   "Subtype": "item_tool.txt",
                   "Description": "Tools."
                 },
                 {
                   "Token": "SLAB",
                   "Subtype": "NONE",
                   "Description": "Slabs, memorials, and shop signs."
                 },
                 {
                   "Token": "EGG",
                   "Subtype": "NONE",
                   "Description": "Eggs. Material is CREATURE_ID:CASTE."
                 },
                 {
                   "Token": "BOOK",
                   "Subtype": "NONE",
                   "Description": "Books."
                 },
                 {
                   "Token": "SHEET",
                   "Subtype": "NONE",
                   "Description": "Sheets. Paper, papyrus, or parchment. Used for making quires and scrolls."
                 },
                 {
                   "Token": "BRANCH",
                   "Subtype": "NONE",
                   "Description": "Branches plucked from trees, used for making stone axes in adventurer mode."
                 },
                 {
                   "Token": "ANY_CRAFT",
                   "Subtype": "NONE",
                   "Valid Uses": "Reaction [REAGENT]",
                   "Description": "Matches FIGURINE, AMULET, SCEPTER, CROWN, RING, EARRING, or BRACELET."
                 },
                 {
                   "Token": "ANY_RAW_MATERIAL",
                   "Subtype": "NONE",
                   "Valid Uses": "Reaction [REAGENT]",
                   "Description": "Matches POWDER_MISC, BAR, BOULDER, or GLOB."
                 },
                 {
                   "Token": "CRAFTS",
                   "Subtype": "NONE",
                   "Valid Uses": "Reaction [PRODUCT]",
                   "Description": "Produces 1-3 items of any type possible to make with the specified material, normally the types FIGURINE, AMULET, SCEPTER, CROWN, RING, EARRING, or BRACELET, however GEM is also possible for some materials and there may be other possible results. The output depends entirely on the material used, and incredibly unusual materials may produce nothing at all, although most vanilla materials will produce GEMs at the very least."
                 },
                 {
                   "Token": "METAL_ORE",
                   "Subtype": "Metal",
                   "Valid Uses": "Reaction [REAGENT]",
                   "Description": "Matches a BOULDER item made of a material having [METAL_ORE:<Metal>:###]."
                 }
            ]
        },
        {
            "name": "LANGUAGE",
            "description": "word definitions for the languages used by ENTITY objects\nEntries beginning with [SYMBOL:ID] sort words into symbolic/poetic groups to be referenced by ENTITY preferences.\nEntries beginning with [WORD:ID] define words and their alternate forms (in English).",
            "token": [

            ]
        },
        {
            "name": "MATERIAL_TEMPLATE",
            "description": "definitions of information common to groups of materials (referenced all over the place)",
            "token": [

            ]
        },
        {
            "name": "PLANT",
            "description": "definitions of plants, their materials, and their derivatives",
            "token": [

            ]
        },
        {
            "name": "REACTION",
            "description": "reactions/custom workshop jobs (turn items into other items through dwarven or adventurer effort)",
            "token": [

            ]
        },
        {
            "name": "TISSUE_TEMPLATE",
            "description": " defines templated tissues for use with BODY_DETAIL_PLAN objects or in creatures.",
            "token": [

            ]
        },
        {
            "name": "MUSIC",
            "description": "defines music files",
            "token": [

            ]
        },
        {
            "name": "SOUND",
            "description": "defines game sound files",
            "token": [

            ]
        }
    ]
}